import{p as lu}from"./vendor.71f43189.js";var Uc={exports:{}},w={};/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */Object.defineProperty(w,"__esModule",{value:!0});const Jo="139",zf={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},Gf={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},cu=0,ol=1,hu=2,kf=3,Vf=0,kl=1,uu=2,Sr=3,qi=0,jt=1,Yi=2,Vl=1,Wf=2,Xn=0,zi=1,al=2,ll=3,cl=4,du=5,Fi=100,fu=101,pu=102,hl=103,ul=104,mu=200,gu=201,vu=202,_u=203,Wl=204,Xl=205,yu=206,xu=207,Mu=208,wu=209,bu=210,Eu=0,Tu=1,Su=2,Vo=3,Au=4,Ru=5,Cu=6,Lu=7,Is=0,Pu=1,Iu=2,En=0,Du=1,Fu=2,Ou=3,Nu=4,Uu=5,Ko=300,ui=301,di=302,gs=303,vs=304,Xr=306,_s=1e3,zt=1001,ys=1002,Tt=1003,Wo=1004,Xf=1004,Xo=1005,qf=1005,_t=1006,ql=1007,Yf=1007,nr=1008,Zf=1008,fi=1009,Bu=1010,Hu=1011,Lr=1012,zu=1013,ds=1014,Wn=1015,Gi=1016,Gu=1017,ku=1018,ki=1020,Vu=1021,Wu=1022,Kt=1023,Xu=1024,qu=1025,ci=1026,Zi=1027,Yu=1028,Zu=1029,Ju=1030,Ku=1031,ju=1033,No=33776,Uo=33777,Bo=33778,Ho=33779,dl=35840,fl=35841,pl=35842,ml=35843,$u=36196,gl=37492,vl=37496,_l=37808,yl=37809,xl=37810,Ml=37811,wl=37812,bl=37813,El=37814,Tl=37815,Sl=37816,Al=37817,Rl=37818,Cl=37819,Ll=37820,Pl=37821,Il=36492,Qu=2200,ed=2201,td=2202,xs=2300,Ms=2301,zo=2302,Ni=2400,Ui=2401,ws=2402,jo=2500,Yl=2501,nd=0,Jf=1,Kf=2,An=3e3,dt=3001,id=3200,rd=3201,ir=0,sd=1,jf="",wn="srgb",li="srgb-linear",$f=0,Go=7680,Qf=7681,ep=7682,tp=7683,np=34055,ip=34056,rp=5386,sp=512,op=513,ap=514,lp=515,cp=516,hp=517,up=518,od=519,Pr=35044,Ir=35048,dp=35040,fp=35045,pp=35049,mp=35041,gp=35046,vp=35050,_p=35042,yp="100",Dl="300 es",qo=1035;class vi{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const s=i.indexOf(t);s!==-1&&i.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let s=0,o=i.length;s<o;s++)i[s].call(this,e);e.target=null}}}const Ft=[];for(let r=0;r<256;r++)Ft[r]=(r<16?"0":"")+r.toString(16);let Bc=1234567;const Vi=Math.PI/180,bs=180/Math.PI;function $t(){const r=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(Ft[r&255]+Ft[r>>8&255]+Ft[r>>16&255]+Ft[r>>24&255]+"-"+Ft[e&255]+Ft[e>>8&255]+"-"+Ft[e>>16&15|64]+Ft[e>>24&255]+"-"+Ft[t&63|128]+Ft[t>>8&255]+"-"+Ft[t>>16&255]+Ft[t>>24&255]+Ft[n&255]+Ft[n>>8&255]+Ft[n>>16&255]+Ft[n>>24&255]).toLowerCase()}function yt(r,e,t){return Math.max(e,Math.min(t,r))}function Zl(r,e){return(r%e+e)%e}function xp(r,e,t,n,i){return n+(r-e)*(i-n)/(t-e)}function Mp(r,e,t){return r!==e?(t-r)/(e-r):0}function fs(r,e,t){return(1-t)*r+t*e}function wp(r,e,t,n){return fs(r,e,1-Math.exp(-t*n))}function bp(r,e=1){return e-Math.abs(Zl(r,e*2)-e)}function Ep(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*(3-2*r))}function Tp(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*r*(r*(r*6-15)+10))}function Sp(r,e){return r+Math.floor(Math.random()*(e-r+1))}function Ap(r,e){return r+Math.random()*(e-r)}function Rp(r){return r*(.5-Math.random())}function Cp(r){r!==void 0&&(Bc=r);let e=Bc+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function Lp(r){return r*Vi}function Pp(r){return r*bs}function Fl(r){return(r&r-1)===0&&r!==0}function ad(r){return Math.pow(2,Math.ceil(Math.log(r)/Math.LN2))}function Yo(r){return Math.pow(2,Math.floor(Math.log(r)/Math.LN2))}function Ip(r,e,t,n,i){const s=Math.cos,o=Math.sin,a=s(t/2),c=o(t/2),h=s((e+n)/2),u=o((e+n)/2),f=s((e-n)/2),d=o((e-n)/2),p=s((n-e)/2),v=o((n-e)/2);switch(i){case"XYX":r.set(a*u,c*f,c*d,a*h);break;case"YZY":r.set(c*d,a*u,c*f,a*h);break;case"ZXZ":r.set(c*f,c*d,a*u,a*h);break;case"XZX":r.set(a*u,c*v,c*p,a*h);break;case"YXY":r.set(c*p,a*u,c*v,a*h);break;case"ZYZ":r.set(c*v,c*p,a*u,a*h);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function Dp(r,e){switch(e.constructor){case Float32Array:return r;case Uint16Array:return r/65535;case Uint8Array:return r/255;case Int16Array:return Math.max(r/32767,-1);case Int8Array:return Math.max(r/127,-1);default:throw new Error("Invalid component type.")}}function Fp(r,e){switch(e.constructor){case Float32Array:return r;case Uint16Array:return Math.round(r*65535);case Uint8Array:return Math.round(r*255);case Int16Array:return Math.round(r*32767);case Int8Array:return Math.round(r*127);default:throw new Error("Invalid component type.")}}var ld=Object.freeze({__proto__:null,DEG2RAD:Vi,RAD2DEG:bs,generateUUID:$t,clamp:yt,euclideanModulo:Zl,mapLinear:xp,inverseLerp:Mp,lerp:fs,damp:wp,pingpong:bp,smoothstep:Ep,smootherstep:Tp,randInt:Sp,randFloat:Ap,randFloatSpread:Rp,seededRandom:Cp,degToRad:Lp,radToDeg:Pp,isPowerOfTwo:Fl,ceilPowerOfTwo:ad,floorPowerOfTwo:Yo,setQuaternionFromProperEuler:Ip,normalize:Fp,denormalize:Dp});class se{constructor(e=0,t=0){this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t,n){return n!==void 0&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),s=this.x-e.x,o=this.y-e.y;return this.x=s*n-o*i+e.x,this.y=s*i+o*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}se.prototype.isVector2=!0;class Lt{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,i,s,o,a,c,h){const u=this.elements;return u[0]=e,u[1]=i,u[2]=a,u[3]=t,u[4]=s,u[5]=c,u[6]=n,u[7]=o,u[8]=h,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,o=n[0],a=n[3],c=n[6],h=n[1],u=n[4],f=n[7],d=n[2],p=n[5],v=n[8],m=i[0],g=i[3],b=i[6],E=i[1],A=i[4],S=i[7],C=i[2],N=i[5],U=i[8];return s[0]=o*m+a*E+c*C,s[3]=o*g+a*A+c*N,s[6]=o*b+a*S+c*U,s[1]=h*m+u*E+f*C,s[4]=h*g+u*A+f*N,s[7]=h*b+u*S+f*U,s[2]=d*m+p*E+v*C,s[5]=d*g+p*A+v*N,s[8]=d*b+p*S+v*U,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],o=e[4],a=e[5],c=e[6],h=e[7],u=e[8];return t*o*u-t*a*h-n*s*u+n*a*c+i*s*h-i*o*c}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],o=e[4],a=e[5],c=e[6],h=e[7],u=e[8],f=u*o-a*h,d=a*c-u*s,p=h*s-o*c,v=t*f+n*d+i*p;if(v===0)return this.set(0,0,0,0,0,0,0,0,0);const m=1/v;return e[0]=f*m,e[1]=(i*h-u*n)*m,e[2]=(a*n-i*o)*m,e[3]=d*m,e[4]=(u*t-i*c)*m,e[5]=(i*s-a*t)*m,e[6]=p*m,e[7]=(n*c-h*t)*m,e[8]=(o*t-n*s)*m,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,s,o,a){const c=Math.cos(s),h=Math.sin(s);return this.set(n*c,n*h,-n*(c*o+h*a)+o+e,-i*h,i*c,-i*(-h*o+c*a)+a+t,0,0,1),this}scale(e,t){const n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=t,n[4]*=t,n[7]*=t,this}rotate(e){const t=Math.cos(e),n=Math.sin(e),i=this.elements,s=i[0],o=i[3],a=i[6],c=i[1],h=i[4],u=i[7];return i[0]=t*s+n*c,i[3]=t*o+n*h,i[6]=t*a+n*u,i[1]=-n*s+t*c,i[4]=-n*o+t*h,i[7]=-n*a+t*u,this}translate(e,t){const n=this.elements;return n[0]+=e*n[2],n[3]+=e*n[5],n[6]+=e*n[8],n[1]+=t*n[2],n[4]+=t*n[5],n[7]+=t*n[8],this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}Lt.prototype.isMatrix3=!0;function cd(r){for(let e=r.length-1;e>=0;--e)if(r[e]>65535)return!0;return!1}const Op={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function Ar(r,e){return new Op[r](e)}function Es(r){return document.createElementNS("http://www.w3.org/1999/xhtml",r)}function Wi(r){return r<.04045?r*.0773993808:Math.pow(r*.9478672986+.0521327014,2.4)}function ko(r){return r<.0031308?r*12.92:1.055*Math.pow(r,.41666)-.055}const Ta={[wn]:{[li]:Wi},[li]:{[wn]:ko}},an={legacyMode:!0,get workingColorSpace(){return li},set workingColorSpace(r){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(r,e,t){if(this.legacyMode||e===t||!e||!t)return r;if(Ta[e]&&Ta[e][t]!==void 0){const n=Ta[e][t];return r.r=n(r.r),r.g=n(r.g),r.b=n(r.b),r}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(r,e){return this.convert(r,this.workingColorSpace,e)},toWorkingColorSpace:function(r,e){return this.convert(r,e,this.workingColorSpace)}},hd={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Ct={r:0,g:0,b:0},dn={h:0,s:0,l:0},Zs={h:0,s:0,l:0};function Sa(r,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?r+(e-r)*6*t:t<1/2?e:t<2/3?r+(e-r)*6*(2/3-t):r}function Js(r,e){return e.r=r.r,e.g=r.g,e.b=r.b,e}class xe{constructor(e,t,n){return t===void 0&&n===void 0?this.set(e):this.setRGB(e,t,n)}set(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=wn){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,an.toWorkingColorSpace(this,t),this}setRGB(e,t,n,i=li){return this.r=e,this.g=t,this.b=n,an.toWorkingColorSpace(this,i),this}setHSL(e,t,n,i=li){if(e=Zl(e,1),t=yt(t,0,1),n=yt(n,0,1),t===0)this.r=this.g=this.b=n;else{const s=n<=.5?n*(1+t):n+t-n*t,o=2*n-s;this.r=Sa(o,s,e+1/3),this.g=Sa(o,s,e),this.b=Sa(o,s,e-1/3)}return an.toWorkingColorSpace(this,i),this}setStyle(e,t=wn){function n(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let s;const o=i[1],a=i[2];switch(o){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(s[1],10))/255,this.g=Math.min(255,parseInt(s[2],10))/255,this.b=Math.min(255,parseInt(s[3],10))/255,an.toWorkingColorSpace(this,t),n(s[4]),this;if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(s[1],10))/100,this.g=Math.min(100,parseInt(s[2],10))/100,this.b=Math.min(100,parseInt(s[3],10))/100,an.toWorkingColorSpace(this,t),n(s[4]),this;break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)){const c=parseFloat(s[1])/360,h=parseInt(s[2],10)/100,u=parseInt(s[3],10)/100;return n(s[4]),this.setHSL(c,h,u,t)}break}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=i[1],o=s.length;if(o===3)return this.r=parseInt(s.charAt(0)+s.charAt(0),16)/255,this.g=parseInt(s.charAt(1)+s.charAt(1),16)/255,this.b=parseInt(s.charAt(2)+s.charAt(2),16)/255,an.toWorkingColorSpace(this,t),this;if(o===6)return this.r=parseInt(s.charAt(0)+s.charAt(1),16)/255,this.g=parseInt(s.charAt(2)+s.charAt(3),16)/255,this.b=parseInt(s.charAt(4)+s.charAt(5),16)/255,an.toWorkingColorSpace(this,t),this}return e&&e.length>0?this.setColorName(e,t):this}setColorName(e,t=wn){const n=hd[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Wi(e.r),this.g=Wi(e.g),this.b=Wi(e.b),this}copyLinearToSRGB(e){return this.r=ko(e.r),this.g=ko(e.g),this.b=ko(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=wn){return an.fromWorkingColorSpace(Js(this,Ct),e),yt(Ct.r*255,0,255)<<16^yt(Ct.g*255,0,255)<<8^yt(Ct.b*255,0,255)<<0}getHexString(e=wn){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=li){an.fromWorkingColorSpace(Js(this,Ct),t);const n=Ct.r,i=Ct.g,s=Ct.b,o=Math.max(n,i,s),a=Math.min(n,i,s);let c,h;const u=(a+o)/2;if(a===o)c=0,h=0;else{const f=o-a;switch(h=u<=.5?f/(o+a):f/(2-o-a),o){case n:c=(i-s)/f+(i<s?6:0);break;case i:c=(s-n)/f+2;break;case s:c=(n-i)/f+4;break}c/=6}return e.h=c,e.s=h,e.l=u,e}getRGB(e,t=li){return an.fromWorkingColorSpace(Js(this,Ct),t),e.r=Ct.r,e.g=Ct.g,e.b=Ct.b,e}getStyle(e=wn){return an.fromWorkingColorSpace(Js(this,Ct),e),e!==wn?`color(${e} ${Ct.r} ${Ct.g} ${Ct.b})`:`rgb(${Ct.r*255|0},${Ct.g*255|0},${Ct.b*255|0})`}offsetHSL(e,t,n){return this.getHSL(dn),dn.h+=e,dn.s+=t,dn.l+=n,this.setHSL(dn.h,dn.s,dn.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(dn),e.getHSL(Zs);const n=fs(dn.h,Zs.h,t),i=fs(dn.s,Zs.s,t),s=fs(dn.l,Zs.l,t);return this.setHSL(n,i,s),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),e.normalized===!0&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}xe.NAMES=hd;xe.prototype.isColor=!0;xe.prototype.r=1;xe.prototype.g=1;xe.prototype.b=1;let lr;class _i{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement=="undefined")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{lr===void 0&&(lr=Es("canvas")),lr.width=e.width,lr.height=e.height;const n=lr.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=lr}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement!="undefined"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&e instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&e instanceof ImageBitmap){const t=Es("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),s=i.data;for(let o=0;o<s.length;o++)s[o]=Wi(s[o]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(Wi(t[n]/255)*255):t[n]=Wi(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}class Bi{constructor(e=null){this.uuid=$t(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let s;if(Array.isArray(i)){s=[];for(let o=0,a=i.length;o<a;o++)i[o].isDataTexture?s.push(Aa(i[o].image)):s.push(Aa(i[o]))}else s=Aa(i);n.url=s}return t||(e.images[this.uuid]=n),n}}function Aa(r){return typeof HTMLImageElement!="undefined"&&r instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&r instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&r instanceof ImageBitmap?_i.getDataURL(r):r.data?{data:Array.prototype.slice.call(r.data),width:r.width,height:r.height,type:r.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}Bi.prototype.isSource=!0;let Np=0;class At extends vi{constructor(e=At.DEFAULT_IMAGE,t=At.DEFAULT_MAPPING,n=zt,i=zt,s=_t,o=nr,a=Kt,c=fi,h=1,u=An){super();Object.defineProperty(this,"id",{value:Np++}),this.uuid=$t(),this.name="",this.source=new Bi(e),this.mipmaps=[],this.mapping=t,this.wrapS=n,this.wrapT=i,this.magFilter=s,this.minFilter=o,this.anisotropy=h,this.format=a,this.internalFormat=null,this.type=c,this.offset=new se(0,0),this.repeat=new se(1,1),this.center=new se(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Lt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=u,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==Ko)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case _s:e.x=e.x-Math.floor(e.x);break;case zt:e.x=e.x<0?0:1;break;case ys:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case _s:e.y=e.y-Math.floor(e.y);break;case zt:e.y=e.y<0?0:1;break;case ys:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}}At.DEFAULT_IMAGE=null;At.DEFAULT_MAPPING=Ko;At.prototype.isTexture=!0;class st{constructor(e=0,t=0,n=0,i=1){this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=this.w,o=e.elements;return this.x=o[0]*t+o[4]*n+o[8]*i+o[12]*s,this.y=o[1]*t+o[5]*n+o[9]*i+o[13]*s,this.z=o[2]*t+o[6]*n+o[10]*i+o[14]*s,this.w=o[3]*t+o[7]*n+o[11]*i+o[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,s;const c=e.elements,h=c[0],u=c[4],f=c[8],d=c[1],p=c[5],v=c[9],m=c[2],g=c[6],b=c[10];if(Math.abs(u-d)<.01&&Math.abs(f-m)<.01&&Math.abs(v-g)<.01){if(Math.abs(u+d)<.1&&Math.abs(f+m)<.1&&Math.abs(v+g)<.1&&Math.abs(h+p+b-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const A=(h+1)/2,S=(p+1)/2,C=(b+1)/2,N=(u+d)/4,U=(f+m)/4,D=(v+g)/4;return A>S&&A>C?A<.01?(n=0,i=.707106781,s=.707106781):(n=Math.sqrt(A),i=N/n,s=U/n):S>C?S<.01?(n=.707106781,i=0,s=.707106781):(i=Math.sqrt(S),n=N/i,s=D/i):C<.01?(n=.707106781,i=.707106781,s=0):(s=Math.sqrt(C),n=U/s,i=D/s),this.set(n,i,s,t),this}let E=Math.sqrt((g-v)*(g-v)+(f-m)*(f-m)+(d-u)*(d-u));return Math.abs(E)<.001&&(E=1),this.x=(g-v)/E,this.y=(f-m)/E,this.z=(d-u)/E,this.w=Math.acos((h+p+b-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t,n){return n!==void 0&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}st.prototype.isVector4=!0;class Gt extends vi{constructor(e,t,n={}){super();this.width=e,this.height=t,this.depth=1,this.scissor=new st(0,0,e,t),this.scissorTest=!1,this.viewport=new st(0,0,e,t);const i={width:e,height:t,depth:1};this.texture=new At(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.internalFormat=n.internalFormat!==void 0?n.internalFormat:null,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:_t,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null,this.samples=n.samples!==void 0?n.samples:0}setSize(e,t,n=1){(this.width!==e||this.height!==t||this.depth!==n)&&(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0,this.texture.image=Object.assign({},e.texture.image),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}Gt.prototype.isWebGLRenderTarget=!0;class qr extends At{constructor(e=null,t=1,n=1,i=1){super(null);this.image={data:e,width:t,height:n,depth:i},this.magFilter=Tt,this.minFilter=Tt,this.wrapR=zt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}qr.prototype.isDataArrayTexture=!0;class ud extends Gt{constructor(e,t,n){super(e,t);this.depth=n,this.texture=new qr(null,e,t,n),this.texture.isRenderTargetTexture=!0}}ud.prototype.isWebGLArrayRenderTarget=!0;class Ds extends At{constructor(e=null,t=1,n=1,i=1){super(null);this.image={data:e,width:t,height:n,depth:i},this.magFilter=Tt,this.minFilter=Tt,this.wrapR=zt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}Ds.prototype.isData3DTexture=!0;class dd extends Gt{constructor(e,t,n){super(e,t);this.depth=n,this.texture=new Ds(null,e,t,n),this.texture.isRenderTargetTexture=!0}}dd.prototype.isWebGL3DRenderTarget=!0;class fd extends Gt{constructor(e,t,n,i={}){super(e,t,i);const s=this.texture;this.texture=[];for(let o=0;o<n;o++)this.texture[o]=s.clone(),this.texture[o].isRenderTargetTexture=!0}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,s=this.texture.length;i<s;i++)this.texture[i].image.width=e,this.texture[i].image.height=t,this.texture[i].image.depth=n;this.dispose()}return this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t),this}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this.texture.length=0;for(let t=0,n=e.texture.length;t<n;t++)this.texture[t]=e.texture[t].clone();return this}}fd.prototype.isWebGLMultipleRenderTargets=!0;class Ot{constructor(e=0,t=0,n=0,i=1){this._x=e,this._y=t,this._z=n,this._w=i}static slerp(e,t,n,i){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),n.slerpQuaternions(e,t,i)}static slerpFlat(e,t,n,i,s,o,a){let c=n[i+0],h=n[i+1],u=n[i+2],f=n[i+3];const d=s[o+0],p=s[o+1],v=s[o+2],m=s[o+3];if(a===0){e[t+0]=c,e[t+1]=h,e[t+2]=u,e[t+3]=f;return}if(a===1){e[t+0]=d,e[t+1]=p,e[t+2]=v,e[t+3]=m;return}if(f!==m||c!==d||h!==p||u!==v){let g=1-a;const b=c*d+h*p+u*v+f*m,E=b>=0?1:-1,A=1-b*b;if(A>Number.EPSILON){const C=Math.sqrt(A),N=Math.atan2(C,b*E);g=Math.sin(g*N)/C,a=Math.sin(a*N)/C}const S=a*E;if(c=c*g+d*S,h=h*g+p*S,u=u*g+v*S,f=f*g+m*S,g===1-a){const C=1/Math.sqrt(c*c+h*h+u*u+f*f);c*=C,h*=C,u*=C,f*=C}}e[t]=c,e[t+1]=h,e[t+2]=u,e[t+3]=f}static multiplyQuaternionsFlat(e,t,n,i,s,o){const a=n[i],c=n[i+1],h=n[i+2],u=n[i+3],f=s[o],d=s[o+1],p=s[o+2],v=s[o+3];return e[t]=a*v+u*f+c*p-h*d,e[t+1]=c*v+u*d+h*f-a*p,e[t+2]=h*v+u*p+a*d-c*f,e[t+3]=u*v-a*f-c*d-h*p,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){if(!(e&&e.isEuler))throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const n=e._x,i=e._y,s=e._z,o=e._order,a=Math.cos,c=Math.sin,h=a(n/2),u=a(i/2),f=a(s/2),d=c(n/2),p=c(i/2),v=c(s/2);switch(o){case"XYZ":this._x=d*u*f+h*p*v,this._y=h*p*f-d*u*v,this._z=h*u*v+d*p*f,this._w=h*u*f-d*p*v;break;case"YXZ":this._x=d*u*f+h*p*v,this._y=h*p*f-d*u*v,this._z=h*u*v-d*p*f,this._w=h*u*f+d*p*v;break;case"ZXY":this._x=d*u*f-h*p*v,this._y=h*p*f+d*u*v,this._z=h*u*v+d*p*f,this._w=h*u*f-d*p*v;break;case"ZYX":this._x=d*u*f-h*p*v,this._y=h*p*f+d*u*v,this._z=h*u*v-d*p*f,this._w=h*u*f+d*p*v;break;case"YZX":this._x=d*u*f+h*p*v,this._y=h*p*f+d*u*v,this._z=h*u*v-d*p*f,this._w=h*u*f-d*p*v;break;case"XZY":this._x=d*u*f-h*p*v,this._y=h*p*f-d*u*v,this._z=h*u*v+d*p*f,this._w=h*u*f+d*p*v;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],s=t[8],o=t[1],a=t[5],c=t[9],h=t[2],u=t[6],f=t[10],d=n+a+f;if(d>0){const p=.5/Math.sqrt(d+1);this._w=.25/p,this._x=(u-c)*p,this._y=(s-h)*p,this._z=(o-i)*p}else if(n>a&&n>f){const p=2*Math.sqrt(1+n-a-f);this._w=(u-c)/p,this._x=.25*p,this._y=(i+o)/p,this._z=(s+h)/p}else if(a>f){const p=2*Math.sqrt(1+a-n-f);this._w=(s-h)/p,this._x=(i+o)/p,this._y=.25*p,this._z=(c+u)/p}else{const p=2*Math.sqrt(1+f-n-a);this._w=(o-i)/p,this._x=(s+h)/p,this._y=(c+u)/p,this._z=.25*p}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(yt(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e,t){return t!==void 0?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,s=e._z,o=e._w,a=t._x,c=t._y,h=t._z,u=t._w;return this._x=n*u+o*a+i*h-s*c,this._y=i*u+o*c+s*a-n*h,this._z=s*u+o*h+n*c-i*a,this._w=o*u-n*a-i*c-s*h,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,s=this._z,o=this._w;let a=o*e._w+n*e._x+i*e._y+s*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=n,this._y=i,this._z=s,this;const c=1-a*a;if(c<=Number.EPSILON){const p=1-t;return this._w=p*o+t*this._w,this._x=p*n+t*this._x,this._y=p*i+t*this._y,this._z=p*s+t*this._z,this.normalize(),this._onChangeCallback(),this}const h=Math.sqrt(c),u=Math.atan2(h,a),f=Math.sin((1-t)*u)/h,d=Math.sin(t*u)/h;return this._w=o*f+this._w*d,this._x=n*f+this._x*d,this._y=i*f+this._y*d,this._z=s*f+this._z*d,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),i=2*Math.PI*Math.random(),s=2*Math.PI*Math.random();return this.set(t*Math.cos(i),n*Math.sin(s),n*Math.cos(s),t*Math.sin(i))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}Ot.prototype.isQuaternion=!0;class P{constructor(e=0,t=0,n=0){this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e,t){return t!==void 0?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(Hc.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Hc.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6]*i,this.y=s[1]*t+s[4]*n+s[7]*i,this.z=s[2]*t+s[5]*n+s[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=e.elements,o=1/(s[3]*t+s[7]*n+s[11]*i+s[15]);return this.x=(s[0]*t+s[4]*n+s[8]*i+s[12])*o,this.y=(s[1]*t+s[5]*n+s[9]*i+s[13])*o,this.z=(s[2]*t+s[6]*n+s[10]*i+s[14])*o,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,s=e.x,o=e.y,a=e.z,c=e.w,h=c*t+o*i-a*n,u=c*n+a*t-s*i,f=c*i+s*n-o*t,d=-s*t-o*n-a*i;return this.x=h*c+d*-s+u*-a-f*-o,this.y=u*c+d*-o+f*-s-h*-a,this.z=f*c+d*-a+h*-o-u*-s,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*i,this.y=s[1]*t+s[5]*n+s[9]*i,this.z=s[2]*t+s[6]*n+s[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e,t){return t!==void 0?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,s=e.z,o=t.x,a=t.y,c=t.z;return this.x=i*c-s*a,this.y=s*o-n*c,this.z=n*a-i*o,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return Ra.copy(this).projectOnVector(e),this.sub(Ra)}reflect(e){return this.sub(Ra.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(yt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t,n){return n!==void 0&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}P.prototype.isVector3=!0;const Ra=new P,Hc=new Ot;class en{constructor(e=new P(1/0,1/0,1/0),t=new P(-1/0,-1/0,-1/0)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=1/0,n=1/0,i=1/0,s=-1/0,o=-1/0,a=-1/0;for(let c=0,h=e.length;c<h;c+=3){const u=e[c],f=e[c+1],d=e[c+2];u<t&&(t=u),f<n&&(n=f),d<i&&(i=d),u>s&&(s=u),f>o&&(o=f),d>a&&(a=d)}return this.min.set(t,n,i),this.max.set(s,o,a),this}setFromBufferAttribute(e){let t=1/0,n=1/0,i=1/0,s=-1/0,o=-1/0,a=-1/0;for(let c=0,h=e.count;c<h;c++){const u=e.getX(c),f=e.getY(c),d=e.getZ(c);u<t&&(t=u),f<n&&(n=f),d<i&&(i=d),u>s&&(s=u),f>o&&(o=f),d>a&&(a=d)}return this.min.set(t,n,i),this.max.set(s,o,a),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Ti.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0)if(t&&n.attributes!=null&&n.attributes.position!==void 0){const s=n.attributes.position;for(let o=0,a=s.count;o<a;o++)Ti.fromBufferAttribute(s,o).applyMatrix4(e.matrixWorld),this.expandByPoint(Ti)}else n.boundingBox===null&&n.computeBoundingBox(),Ca.copy(n.boundingBox),Ca.applyMatrix4(e.matrixWorld),this.union(Ca);const i=e.children;for(let s=0,o=i.length;s<o;s++)this.expandByObject(i[s],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,Ti),Ti.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(is),Ks.subVectors(this.max,is),cr.subVectors(e.a,is),hr.subVectors(e.b,is),ur.subVectors(e.c,is),ei.subVectors(hr,cr),ti.subVectors(ur,hr),Si.subVectors(cr,ur);let t=[0,-ei.z,ei.y,0,-ti.z,ti.y,0,-Si.z,Si.y,ei.z,0,-ei.x,ti.z,0,-ti.x,Si.z,0,-Si.x,-ei.y,ei.x,0,-ti.y,ti.x,0,-Si.y,Si.x,0];return!La(t,cr,hr,ur,Ks)||(t=[1,0,0,0,1,0,0,0,1],!La(t,cr,hr,ur,Ks))?!1:(js.crossVectors(ei,ti),t=[js.x,js.y,js.z],La(t,cr,hr,ur,Ks))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return Ti.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=this.getSize(Ti).length()*.5,e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Bn[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Bn[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Bn[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Bn[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Bn[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Bn[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Bn[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Bn[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Bn),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}en.prototype.isBox3=!0;const Bn=[new P,new P,new P,new P,new P,new P,new P,new P],Ti=new P,Ca=new en,cr=new P,hr=new P,ur=new P,ei=new P,ti=new P,Si=new P,is=new P,Ks=new P,js=new P,Ai=new P;function La(r,e,t,n,i){for(let s=0,o=r.length-3;s<=o;s+=3){Ai.fromArray(r,s);const a=i.x*Math.abs(Ai.x)+i.y*Math.abs(Ai.y)+i.z*Math.abs(Ai.z),c=e.dot(Ai),h=t.dot(Ai),u=n.dot(Ai);if(Math.max(-Math.max(c,h,u),Math.min(c,h,u))>a)return!1}return!0}const Up=new en,zc=new P,$s=new P,Pa=new P;class yi{constructor(e=new P,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):Up.setFromPoints(e).getCenter(n);let i=0;for(let s=0,o=e.length;s<o;s++)i=Math.max(i,n.distanceToSquared(e[s]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){Pa.subVectors(e,this.center);const t=Pa.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.add(Pa.multiplyScalar(i/n)),this.radius+=i}return this}union(e){return this.center.equals(e.center)===!0?$s.set(0,0,1).multiplyScalar(e.radius):$s.subVectors(e.center,this.center).normalize().multiplyScalar(e.radius),this.expandByPoint(zc.copy(e.center).add($s)),this.expandByPoint(zc.copy(e.center).sub($s)),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Hn=new P,Ia=new P,Qs=new P,ni=new P,Da=new P,eo=new P,Fa=new P;class xi{constructor(e=new P,t=new P(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Hn)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Hn.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Hn.copy(this.direction).multiplyScalar(t).add(this.origin),Hn.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){Ia.copy(e).add(t).multiplyScalar(.5),Qs.copy(t).sub(e).normalize(),ni.copy(this.origin).sub(Ia);const s=e.distanceTo(t)*.5,o=-this.direction.dot(Qs),a=ni.dot(this.direction),c=-ni.dot(Qs),h=ni.lengthSq(),u=Math.abs(1-o*o);let f,d,p,v;if(u>0)if(f=o*c-a,d=o*a-c,v=s*u,f>=0)if(d>=-v)if(d<=v){const m=1/u;f*=m,d*=m,p=f*(f+o*d+2*a)+d*(o*f+d+2*c)+h}else d=s,f=Math.max(0,-(o*d+a)),p=-f*f+d*(d+2*c)+h;else d=-s,f=Math.max(0,-(o*d+a)),p=-f*f+d*(d+2*c)+h;else d<=-v?(f=Math.max(0,-(-o*s+a)),d=f>0?-s:Math.min(Math.max(-s,-c),s),p=-f*f+d*(d+2*c)+h):d<=v?(f=0,d=Math.min(Math.max(-s,-c),s),p=d*(d+2*c)+h):(f=Math.max(0,-(o*s+a)),d=f>0?s:Math.min(Math.max(-s,-c),s),p=-f*f+d*(d+2*c)+h);else d=o>0?-s:s,f=Math.max(0,-(o*d+a)),p=-f*f+d*(d+2*c)+h;return n&&n.copy(this.direction).multiplyScalar(f).add(this.origin),i&&i.copy(Qs).multiplyScalar(d).add(Ia),p}intersectSphere(e,t){Hn.subVectors(e.center,this.origin);const n=Hn.dot(this.direction),i=Hn.dot(Hn)-n*n,s=e.radius*e.radius;if(i>s)return null;const o=Math.sqrt(s-i),a=n-o,c=n+o;return a<0&&c<0?null:a<0?this.at(c,t):this.at(a,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,s,o,a,c;const h=1/this.direction.x,u=1/this.direction.y,f=1/this.direction.z,d=this.origin;return h>=0?(n=(e.min.x-d.x)*h,i=(e.max.x-d.x)*h):(n=(e.max.x-d.x)*h,i=(e.min.x-d.x)*h),u>=0?(s=(e.min.y-d.y)*u,o=(e.max.y-d.y)*u):(s=(e.max.y-d.y)*u,o=(e.min.y-d.y)*u),n>o||s>i||((s>n||n!==n)&&(n=s),(o<i||i!==i)&&(i=o),f>=0?(a=(e.min.z-d.z)*f,c=(e.max.z-d.z)*f):(a=(e.max.z-d.z)*f,c=(e.min.z-d.z)*f),n>c||a>i)||((a>n||n!==n)&&(n=a),(c<i||i!==i)&&(i=c),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,Hn)!==null}intersectTriangle(e,t,n,i,s){Da.subVectors(t,e),eo.subVectors(n,e),Fa.crossVectors(Da,eo);let o=this.direction.dot(Fa),a;if(o>0){if(i)return null;a=1}else if(o<0)a=-1,o=-o;else return null;ni.subVectors(this.origin,e);const c=a*this.direction.dot(eo.crossVectors(ni,eo));if(c<0)return null;const h=a*this.direction.dot(Da.cross(ni));if(h<0||c+h>o)return null;const u=-a*ni.dot(Fa);return u<0?null:this.at(u/o,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class Se{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,i,s,o,a,c,h,u,f,d,p,v,m,g){const b=this.elements;return b[0]=e,b[4]=t,b[8]=n,b[12]=i,b[1]=s,b[5]=o,b[9]=a,b[13]=c,b[2]=h,b[6]=u,b[10]=f,b[14]=d,b[3]=p,b[7]=v,b[11]=m,b[15]=g,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Se().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/dr.setFromMatrixColumn(e,0).length(),s=1/dr.setFromMatrixColumn(e,1).length(),o=1/dr.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*s,t[5]=n[5]*s,t[6]=n[6]*s,t[7]=0,t[8]=n[8]*o,t[9]=n[9]*o,t[10]=n[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const t=this.elements,n=e.x,i=e.y,s=e.z,o=Math.cos(n),a=Math.sin(n),c=Math.cos(i),h=Math.sin(i),u=Math.cos(s),f=Math.sin(s);if(e.order==="XYZ"){const d=o*u,p=o*f,v=a*u,m=a*f;t[0]=c*u,t[4]=-c*f,t[8]=h,t[1]=p+v*h,t[5]=d-m*h,t[9]=-a*c,t[2]=m-d*h,t[6]=v+p*h,t[10]=o*c}else if(e.order==="YXZ"){const d=c*u,p=c*f,v=h*u,m=h*f;t[0]=d+m*a,t[4]=v*a-p,t[8]=o*h,t[1]=o*f,t[5]=o*u,t[9]=-a,t[2]=p*a-v,t[6]=m+d*a,t[10]=o*c}else if(e.order==="ZXY"){const d=c*u,p=c*f,v=h*u,m=h*f;t[0]=d-m*a,t[4]=-o*f,t[8]=v+p*a,t[1]=p+v*a,t[5]=o*u,t[9]=m-d*a,t[2]=-o*h,t[6]=a,t[10]=o*c}else if(e.order==="ZYX"){const d=o*u,p=o*f,v=a*u,m=a*f;t[0]=c*u,t[4]=v*h-p,t[8]=d*h+m,t[1]=c*f,t[5]=m*h+d,t[9]=p*h-v,t[2]=-h,t[6]=a*c,t[10]=o*c}else if(e.order==="YZX"){const d=o*c,p=o*h,v=a*c,m=a*h;t[0]=c*u,t[4]=m-d*f,t[8]=v*f+p,t[1]=f,t[5]=o*u,t[9]=-a*u,t[2]=-h*u,t[6]=p*f+v,t[10]=d-m*f}else if(e.order==="XZY"){const d=o*c,p=o*h,v=a*c,m=a*h;t[0]=c*u,t[4]=-f,t[8]=h*u,t[1]=d*f+m,t[5]=o*u,t[9]=p*f-v,t[2]=v*f-p,t[6]=a*u,t[10]=m*f+d}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(Bp,e,Hp)}lookAt(e,t,n){const i=this.elements;return Zt.subVectors(e,t),Zt.lengthSq()===0&&(Zt.z=1),Zt.normalize(),ii.crossVectors(n,Zt),ii.lengthSq()===0&&(Math.abs(n.z)===1?Zt.x+=1e-4:Zt.z+=1e-4,Zt.normalize(),ii.crossVectors(n,Zt)),ii.normalize(),to.crossVectors(Zt,ii),i[0]=ii.x,i[4]=to.x,i[8]=Zt.x,i[1]=ii.y,i[5]=to.y,i[9]=Zt.y,i[2]=ii.z,i[6]=to.z,i[10]=Zt.z,this}multiply(e,t){return t!==void 0?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,o=n[0],a=n[4],c=n[8],h=n[12],u=n[1],f=n[5],d=n[9],p=n[13],v=n[2],m=n[6],g=n[10],b=n[14],E=n[3],A=n[7],S=n[11],C=n[15],N=i[0],U=i[4],D=i[8],K=i[12],G=i[1],R=i[5],H=i[9],ee=i[13],X=i[2],k=i[6],Z=i[10],$=i[14],V=i[3],ie=i[7],oe=i[11],ue=i[15];return s[0]=o*N+a*G+c*X+h*V,s[4]=o*U+a*R+c*k+h*ie,s[8]=o*D+a*H+c*Z+h*oe,s[12]=o*K+a*ee+c*$+h*ue,s[1]=u*N+f*G+d*X+p*V,s[5]=u*U+f*R+d*k+p*ie,s[9]=u*D+f*H+d*Z+p*oe,s[13]=u*K+f*ee+d*$+p*ue,s[2]=v*N+m*G+g*X+b*V,s[6]=v*U+m*R+g*k+b*ie,s[10]=v*D+m*H+g*Z+b*oe,s[14]=v*K+m*ee+g*$+b*ue,s[3]=E*N+A*G+S*X+C*V,s[7]=E*U+A*R+S*k+C*ie,s[11]=E*D+A*H+S*Z+C*oe,s[15]=E*K+A*ee+S*$+C*ue,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],s=e[12],o=e[1],a=e[5],c=e[9],h=e[13],u=e[2],f=e[6],d=e[10],p=e[14],v=e[3],m=e[7],g=e[11],b=e[15];return v*(+s*c*f-i*h*f-s*a*d+n*h*d+i*a*p-n*c*p)+m*(+t*c*p-t*h*d+s*o*d-i*o*p+i*h*u-s*c*u)+g*(+t*h*f-t*a*p-s*o*f+n*o*p+s*a*u-n*h*u)+b*(-i*a*u-t*c*f+t*a*d+i*o*f-n*o*d+n*c*u)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],o=e[4],a=e[5],c=e[6],h=e[7],u=e[8],f=e[9],d=e[10],p=e[11],v=e[12],m=e[13],g=e[14],b=e[15],E=f*g*h-m*d*h+m*c*p-a*g*p-f*c*b+a*d*b,A=v*d*h-u*g*h-v*c*p+o*g*p+u*c*b-o*d*b,S=u*m*h-v*f*h+v*a*p-o*m*p-u*a*b+o*f*b,C=v*f*c-u*m*c-v*a*d+o*m*d+u*a*g-o*f*g,N=t*E+n*A+i*S+s*C;if(N===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const U=1/N;return e[0]=E*U,e[1]=(m*d*s-f*g*s-m*i*p+n*g*p+f*i*b-n*d*b)*U,e[2]=(a*g*s-m*c*s+m*i*h-n*g*h-a*i*b+n*c*b)*U,e[3]=(f*c*s-a*d*s-f*i*h+n*d*h+a*i*p-n*c*p)*U,e[4]=A*U,e[5]=(u*g*s-v*d*s+v*i*p-t*g*p-u*i*b+t*d*b)*U,e[6]=(v*c*s-o*g*s-v*i*h+t*g*h+o*i*b-t*c*b)*U,e[7]=(o*d*s-u*c*s+u*i*h-t*d*h-o*i*p+t*c*p)*U,e[8]=S*U,e[9]=(v*f*s-u*m*s-v*n*p+t*m*p+u*n*b-t*f*b)*U,e[10]=(o*m*s-v*a*s+v*n*h-t*m*h-o*n*b+t*a*b)*U,e[11]=(u*a*s-o*f*s-u*n*h+t*f*h+o*n*p-t*a*p)*U,e[12]=C*U,e[13]=(u*m*i-v*f*i+v*n*d-t*m*d-u*n*g+t*f*g)*U,e[14]=(v*a*i-o*m*i-v*n*c+t*m*c+o*n*g-t*a*g)*U,e[15]=(o*f*i-u*a*i+u*n*c-t*f*c-o*n*d+t*a*d)*U,this}scale(e){const t=this.elements,n=e.x,i=e.y,s=e.z;return t[0]*=n,t[4]*=i,t[8]*=s,t[1]*=n,t[5]*=i,t[9]*=s,t[2]*=n,t[6]*=i,t[10]*=s,t[3]*=n,t[7]*=i,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),s=1-n,o=e.x,a=e.y,c=e.z,h=s*o,u=s*a;return this.set(h*o+n,h*a-i*c,h*c+i*a,0,h*a+i*c,u*a+n,u*c-i*o,0,h*c-i*a,u*c+i*o,s*c*c+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,s,o){return this.set(1,n,s,0,e,1,o,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,s=t._x,o=t._y,a=t._z,c=t._w,h=s+s,u=o+o,f=a+a,d=s*h,p=s*u,v=s*f,m=o*u,g=o*f,b=a*f,E=c*h,A=c*u,S=c*f,C=n.x,N=n.y,U=n.z;return i[0]=(1-(m+b))*C,i[1]=(p+S)*C,i[2]=(v-A)*C,i[3]=0,i[4]=(p-S)*N,i[5]=(1-(d+b))*N,i[6]=(g+E)*N,i[7]=0,i[8]=(v+A)*U,i[9]=(g-E)*U,i[10]=(1-(d+m))*U,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let s=dr.set(i[0],i[1],i[2]).length();const o=dr.set(i[4],i[5],i[6]).length(),a=dr.set(i[8],i[9],i[10]).length();this.determinant()<0&&(s=-s),e.x=i[12],e.y=i[13],e.z=i[14],fn.copy(this);const h=1/s,u=1/o,f=1/a;return fn.elements[0]*=h,fn.elements[1]*=h,fn.elements[2]*=h,fn.elements[4]*=u,fn.elements[5]*=u,fn.elements[6]*=u,fn.elements[8]*=f,fn.elements[9]*=f,fn.elements[10]*=f,t.setFromRotationMatrix(fn),n.x=s,n.y=o,n.z=a,this}makePerspective(e,t,n,i,s,o){o===void 0&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const a=this.elements,c=2*s/(t-e),h=2*s/(n-i),u=(t+e)/(t-e),f=(n+i)/(n-i),d=-(o+s)/(o-s),p=-2*o*s/(o-s);return a[0]=c,a[4]=0,a[8]=u,a[12]=0,a[1]=0,a[5]=h,a[9]=f,a[13]=0,a[2]=0,a[6]=0,a[10]=d,a[14]=p,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(e,t,n,i,s,o){const a=this.elements,c=1/(t-e),h=1/(n-i),u=1/(o-s),f=(t+e)*c,d=(n+i)*h,p=(o+s)*u;return a[0]=2*c,a[4]=0,a[8]=0,a[12]=-f,a[1]=0,a[5]=2*h,a[9]=0,a[13]=-d,a[2]=0,a[6]=0,a[10]=-2*u,a[14]=-p,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}Se.prototype.isMatrix4=!0;const dr=new P,fn=new Se,Bp=new P(0,0,0),Hp=new P(1,1,1),ii=new P,to=new P,Zt=new P,Gc=new Se,kc=new Ot;class Mi{constructor(e=0,t=0,n=0,i=Mi.DefaultOrder){this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,s=i[0],o=i[4],a=i[8],c=i[1],h=i[5],u=i[9],f=i[2],d=i[6],p=i[10];switch(t){case"XYZ":this._y=Math.asin(yt(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-u,p),this._z=Math.atan2(-o,s)):(this._x=Math.atan2(d,h),this._z=0);break;case"YXZ":this._x=Math.asin(-yt(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(a,p),this._z=Math.atan2(c,h)):(this._y=Math.atan2(-f,s),this._z=0);break;case"ZXY":this._x=Math.asin(yt(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-f,p),this._z=Math.atan2(-o,h)):(this._y=0,this._z=Math.atan2(c,s));break;case"ZYX":this._y=Math.asin(-yt(f,-1,1)),Math.abs(f)<.9999999?(this._x=Math.atan2(d,p),this._z=Math.atan2(c,s)):(this._x=0,this._z=Math.atan2(-o,h));break;case"YZX":this._z=Math.asin(yt(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-u,h),this._y=Math.atan2(-f,s)):(this._x=0,this._y=Math.atan2(a,p));break;case"XZY":this._z=Math.asin(-yt(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(d,h),this._y=Math.atan2(a,s)):(this._x=Math.atan2(-u,p),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return Gc.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Gc,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return kc.setFromEuler(this),this.setFromQuaternion(kc,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}Mi.prototype.isEuler=!0;Mi.DefaultOrder="XYZ";Mi.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class $o{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let zp=0;const Vc=new P,fr=new Ot,zn=new Se,no=new P,rs=new P,Gp=new P,kp=new Ot,Wc=new P(1,0,0),Xc=new P(0,1,0),qc=new P(0,0,1),Vp={type:"added"},Yc={type:"removed"};class $e extends vi{constructor(){super();Object.defineProperty(this,"id",{value:zp++}),this.uuid=$t(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=$e.DefaultUp.clone();const e=new P,t=new Mi,n=new Ot,i=new P(1,1,1);function s(){n.setFromEuler(t,!1)}function o(){t.setFromQuaternion(n,void 0,!1)}t._onChange(s),n._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new Se},normalMatrix:{value:new Lt}}),this.matrix=new Se,this.matrixWorld=new Se,this.matrixAutoUpdate=$e.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new $o,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return fr.setFromAxisAngle(e,t),this.quaternion.multiply(fr),this}rotateOnWorldAxis(e,t){return fr.setFromAxisAngle(e,t),this.quaternion.premultiply(fr),this}rotateX(e){return this.rotateOnAxis(Wc,e)}rotateY(e){return this.rotateOnAxis(Xc,e)}rotateZ(e){return this.rotateOnAxis(qc,e)}translateOnAxis(e,t){return Vc.copy(e).applyQuaternion(this.quaternion),this.position.add(Vc.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(Wc,e)}translateY(e){return this.translateOnAxis(Xc,e)}translateZ(e){return this.translateOnAxis(qc,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(zn.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?no.copy(e):no.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),rs.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?zn.lookAt(rs,no,this.up):zn.lookAt(no,rs,this.up),this.quaternion.setFromRotationMatrix(zn),i&&(zn.extractRotation(i.matrixWorld),fr.setFromRotationMatrix(zn),this.quaternion.premultiply(fr.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(Vp)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(Yc)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(Yc)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),zn.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),zn.multiply(e.parent.matrixWorld)),e.applyMatrix4(zn),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const o=this.children[n].getObjectByProperty(e,t);if(o!==void 0)return o}}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(rs,e,Gp),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(rs,kp,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].updateMatrixWorld(e)}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const i=this.children;for(let s=0,o=i.length;s<o;s++)i[s].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON()));function s(a,c){return a[c.uuid]===void 0&&(a[c.uuid]=c.toJSON(e)),c.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=s(e.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const c=a.shapes;if(Array.isArray(c))for(let h=0,u=c.length;h<u;h++){const f=c[h];s(e.shapes,f)}else s(e.shapes,c)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let c=0,h=this.material.length;c<h;c++)a.push(s(e.materials,this.material[c]));i.material=a}else i.material=s(e.materials,this.material);if(this.children.length>0){i.children=[];for(let a=0;a<this.children.length;a++)i.children.push(this.children[a].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let a=0;a<this.animations.length;a++){const c=this.animations[a];i.animations.push(s(e.animations,c))}}if(t){const a=o(e.geometries),c=o(e.materials),h=o(e.textures),u=o(e.images),f=o(e.shapes),d=o(e.skeletons),p=o(e.animations),v=o(e.nodes);a.length>0&&(n.geometries=a),c.length>0&&(n.materials=c),h.length>0&&(n.textures=h),u.length>0&&(n.images=u),f.length>0&&(n.shapes=f),d.length>0&&(n.skeletons=d),p.length>0&&(n.animations=p),v.length>0&&(n.nodes=v)}return n.object=i,n;function o(a){const c=[];for(const h in a){const u=a[h];delete u.metadata,c.push(u)}return c}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}$e.DefaultUp=new P(0,1,0);$e.DefaultMatrixAutoUpdate=!0;$e.prototype.isObject3D=!0;const pn=new P,Gn=new P,Oa=new P,kn=new P,pr=new P,mr=new P,Zc=new P,Na=new P,Ua=new P,Ba=new P;class xt{constructor(e=new P,t=new P,n=new P){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),pn.subVectors(e,t),i.cross(pn);const s=i.lengthSq();return s>0?i.multiplyScalar(1/Math.sqrt(s)):i.set(0,0,0)}static getBarycoord(e,t,n,i,s){pn.subVectors(i,t),Gn.subVectors(n,t),Oa.subVectors(e,t);const o=pn.dot(pn),a=pn.dot(Gn),c=pn.dot(Oa),h=Gn.dot(Gn),u=Gn.dot(Oa),f=o*h-a*a;if(f===0)return s.set(-2,-1,-1);const d=1/f,p=(h*c-a*u)*d,v=(o*u-a*c)*d;return s.set(1-p-v,v,p)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,kn),kn.x>=0&&kn.y>=0&&kn.x+kn.y<=1}static getUV(e,t,n,i,s,o,a,c){return this.getBarycoord(e,t,n,i,kn),c.set(0,0),c.addScaledVector(s,kn.x),c.addScaledVector(o,kn.y),c.addScaledVector(a,kn.z),c}static isFrontFacing(e,t,n,i){return pn.subVectors(n,t),Gn.subVectors(e,t),pn.cross(Gn).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return pn.subVectors(this.c,this.b),Gn.subVectors(this.a,this.b),pn.cross(Gn).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return xt.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return xt.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,i,s){return xt.getUV(e,this.a,this.b,this.c,t,n,i,s)}containsPoint(e){return xt.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return xt.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,s=this.c;let o,a;pr.subVectors(i,n),mr.subVectors(s,n),Na.subVectors(e,n);const c=pr.dot(Na),h=mr.dot(Na);if(c<=0&&h<=0)return t.copy(n);Ua.subVectors(e,i);const u=pr.dot(Ua),f=mr.dot(Ua);if(u>=0&&f<=u)return t.copy(i);const d=c*f-u*h;if(d<=0&&c>=0&&u<=0)return o=c/(c-u),t.copy(n).addScaledVector(pr,o);Ba.subVectors(e,s);const p=pr.dot(Ba),v=mr.dot(Ba);if(v>=0&&p<=v)return t.copy(s);const m=p*h-c*v;if(m<=0&&h>=0&&v<=0)return a=h/(h-v),t.copy(n).addScaledVector(mr,a);const g=u*v-p*f;if(g<=0&&f-u>=0&&p-v>=0)return Zc.subVectors(s,i),a=(f-u)/(f-u+(p-v)),t.copy(i).addScaledVector(Zc,a);const b=1/(g+m+d);return o=m*b,a=d*b,t.copy(n).addScaledVector(pr,o).addScaledVector(mr,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let Wp=0;class Mt extends vi{constructor(){super();Object.defineProperty(this,"id",{value:Wp++}),this.uuid=$t(),this.name="",this.type="Material",this.fog=!0,this.blending=zi,this.side=qi,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=Wl,this.blendDst=Xl,this.blendEquation=Fi,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Vo,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=od,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Go,this.stencilZFail=Go,this.stencilZPass=Go,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}if(t==="shading"){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=n===Vl;continue}const i=this[t];if(i===void 0){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==zi&&(n.blending=this.blending),this.side!==qi&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(n.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=this.flatShading),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData);function i(s){const o=[];for(const a in s){const c=s[a];delete c.metadata,o.push(c)}return o}if(t){const s=i(e.textures),o=i(e.images);s.length>0&&(n.textures=s),o.length>0&&(n.images=o)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.fog=e.fog,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let s=0;s!==i;++s)n[s]=t[s].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}Mt.prototype.isMaterial=!0;Mt.fromType=function(){return null};class Jn extends Mt{constructor(e){super();this.type="MeshBasicMaterial",this.color=new xe(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Is,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}Jn.prototype.isMeshBasicMaterial=!0;const Et=new P,io=new se;class et{constructor(e,t,n){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n===!0,this.usage=Pr,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,s=this.itemSize;i<s;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}copyColorsArray(e){const t=this.array;let n=0;for(let i=0,s=e.length;i<s;i++){let o=e[i];o===void 0&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),o=new xe),t[n++]=o.r,t[n++]=o.g,t[n++]=o.b}return this}copyVector2sArray(e){const t=this.array;let n=0;for(let i=0,s=e.length;i<s;i++){let o=e[i];o===void 0&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),o=new se),t[n++]=o.x,t[n++]=o.y}return this}copyVector3sArray(e){const t=this.array;let n=0;for(let i=0,s=e.length;i<s;i++){let o=e[i];o===void 0&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),o=new P),t[n++]=o.x,t[n++]=o.y,t[n++]=o.z}return this}copyVector4sArray(e){const t=this.array;let n=0;for(let i=0,s=e.length;i<s;i++){let o=e[i];o===void 0&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),o=new st),t[n++]=o.x,t[n++]=o.y,t[n++]=o.z,t[n++]=o.w}return this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)io.fromBufferAttribute(this,t),io.applyMatrix3(e),this.setXY(t,io.x,io.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)Et.fromBufferAttribute(this,t),Et.applyMatrix3(e),this.setXYZ(t,Et.x,Et.y,Et.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)Et.fromBufferAttribute(this,t),Et.applyMatrix4(e),this.setXYZ(t,Et.x,Et.y,Et.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Et.fromBufferAttribute(this,t),Et.applyNormalMatrix(e),this.setXYZ(t,Et.x,Et.y,Et.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Et.fromBufferAttribute(this,t),Et.transformDirection(e),this.setXYZ(t,Et.x,Et.y,Et.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){return this.array[e*this.itemSize]}setX(e,t){return this.array[e*this.itemSize]=t,this}getY(e){return this.array[e*this.itemSize+1]}setY(e,t){return this.array[e*this.itemSize+1]=t,this}getZ(e){return this.array[e*this.itemSize+2]}setZ(e,t){return this.array[e*this.itemSize+2]=t,this}getW(e){return this.array[e*this.itemSize+3]}setW(e,t){return this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==Pr&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}}et.prototype.isBufferAttribute=!0;class pd extends et{constructor(e,t,n){super(new Int8Array(e),t,n)}}class md extends et{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class gd extends et{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class vd extends et{constructor(e,t,n){super(new Int16Array(e),t,n)}}class Qo extends et{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class _d extends et{constructor(e,t,n){super(new Int32Array(e),t,n)}}class ea extends et{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class yd extends et{constructor(e,t,n){super(new Uint16Array(e),t,n)}}yd.prototype.isFloat16BufferAttribute=!0;class Te extends et{constructor(e,t,n){super(new Float32Array(e),t,n)}}class xd extends et{constructor(e,t,n){super(new Float64Array(e),t,n)}}let Xp=0;const on=new Se,Ha=new $e,gr=new P,Jt=new en,ss=new en,Pt=new P;class Oe extends vi{constructor(){super();Object.defineProperty(this,"id",{value:Xp++}),this.uuid=$t(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(cd(e)?ea:Qo)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const s=new Lt().getNormalMatrix(e);n.applyNormalMatrix(s),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return on.makeRotationFromQuaternion(e),this.applyMatrix4(on),this}rotateX(e){return on.makeRotationX(e),this.applyMatrix4(on),this}rotateY(e){return on.makeRotationY(e),this.applyMatrix4(on),this}rotateZ(e){return on.makeRotationZ(e),this.applyMatrix4(on),this}translate(e,t,n){return on.makeTranslation(e,t,n),this.applyMatrix4(on),this}scale(e,t,n){return on.makeScale(e,t,n),this.applyMatrix4(on),this}lookAt(e){return Ha.lookAt(e),Ha.updateMatrix(),this.applyMatrix4(Ha.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(gr).negate(),this.translate(gr.x,gr.y,gr.z),this}setFromPoints(e){const t=[];for(let n=0,i=e.length;n<i;n++){const s=e[n];t.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new Te(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new en);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new P(-1/0,-1/0,-1/0),new P(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const s=t[n];Jt.setFromBufferAttribute(s),this.morphTargetsRelative?(Pt.addVectors(this.boundingBox.min,Jt.min),this.boundingBox.expandByPoint(Pt),Pt.addVectors(this.boundingBox.max,Jt.max),this.boundingBox.expandByPoint(Pt)):(this.boundingBox.expandByPoint(Jt.min),this.boundingBox.expandByPoint(Jt.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new yi);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new P,1/0);return}if(e){const n=this.boundingSphere.center;if(Jt.setFromBufferAttribute(e),t)for(let s=0,o=t.length;s<o;s++){const a=t[s];ss.setFromBufferAttribute(a),this.morphTargetsRelative?(Pt.addVectors(Jt.min,ss.min),Jt.expandByPoint(Pt),Pt.addVectors(Jt.max,ss.max),Jt.expandByPoint(Pt)):(Jt.expandByPoint(ss.min),Jt.expandByPoint(ss.max))}Jt.getCenter(n);let i=0;for(let s=0,o=e.count;s<o;s++)Pt.fromBufferAttribute(e,s),i=Math.max(i,n.distanceToSquared(Pt));if(t)for(let s=0,o=t.length;s<o;s++){const a=t[s],c=this.morphTargetsRelative;for(let h=0,u=a.count;h<u;h++)Pt.fromBufferAttribute(a,h),c&&(gr.fromBufferAttribute(e,h),Pt.add(gr)),i=Math.max(i,n.distanceToSquared(Pt))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.array,i=t.position.array,s=t.normal.array,o=t.uv.array,a=i.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new et(new Float32Array(4*a),4));const c=this.getAttribute("tangent").array,h=[],u=[];for(let G=0;G<a;G++)h[G]=new P,u[G]=new P;const f=new P,d=new P,p=new P,v=new se,m=new se,g=new se,b=new P,E=new P;function A(G,R,H){f.fromArray(i,G*3),d.fromArray(i,R*3),p.fromArray(i,H*3),v.fromArray(o,G*2),m.fromArray(o,R*2),g.fromArray(o,H*2),d.sub(f),p.sub(f),m.sub(v),g.sub(v);const ee=1/(m.x*g.y-g.x*m.y);!isFinite(ee)||(b.copy(d).multiplyScalar(g.y).addScaledVector(p,-m.y).multiplyScalar(ee),E.copy(p).multiplyScalar(m.x).addScaledVector(d,-g.x).multiplyScalar(ee),h[G].add(b),h[R].add(b),h[H].add(b),u[G].add(E),u[R].add(E),u[H].add(E))}let S=this.groups;S.length===0&&(S=[{start:0,count:n.length}]);for(let G=0,R=S.length;G<R;++G){const H=S[G],ee=H.start,X=H.count;for(let k=ee,Z=ee+X;k<Z;k+=3)A(n[k+0],n[k+1],n[k+2])}const C=new P,N=new P,U=new P,D=new P;function K(G){U.fromArray(s,G*3),D.copy(U);const R=h[G];C.copy(R),C.sub(U.multiplyScalar(U.dot(R))).normalize(),N.crossVectors(D,R);const ee=N.dot(u[G])<0?-1:1;c[G*4]=C.x,c[G*4+1]=C.y,c[G*4+2]=C.z,c[G*4+3]=ee}for(let G=0,R=S.length;G<R;++G){const H=S[G],ee=H.start,X=H.count;for(let k=ee,Z=ee+X;k<Z;k+=3)K(n[k+0]),K(n[k+1]),K(n[k+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new et(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let d=0,p=n.count;d<p;d++)n.setXYZ(d,0,0,0);const i=new P,s=new P,o=new P,a=new P,c=new P,h=new P,u=new P,f=new P;if(e)for(let d=0,p=e.count;d<p;d+=3){const v=e.getX(d+0),m=e.getX(d+1),g=e.getX(d+2);i.fromBufferAttribute(t,v),s.fromBufferAttribute(t,m),o.fromBufferAttribute(t,g),u.subVectors(o,s),f.subVectors(i,s),u.cross(f),a.fromBufferAttribute(n,v),c.fromBufferAttribute(n,m),h.fromBufferAttribute(n,g),a.add(u),c.add(u),h.add(u),n.setXYZ(v,a.x,a.y,a.z),n.setXYZ(m,c.x,c.y,c.z),n.setXYZ(g,h.x,h.y,h.z)}else for(let d=0,p=t.count;d<p;d+=3)i.fromBufferAttribute(t,d+0),s.fromBufferAttribute(t,d+1),o.fromBufferAttribute(t,d+2),u.subVectors(o,s),f.subVectors(i,s),u.cross(f),n.setXYZ(d+0,u.x,u.y,u.z),n.setXYZ(d+1,u.x,u.y,u.z),n.setXYZ(d+2,u.x,u.y,u.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(e,t){if(!(e&&e.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);return}t===void 0&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const i in n){if(e.attributes[i]===void 0)continue;const o=n[i].array,a=e.attributes[i],c=a.array,h=a.itemSize*t,u=Math.min(c.length,o.length-h);for(let f=0,d=h;f<u;f++,d++)o[d]=c[f]}return this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)Pt.fromBufferAttribute(e,t),Pt.normalize(),e.setXYZ(t,Pt.x,Pt.y,Pt.z)}toNonIndexed(){function e(a,c){const h=a.array,u=a.itemSize,f=a.normalized,d=new h.constructor(c.length*u);let p=0,v=0;for(let m=0,g=c.length;m<g;m++){a.isInterleavedBufferAttribute?p=c[m]*a.data.stride+a.offset:p=c[m]*u;for(let b=0;b<u;b++)d[v++]=h[p++]}return new et(d,u,f)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new Oe,n=this.index.array,i=this.attributes;for(const a in i){const c=i[a],h=e(c,n);t.setAttribute(a,h)}const s=this.morphAttributes;for(const a in s){const c=[],h=s[a];for(let u=0,f=h.length;u<f;u++){const d=h[u],p=e(d,n);c.push(p)}t.morphAttributes[a]=c}t.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,c=o.length;a<c;a++){const h=o[a];t.addGroup(h.start,h.count,h.materialIndex)}return t}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const c=this.parameters;for(const h in c)c[h]!==void 0&&(e[h]=c[h]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const c in n){const h=n[c];e.data.attributes[c]=h.toJSON(e.data)}const i={};let s=!1;for(const c in this.morphAttributes){const h=this.morphAttributes[c],u=[];for(let f=0,d=h.length;f<d;f++){const p=h[f];u.push(p.toJSON(e.data))}u.length>0&&(i[c]=u,s=!0)}s&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(e.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const i=e.attributes;for(const h in i){const u=i[h];this.setAttribute(h,u.clone(t))}const s=e.morphAttributes;for(const h in s){const u=[],f=s[h];for(let d=0,p=f.length;d<p;d++)u.push(f[d].clone(t));this.morphAttributes[h]=u}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let h=0,u=o.length;h<u;h++){const f=o[h];this.addGroup(f.start,f.count,f.materialIndex)}const a=e.boundingBox;a!==null&&(this.boundingBox=a.clone());const c=e.boundingSphere;return c!==null&&(this.boundingSphere=c.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,e.parameters!==void 0&&(this.parameters=Object.assign({},e.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}Oe.prototype.isBufferGeometry=!0;const Jc=new Se,vr=new xi,za=new yi,ri=new P,si=new P,oi=new P,Ga=new P,ka=new P,Va=new P,ro=new P,so=new P,oo=new P,ao=new se,lo=new se,co=new se,Wa=new P,ho=new P;class St extends $e{constructor(e=new Oe,t=new Jn){super();this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=i.length;s<o;s++){const a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}else{const t=e.morphTargets;t!==void 0&&t.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}raycast(e,t){const n=this.geometry,i=this.material,s=this.matrixWorld;if(i===void 0||(n.boundingSphere===null&&n.computeBoundingSphere(),za.copy(n.boundingSphere),za.applyMatrix4(s),e.ray.intersectsSphere(za)===!1)||(Jc.copy(s).invert(),vr.copy(e.ray).applyMatrix4(Jc),n.boundingBox!==null&&vr.intersectsBox(n.boundingBox)===!1))return;let o;if(n.isBufferGeometry){const a=n.index,c=n.attributes.position,h=n.morphAttributes.position,u=n.morphTargetsRelative,f=n.attributes.uv,d=n.attributes.uv2,p=n.groups,v=n.drawRange;if(a!==null)if(Array.isArray(i))for(let m=0,g=p.length;m<g;m++){const b=p[m],E=i[b.materialIndex],A=Math.max(b.start,v.start),S=Math.min(a.count,Math.min(b.start+b.count,v.start+v.count));for(let C=A,N=S;C<N;C+=3){const U=a.getX(C),D=a.getX(C+1),K=a.getX(C+2);o=uo(this,E,e,vr,c,h,u,f,d,U,D,K),o&&(o.faceIndex=Math.floor(C/3),o.face.materialIndex=b.materialIndex,t.push(o))}}else{const m=Math.max(0,v.start),g=Math.min(a.count,v.start+v.count);for(let b=m,E=g;b<E;b+=3){const A=a.getX(b),S=a.getX(b+1),C=a.getX(b+2);o=uo(this,i,e,vr,c,h,u,f,d,A,S,C),o&&(o.faceIndex=Math.floor(b/3),t.push(o))}}else if(c!==void 0)if(Array.isArray(i))for(let m=0,g=p.length;m<g;m++){const b=p[m],E=i[b.materialIndex],A=Math.max(b.start,v.start),S=Math.min(c.count,Math.min(b.start+b.count,v.start+v.count));for(let C=A,N=S;C<N;C+=3){const U=C,D=C+1,K=C+2;o=uo(this,E,e,vr,c,h,u,f,d,U,D,K),o&&(o.faceIndex=Math.floor(C/3),o.face.materialIndex=b.materialIndex,t.push(o))}}else{const m=Math.max(0,v.start),g=Math.min(c.count,v.start+v.count);for(let b=m,E=g;b<E;b+=3){const A=b,S=b+1,C=b+2;o=uo(this,i,e,vr,c,h,u,f,d,A,S,C),o&&(o.faceIndex=Math.floor(b/3),t.push(o))}}}else n.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}St.prototype.isMesh=!0;function qp(r,e,t,n,i,s,o,a){let c;if(e.side===jt?c=n.intersectTriangle(o,s,i,!0,a):c=n.intersectTriangle(i,s,o,e.side!==Yi,a),c===null)return null;ho.copy(a),ho.applyMatrix4(r.matrixWorld);const h=t.ray.origin.distanceTo(ho);return h<t.near||h>t.far?null:{distance:h,point:ho.clone(),object:r}}function uo(r,e,t,n,i,s,o,a,c,h,u,f){ri.fromBufferAttribute(i,h),si.fromBufferAttribute(i,u),oi.fromBufferAttribute(i,f);const d=r.morphTargetInfluences;if(s&&d){ro.set(0,0,0),so.set(0,0,0),oo.set(0,0,0);for(let v=0,m=s.length;v<m;v++){const g=d[v],b=s[v];g!==0&&(Ga.fromBufferAttribute(b,h),ka.fromBufferAttribute(b,u),Va.fromBufferAttribute(b,f),o?(ro.addScaledVector(Ga,g),so.addScaledVector(ka,g),oo.addScaledVector(Va,g)):(ro.addScaledVector(Ga.sub(ri),g),so.addScaledVector(ka.sub(si),g),oo.addScaledVector(Va.sub(oi),g)))}ri.add(ro),si.add(so),oi.add(oo)}r.isSkinnedMesh&&(r.boneTransform(h,ri),r.boneTransform(u,si),r.boneTransform(f,oi));const p=qp(r,e,t,n,ri,si,oi,Wa);if(p){a&&(ao.fromBufferAttribute(a,h),lo.fromBufferAttribute(a,u),co.fromBufferAttribute(a,f),p.uv=xt.getUV(Wa,ri,si,oi,ao,lo,co,new se)),c&&(ao.fromBufferAttribute(c,h),lo.fromBufferAttribute(c,u),co.fromBufferAttribute(c,f),p.uv2=xt.getUV(Wa,ri,si,oi,ao,lo,co,new se));const v={a:h,b:u,c:f,normal:new P,materialIndex:0};xt.getNormal(ri,si,oi,v.normal),p.face=v}return p}class qn extends Oe{constructor(e=1,t=1,n=1,i=1,s=1,o=1){super();this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:s,depthSegments:o};const a=this;i=Math.floor(i),s=Math.floor(s),o=Math.floor(o);const c=[],h=[],u=[],f=[];let d=0,p=0;v("z","y","x",-1,-1,n,t,e,o,s,0),v("z","y","x",1,-1,n,t,-e,o,s,1),v("x","z","y",1,1,e,n,t,i,o,2),v("x","z","y",1,-1,e,n,-t,i,o,3),v("x","y","z",1,-1,e,t,n,i,s,4),v("x","y","z",-1,-1,e,t,-n,i,s,5),this.setIndex(c),this.setAttribute("position",new Te(h,3)),this.setAttribute("normal",new Te(u,3)),this.setAttribute("uv",new Te(f,2));function v(m,g,b,E,A,S,C,N,U,D,K){const G=S/U,R=C/D,H=S/2,ee=C/2,X=N/2,k=U+1,Z=D+1;let $=0,V=0;const ie=new P;for(let oe=0;oe<Z;oe++){const ue=oe*R-ee;for(let ae=0;ae<k;ae++){const Le=ae*G-H;ie[m]=Le*E,ie[g]=ue*A,ie[b]=X,h.push(ie.x,ie.y,ie.z),ie[m]=0,ie[g]=0,ie[b]=N>0?1:-1,u.push(ie.x,ie.y,ie.z),f.push(ae/U),f.push(1-oe/D),$+=1}}for(let oe=0;oe<D;oe++)for(let ue=0;ue<U;ue++){const ae=d+ue+k*oe,Le=d+ue+k*(oe+1),ke=d+(ue+1)+k*(oe+1),Ne=d+(ue+1)+k*oe;c.push(ae,Le,Ne),c.push(Le,ke,Ne),V+=6}a.addGroup(p,V,K),p+=V,d+=$}}static fromJSON(e){return new qn(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Dr(r){const e={};for(const t in r){e[t]={};for(const n in r[t]){const i=r[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function Nt(r){const e={};for(let t=0;t<r.length;t++){const n=Dr(r[t]);for(const i in n)e[i]=n[i]}return e}const Md={clone:Dr,merge:Nt};var Yp=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,Zp=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class ln extends Mt{constructor(e){super();this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=Yp,this.fragmentShader=Zp,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&(e.attributes!==void 0&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Dr(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const o=this.uniforms[i].value;o&&o.isTexture?t.uniforms[i]={type:"t",value:o.toJSON(e).uuid}:o&&o.isColor?t.uniforms[i]={type:"c",value:o.getHex()}:o&&o.isVector2?t.uniforms[i]={type:"v2",value:o.toArray()}:o&&o.isVector3?t.uniforms[i]={type:"v3",value:o.toArray()}:o&&o.isVector4?t.uniforms[i]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?t.uniforms[i]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?t.uniforms[i]={type:"m4",value:o.toArray()}:t.uniforms[i]={value:o}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}ln.prototype.isShaderMaterial=!0;class Fs extends $e{constructor(){super();this.type="Camera",this.matrixWorldInverse=new Se,this.projectionMatrix=new Se,this.projectionMatrixInverse=new Se}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}Fs.prototype.isCamera=!0;class It extends Fs{constructor(e=50,t=1,n=.1,i=2e3){super();this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=bs*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(Vi*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return bs*2*Math.atan(Math.tan(Vi*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,i,s,o){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(Vi*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,s=-.5*i;const o=this.view;if(this.view!==null&&this.view.enabled){const c=o.fullWidth,h=o.fullHeight;s+=o.offsetX*i/c,t-=o.offsetY*n/h,i*=o.width/c,n*=o.height/h}const a=this.filmOffset;a!==0&&(s+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+i,t,t-n,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}It.prototype.isPerspectiveCamera=!0;const _r=90,yr=1;class ta extends $e{constructor(e,t,n){super();if(this.type="CubeCamera",n.isWebGLCubeRenderTarget!==!0){console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");return}this.renderTarget=n;const i=new It(_r,yr,e,t);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new P(1,0,0)),this.add(i);const s=new It(_r,yr,e,t);s.layers=this.layers,s.up.set(0,-1,0),s.lookAt(new P(-1,0,0)),this.add(s);const o=new It(_r,yr,e,t);o.layers=this.layers,o.up.set(0,0,1),o.lookAt(new P(0,1,0)),this.add(o);const a=new It(_r,yr,e,t);a.layers=this.layers,a.up.set(0,0,-1),a.lookAt(new P(0,-1,0)),this.add(a);const c=new It(_r,yr,e,t);c.layers=this.layers,c.up.set(0,-1,0),c.lookAt(new P(0,0,1)),this.add(c);const h=new It(_r,yr,e,t);h.layers=this.layers,h.up.set(0,-1,0),h.lookAt(new P(0,0,-1)),this.add(h)}update(e,t){this.parent===null&&this.updateMatrixWorld();const n=this.renderTarget,[i,s,o,a,c,h]=this.children,u=e.getRenderTarget(),f=e.outputEncoding,d=e.toneMapping,p=e.xr.enabled;e.outputEncoding=An,e.toneMapping=En,e.xr.enabled=!1;const v=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,i),e.setRenderTarget(n,1),e.render(t,s),e.setRenderTarget(n,2),e.render(t,o),e.setRenderTarget(n,3),e.render(t,a),e.setRenderTarget(n,4),e.render(t,c),n.texture.generateMipmaps=v,e.setRenderTarget(n,5),e.render(t,h),e.setRenderTarget(u),e.outputEncoding=f,e.toneMapping=d,e.xr.enabled=p,n.texture.needsPMREMUpdate=!0}}class Yr extends At{constructor(e,t,n,i,s,o,a,c,h,u){e=e!==void 0?e:[],t=t!==void 0?t:ui;super(e,t,n,i,s,o,a,c,h,u);this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}Yr.prototype.isCubeTexture=!0;class na extends Gt{constructor(e,t={}){super(e,e,t);const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];this.texture=new Yr(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:_t}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new qn(5,5,5),s=new ln({name:"CubemapFromEquirect",uniforms:Dr(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:jt,blending:Xn});s.uniforms.tEquirect.value=t;const o=new St(i,s),a=t.minFilter;return t.minFilter===nr&&(t.minFilter=_t),new ta(1,10,this).update(e,o),t.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(e,t,n,i){const s=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(t,n,i);e.setRenderTarget(s)}}na.prototype.isWebGLCubeRenderTarget=!0;const Xa=new P,Jp=new P,Kp=new Lt;class bn{constructor(e=new P(1,0,0),t=0){this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=Xa.subVectors(n,t).cross(Jp.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){const n=e.delta(Xa),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/i;return s<0||s>1?null:t.copy(n).multiplyScalar(s).add(e.start)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||Kp.getNormalMatrix(e),i=this.coplanarPoint(Xa).applyMatrix4(e),s=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}bn.prototype.isPlane=!0;const xr=new yi,fo=new P;class Os{constructor(e=new bn,t=new bn,n=new bn,i=new bn,s=new bn,o=new bn){this.planes=[e,t,n,i,s,o]}set(e,t,n,i,s,o){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(n),a[3].copy(i),a[4].copy(s),a[5].copy(o),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e){const t=this.planes,n=e.elements,i=n[0],s=n[1],o=n[2],a=n[3],c=n[4],h=n[5],u=n[6],f=n[7],d=n[8],p=n[9],v=n[10],m=n[11],g=n[12],b=n[13],E=n[14],A=n[15];return t[0].setComponents(a-i,f-c,m-d,A-g).normalize(),t[1].setComponents(a+i,f+c,m+d,A+g).normalize(),t[2].setComponents(a+s,f+h,m+p,A+b).normalize(),t[3].setComponents(a-s,f-h,m-p,A-b).normalize(),t[4].setComponents(a-o,f-u,m-v,A-E).normalize(),t[5].setComponents(a+o,f+u,m+v,A+E).normalize(),this}intersectsObject(e){const t=e.geometry;return t.boundingSphere===null&&t.computeBoundingSphere(),xr.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(xr)}intersectsSprite(e){return xr.center.set(0,0,0),xr.radius=.7071067811865476,xr.applyMatrix4(e.matrixWorld),this.intersectsSphere(xr)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(fo.x=i.normal.x>0?e.max.x:e.min.x,fo.y=i.normal.y>0?e.max.y:e.min.y,fo.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(fo)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function wd(){let r=null,e=!1,t=null,n=null;function i(s,o){t(s,o),n=r.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(n=r.requestAnimationFrame(i),e=!0)},stop:function(){r.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){r=s}}}function jp(r,e){const t=e.isWebGL2,n=new WeakMap;function i(h,u){const f=h.array,d=h.usage,p=r.createBuffer();r.bindBuffer(u,p),r.bufferData(u,f,d),h.onUploadCallback();let v;if(f instanceof Float32Array)v=r.FLOAT;else if(f instanceof Uint16Array)if(h.isFloat16BufferAttribute)if(t)v=r.HALF_FLOAT;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else v=r.UNSIGNED_SHORT;else if(f instanceof Int16Array)v=r.SHORT;else if(f instanceof Uint32Array)v=r.UNSIGNED_INT;else if(f instanceof Int32Array)v=r.INT;else if(f instanceof Int8Array)v=r.BYTE;else if(f instanceof Uint8Array)v=r.UNSIGNED_BYTE;else if(f instanceof Uint8ClampedArray)v=r.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+f);return{buffer:p,type:v,bytesPerElement:f.BYTES_PER_ELEMENT,version:h.version}}function s(h,u,f){const d=u.array,p=u.updateRange;r.bindBuffer(f,h),p.count===-1?r.bufferSubData(f,0,d):(t?r.bufferSubData(f,p.offset*d.BYTES_PER_ELEMENT,d,p.offset,p.count):r.bufferSubData(f,p.offset*d.BYTES_PER_ELEMENT,d.subarray(p.offset,p.offset+p.count)),p.count=-1)}function o(h){return h.isInterleavedBufferAttribute&&(h=h.data),n.get(h)}function a(h){h.isInterleavedBufferAttribute&&(h=h.data);const u=n.get(h);u&&(r.deleteBuffer(u.buffer),n.delete(h))}function c(h,u){if(h.isGLBufferAttribute){const d=n.get(h);(!d||d.version<h.version)&&n.set(h,{buffer:h.buffer,type:h.type,bytesPerElement:h.elementSize,version:h.version});return}h.isInterleavedBufferAttribute&&(h=h.data);const f=n.get(h);f===void 0?n.set(h,i(h,u)):f.version<h.version&&(s(f.buffer,h,u),f.version=h.version)}return{get:o,remove:a,update:c}}class Ji extends Oe{constructor(e=1,t=1,n=1,i=1){super();this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const s=e/2,o=t/2,a=Math.floor(n),c=Math.floor(i),h=a+1,u=c+1,f=e/a,d=t/c,p=[],v=[],m=[],g=[];for(let b=0;b<u;b++){const E=b*d-o;for(let A=0;A<h;A++){const S=A*f-s;v.push(S,-E,0),m.push(0,0,1),g.push(A/a),g.push(1-b/c)}}for(let b=0;b<c;b++)for(let E=0;E<a;E++){const A=E+h*b,S=E+h*(b+1),C=E+1+h*(b+1),N=E+1+h*b;p.push(A,S,N),p.push(S,C,N)}this.setIndex(p),this.setAttribute("position",new Te(v,3)),this.setAttribute("normal",new Te(m,3)),this.setAttribute("uv",new Te(g,2))}static fromJSON(e){return new Ji(e.width,e.height,e.widthSegments,e.heightSegments)}}var $p=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,Qp=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,em=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,tm=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,nm=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,im=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,rm="vec3 transformed = vec3( position );",sm=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,om=`vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif`,am=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );
		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,lm=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,cm=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,hm=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,um=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,dm=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,fm=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,pm=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,mm=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,gm=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float linearToRelativeLuminance( const in vec3 color ) {
	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );
	return dot( weights, color.rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,vm=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		vec2 uv = getUV( direction, face ) * ( faceSize - 1.0 ) + 0.5;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define r0 1.0
	#define v0 0.339
	#define m0 - 2.0
	#define r1 0.8
	#define v1 0.276
	#define m1 - 1.0
	#define r4 0.4
	#define v4 0.046
	#define m4 2.0
	#define r5 0.305
	#define v5 0.016
	#define m5 3.0
	#define r6 0.21
	#define v6 0.0038
	#define m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= r1 ) {
			mip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;
		} else if ( roughness >= r4 ) {
			mip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;
		} else if ( roughness >= r5 ) {
			mip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;
		} else if ( roughness >= r6 ) {
			mip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,_m=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,ym=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,xm=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,Mm=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,wm=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,bm="gl_FragColor = linearToOutputTexel( gl_FragColor );",Em=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,Tm=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,Sm=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,Am=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,Rm=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,Cm=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,Lm=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,Pm=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,Im=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,Dm=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,Fm=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );
	#endif
}`,Om=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,Nm=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,Um=`vec3 diffuse = vec3( 1.0 );
GeometricContext geometry;
geometry.position = mvPosition.xyz;
geometry.normal = normalize( transformedNormal );
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );
GeometricContext backGeometry;
backGeometry.position = geometry.position;
backGeometry.normal = -geometry.normal;
backGeometry.viewDir = geometry.viewDir;
vLightFront = vec3( 0.0 );
vIndirectFront = vec3( 0.0 );
#ifdef DOUBLE_SIDED
	vLightBack = vec3( 0.0 );
	vIndirectBack = vec3( 0.0 );
#endif
IncidentLight directLight;
float dotNL;
vec3 directLightColor_Diffuse;
vIndirectFront += getAmbientLightIrradiance( ambientLightColor );
vIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );
#ifdef DOUBLE_SIDED
	vIndirectBack += getAmbientLightIrradiance( ambientLightColor );
	vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );
#endif
#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		getPointLightInfo( pointLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		getSpotLightInfo( spotLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		getDirectionalLightInfo( directionalLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_HEMI_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		#ifdef DOUBLE_SIDED
			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );
		#endif
	}
	#pragma unroll_loop_end
#endif`,Bm=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#else
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,Hm=`#if defined( USE_ENVMAP )
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`,zm=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,Gm=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`,km=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,Vm=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`,Wm=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARCOLORMAP
			specularColorFactor *= texture2D( specularColorMap, vUv ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEENCOLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEENROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;
	#endif
#endif`,Xm=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	vec3 FssEss = specularColor * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(		0, 1,		0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	vec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,qm=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,Ym=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,Zm=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,Jm=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,Km=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,jm=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,$m=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,Qm=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,eg=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,tg=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,ng=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,ig=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,rg=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,sg=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,og=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,ag=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,lg=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,cg=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,hg=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,ug=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,dg=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,fg=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,pg=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );
		vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`,mg=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,gg=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`,vg=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,_g=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,yg=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,xg=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,Mg=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,wg=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,bg=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,Eg=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,Tg=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,Sg=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), 
							texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
							f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), 
							texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
							f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,Ag=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,Rg=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );
		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`,Cg=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,Lg=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,Pg=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	#ifdef BONE_TEXTURE
		uniform highp sampler2D boneTexture;
		uniform int boneTextureSize;
		mat4 getBoneMatrix( const in float i ) {
			float j = i * 4.0;
			float x = mod( j, float( boneTextureSize ) );
			float y = floor( j / float( boneTextureSize ) );
			float dx = 1.0 / float( boneTextureSize );
			float dy = 1.0 / float( boneTextureSize );
			y = dy * ( y + 0.5 );
			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
			mat4 bone = mat4( v1, v2, v3, v4 );
			return bone;
		}
	#else
		uniform mat4 boneMatrices[ MAX_BONES ];
		mat4 getBoneMatrix( const in float i ) {
			mat4 bone = boneMatrices[ int(i) ];
			return bone;
		}
	#endif
#endif`,Ig=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,Dg=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,Fg=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,Og=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,Ng=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,Ug=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(	1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,	1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,	1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,Bg=`#ifdef USE_TRANSMISSION
	float transmissionAlpha = 1.0;
	float transmissionFactor = transmission;
	float thicknessFactor = thickness;
	#ifdef USE_TRANSMISSIONMAP
		transmissionFactor *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		thicknessFactor *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,
		attenuationColor, attenuationDistance );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );
	transmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );
#endif`,Hg=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		#ifdef texture2DLodEXT
			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#else
			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#endif
	}
	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( attenuationDistance == 0.0 ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`,zg=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,Gg=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,kg=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,Vg=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,Wg=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,Xg=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,qg=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const Yg=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,Zg=`uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	gl_FragColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		gl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );
	#endif
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Jg=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,Kg=`#include <envmap_common_pars_fragment>
uniform float opacity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	vec3 vReflect = vWorldDirection;
	#include <envmap_fragment>
	gl_FragColor = envColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,jg=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,$g=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,Qg=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,ev=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,tv=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,nv=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,iv=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,rv=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,sv=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,ov=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,av=`#define LAMBERT
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <bsdfs>
#include <lights_pars_begin>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <lights_lambert_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,lv=`uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <emissivemap_fragment>
	#ifdef DOUBLE_SIDED
		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;
	#else
		reflectedLight.indirectDiffuse += vIndirectFront;
	#endif
	#include <lightmap_fragment>
	reflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );
	#ifdef DOUBLE_SIDED
		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;
	#else
		reflectedLight.directDiffuse = vLightFront;
	#endif
	reflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,cv=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,hv=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,uv=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,dv=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,fv=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,pv=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,mv=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,gv=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARCOLORMAP
		uniform sampler2D specularColorMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEENCOLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEENROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,vv=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,_v=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,yv=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,xv=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Mv=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,wv=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,bv=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Ev=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,Je={alphamap_fragment:$p,alphamap_pars_fragment:Qp,alphatest_fragment:em,alphatest_pars_fragment:tm,aomap_fragment:nm,aomap_pars_fragment:im,begin_vertex:rm,beginnormal_vertex:sm,bsdfs:om,bumpmap_pars_fragment:am,clipping_planes_fragment:lm,clipping_planes_pars_fragment:cm,clipping_planes_pars_vertex:hm,clipping_planes_vertex:um,color_fragment:dm,color_pars_fragment:fm,color_pars_vertex:pm,color_vertex:mm,common:gm,cube_uv_reflection_fragment:vm,defaultnormal_vertex:_m,displacementmap_pars_vertex:ym,displacementmap_vertex:xm,emissivemap_fragment:Mm,emissivemap_pars_fragment:wm,encodings_fragment:bm,encodings_pars_fragment:Em,envmap_fragment:Tm,envmap_common_pars_fragment:Sm,envmap_pars_fragment:Am,envmap_pars_vertex:Rm,envmap_physical_pars_fragment:Hm,envmap_vertex:Cm,fog_vertex:Lm,fog_pars_vertex:Pm,fog_fragment:Im,fog_pars_fragment:Dm,gradientmap_pars_fragment:Fm,lightmap_fragment:Om,lightmap_pars_fragment:Nm,lights_lambert_vertex:Um,lights_pars_begin:Bm,lights_toon_fragment:zm,lights_toon_pars_fragment:Gm,lights_phong_fragment:km,lights_phong_pars_fragment:Vm,lights_physical_fragment:Wm,lights_physical_pars_fragment:Xm,lights_fragment_begin:qm,lights_fragment_maps:Ym,lights_fragment_end:Zm,logdepthbuf_fragment:Jm,logdepthbuf_pars_fragment:Km,logdepthbuf_pars_vertex:jm,logdepthbuf_vertex:$m,map_fragment:Qm,map_pars_fragment:eg,map_particle_fragment:tg,map_particle_pars_fragment:ng,metalnessmap_fragment:ig,metalnessmap_pars_fragment:rg,morphcolor_vertex:sg,morphnormal_vertex:og,morphtarget_pars_vertex:ag,morphtarget_vertex:lg,normal_fragment_begin:cg,normal_fragment_maps:hg,normal_pars_fragment:ug,normal_pars_vertex:dg,normal_vertex:fg,normalmap_pars_fragment:pg,clearcoat_normal_fragment_begin:mg,clearcoat_normal_fragment_maps:gg,clearcoat_pars_fragment:vg,output_fragment:_g,packing:yg,premultiplied_alpha_fragment:xg,project_vertex:Mg,dithering_fragment:wg,dithering_pars_fragment:bg,roughnessmap_fragment:Eg,roughnessmap_pars_fragment:Tg,shadowmap_pars_fragment:Sg,shadowmap_pars_vertex:Ag,shadowmap_vertex:Rg,shadowmask_pars_fragment:Cg,skinbase_vertex:Lg,skinning_pars_vertex:Pg,skinning_vertex:Ig,skinnormal_vertex:Dg,specularmap_fragment:Fg,specularmap_pars_fragment:Og,tonemapping_fragment:Ng,tonemapping_pars_fragment:Ug,transmission_fragment:Bg,transmission_pars_fragment:Hg,uv_pars_fragment:zg,uv_pars_vertex:Gg,uv_vertex:kg,uv2_pars_fragment:Vg,uv2_pars_vertex:Wg,uv2_vertex:Xg,worldpos_vertex:qg,background_vert:Yg,background_frag:Zg,cube_vert:Jg,cube_frag:Kg,depth_vert:jg,depth_frag:$g,distanceRGBA_vert:Qg,distanceRGBA_frag:ev,equirect_vert:tv,equirect_frag:nv,linedashed_vert:iv,linedashed_frag:rv,meshbasic_vert:sv,meshbasic_frag:ov,meshlambert_vert:av,meshlambert_frag:lv,meshmatcap_vert:cv,meshmatcap_frag:hv,meshnormal_vert:uv,meshnormal_frag:dv,meshphong_vert:fv,meshphong_frag:pv,meshphysical_vert:mv,meshphysical_frag:gv,meshtoon_vert:vv,meshtoon_frag:_v,points_vert:yv,points_frag:xv,shadow_vert:Mv,shadow_frag:wv,sprite_vert:bv,sprite_frag:Ev},ve={common:{diffuse:{value:new xe(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new Lt},uv2Transform:{value:new Lt},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new se(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new xe(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new xe(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Lt}},sprite:{diffuse:{value:new xe(16777215)},opacity:{value:1},center:{value:new se(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Lt}}},vn={basic:{uniforms:Nt([ve.common,ve.specularmap,ve.envmap,ve.aomap,ve.lightmap,ve.fog]),vertexShader:Je.meshbasic_vert,fragmentShader:Je.meshbasic_frag},lambert:{uniforms:Nt([ve.common,ve.specularmap,ve.envmap,ve.aomap,ve.lightmap,ve.emissivemap,ve.fog,ve.lights,{emissive:{value:new xe(0)}}]),vertexShader:Je.meshlambert_vert,fragmentShader:Je.meshlambert_frag},phong:{uniforms:Nt([ve.common,ve.specularmap,ve.envmap,ve.aomap,ve.lightmap,ve.emissivemap,ve.bumpmap,ve.normalmap,ve.displacementmap,ve.fog,ve.lights,{emissive:{value:new xe(0)},specular:{value:new xe(1118481)},shininess:{value:30}}]),vertexShader:Je.meshphong_vert,fragmentShader:Je.meshphong_frag},standard:{uniforms:Nt([ve.common,ve.envmap,ve.aomap,ve.lightmap,ve.emissivemap,ve.bumpmap,ve.normalmap,ve.displacementmap,ve.roughnessmap,ve.metalnessmap,ve.fog,ve.lights,{emissive:{value:new xe(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Je.meshphysical_vert,fragmentShader:Je.meshphysical_frag},toon:{uniforms:Nt([ve.common,ve.aomap,ve.lightmap,ve.emissivemap,ve.bumpmap,ve.normalmap,ve.displacementmap,ve.gradientmap,ve.fog,ve.lights,{emissive:{value:new xe(0)}}]),vertexShader:Je.meshtoon_vert,fragmentShader:Je.meshtoon_frag},matcap:{uniforms:Nt([ve.common,ve.bumpmap,ve.normalmap,ve.displacementmap,ve.fog,{matcap:{value:null}}]),vertexShader:Je.meshmatcap_vert,fragmentShader:Je.meshmatcap_frag},points:{uniforms:Nt([ve.points,ve.fog]),vertexShader:Je.points_vert,fragmentShader:Je.points_frag},dashed:{uniforms:Nt([ve.common,ve.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Je.linedashed_vert,fragmentShader:Je.linedashed_frag},depth:{uniforms:Nt([ve.common,ve.displacementmap]),vertexShader:Je.depth_vert,fragmentShader:Je.depth_frag},normal:{uniforms:Nt([ve.common,ve.bumpmap,ve.normalmap,ve.displacementmap,{opacity:{value:1}}]),vertexShader:Je.meshnormal_vert,fragmentShader:Je.meshnormal_frag},sprite:{uniforms:Nt([ve.sprite,ve.fog]),vertexShader:Je.sprite_vert,fragmentShader:Je.sprite_frag},background:{uniforms:{uvTransform:{value:new Lt},t2D:{value:null}},vertexShader:Je.background_vert,fragmentShader:Je.background_frag},cube:{uniforms:Nt([ve.envmap,{opacity:{value:1}}]),vertexShader:Je.cube_vert,fragmentShader:Je.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Je.equirect_vert,fragmentShader:Je.equirect_frag},distanceRGBA:{uniforms:Nt([ve.common,ve.displacementmap,{referencePosition:{value:new P},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Je.distanceRGBA_vert,fragmentShader:Je.distanceRGBA_frag},shadow:{uniforms:Nt([ve.lights,ve.fog,{color:{value:new xe(0)},opacity:{value:1}}]),vertexShader:Je.shadow_vert,fragmentShader:Je.shadow_frag}};vn.physical={uniforms:Nt([vn.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new se(1,1)},clearcoatNormalMap:{value:null},sheen:{value:0},sheenColor:{value:new xe(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new se},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new xe(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new xe(1,1,1)},specularColorMap:{value:null}}]),vertexShader:Je.meshphysical_vert,fragmentShader:Je.meshphysical_frag};function Tv(r,e,t,n,i,s){const o=new xe(0);let a=i===!0?0:1,c,h,u=null,f=0,d=null;function p(m,g){let b=!1,E=g.isScene===!0?g.background:null;E&&E.isTexture&&(E=e.get(E));const A=r.xr,S=A.getSession&&A.getSession();S&&S.environmentBlendMode==="additive"&&(E=null),E===null?v(o,a):E&&E.isColor&&(v(E,1),b=!0),(r.autoClear||b)&&r.clear(r.autoClearColor,r.autoClearDepth,r.autoClearStencil),E&&(E.isCubeTexture||E.mapping===Xr)?(h===void 0&&(h=new St(new qn(1,1,1),new ln({name:"BackgroundCubeMaterial",uniforms:Dr(vn.cube.uniforms),vertexShader:vn.cube.vertexShader,fragmentShader:vn.cube.fragmentShader,side:jt,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),h.geometry.deleteAttribute("uv"),h.onBeforeRender=function(C,N,U){this.matrixWorld.copyPosition(U.matrixWorld)},Object.defineProperty(h.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(h)),h.material.uniforms.envMap.value=E,h.material.uniforms.flipEnvMap.value=E.isCubeTexture&&E.isRenderTargetTexture===!1?-1:1,(u!==E||f!==E.version||d!==r.toneMapping)&&(h.material.needsUpdate=!0,u=E,f=E.version,d=r.toneMapping),m.unshift(h,h.geometry,h.material,0,0,null)):E&&E.isTexture&&(c===void 0&&(c=new St(new Ji(2,2),new ln({name:"BackgroundMaterial",uniforms:Dr(vn.background.uniforms),vertexShader:vn.background.vertexShader,fragmentShader:vn.background.fragmentShader,side:qi,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(c)),c.material.uniforms.t2D.value=E,E.matrixAutoUpdate===!0&&E.updateMatrix(),c.material.uniforms.uvTransform.value.copy(E.matrix),(u!==E||f!==E.version||d!==r.toneMapping)&&(c.material.needsUpdate=!0,u=E,f=E.version,d=r.toneMapping),m.unshift(c,c.geometry,c.material,0,0,null))}function v(m,g){t.buffers.color.setClear(m.r,m.g,m.b,g,s)}return{getClearColor:function(){return o},setClearColor:function(m,g=1){o.set(m),a=g,v(o,a)},getClearAlpha:function(){return a},setClearAlpha:function(m){a=m,v(o,a)},render:p}}function Sv(r,e,t,n){const i=r.getParameter(r.MAX_VERTEX_ATTRIBS),s=n.isWebGL2?null:e.get("OES_vertex_array_object"),o=n.isWebGL2||s!==null,a={},c=g(null);let h=c,u=!1;function f(X,k,Z,$,V){let ie=!1;if(o){const oe=m($,Z,k);h!==oe&&(h=oe,p(h.object)),ie=b($,V),ie&&E($,V)}else{const oe=k.wireframe===!0;(h.geometry!==$.id||h.program!==Z.id||h.wireframe!==oe)&&(h.geometry=$.id,h.program=Z.id,h.wireframe=oe,ie=!0)}X.isInstancedMesh===!0&&(ie=!0),V!==null&&t.update(V,r.ELEMENT_ARRAY_BUFFER),(ie||u)&&(u=!1,D(X,k,Z,$),V!==null&&r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,t.get(V).buffer))}function d(){return n.isWebGL2?r.createVertexArray():s.createVertexArrayOES()}function p(X){return n.isWebGL2?r.bindVertexArray(X):s.bindVertexArrayOES(X)}function v(X){return n.isWebGL2?r.deleteVertexArray(X):s.deleteVertexArrayOES(X)}function m(X,k,Z){const $=Z.wireframe===!0;let V=a[X.id];V===void 0&&(V={},a[X.id]=V);let ie=V[k.id];ie===void 0&&(ie={},V[k.id]=ie);let oe=ie[$];return oe===void 0&&(oe=g(d()),ie[$]=oe),oe}function g(X){const k=[],Z=[],$=[];for(let V=0;V<i;V++)k[V]=0,Z[V]=0,$[V]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:k,enabledAttributes:Z,attributeDivisors:$,object:X,attributes:{},index:null}}function b(X,k){const Z=h.attributes,$=X.attributes;let V=0;for(const ie in $){const oe=Z[ie],ue=$[ie];if(oe===void 0||oe.attribute!==ue||oe.data!==ue.data)return!0;V++}return h.attributesNum!==V||h.index!==k}function E(X,k){const Z={},$=X.attributes;let V=0;for(const ie in $){const oe=$[ie],ue={};ue.attribute=oe,oe.data&&(ue.data=oe.data),Z[ie]=ue,V++}h.attributes=Z,h.attributesNum=V,h.index=k}function A(){const X=h.newAttributes;for(let k=0,Z=X.length;k<Z;k++)X[k]=0}function S(X){C(X,0)}function C(X,k){const Z=h.newAttributes,$=h.enabledAttributes,V=h.attributeDivisors;Z[X]=1,$[X]===0&&(r.enableVertexAttribArray(X),$[X]=1),V[X]!==k&&((n.isWebGL2?r:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](X,k),V[X]=k)}function N(){const X=h.newAttributes,k=h.enabledAttributes;for(let Z=0,$=k.length;Z<$;Z++)k[Z]!==X[Z]&&(r.disableVertexAttribArray(Z),k[Z]=0)}function U(X,k,Z,$,V,ie){n.isWebGL2===!0&&(Z===r.INT||Z===r.UNSIGNED_INT)?r.vertexAttribIPointer(X,k,Z,V,ie):r.vertexAttribPointer(X,k,Z,$,V,ie)}function D(X,k,Z,$){if(n.isWebGL2===!1&&(X.isInstancedMesh||$.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;A();const V=$.attributes,ie=Z.getAttributes(),oe=k.defaultAttributeValues;for(const ue in ie){const ae=ie[ue];if(ae.location>=0){let Le=V[ue];if(Le===void 0&&(ue==="instanceMatrix"&&X.instanceMatrix&&(Le=X.instanceMatrix),ue==="instanceColor"&&X.instanceColor&&(Le=X.instanceColor)),Le!==void 0){const ke=Le.normalized,Ne=Le.itemSize,W=t.get(Le);if(W===void 0)continue;const nt=W.buffer,He=W.type,Ve=W.bytesPerElement;if(Le.isInterleavedBufferAttribute){const de=Le.data,qe=de.stride,te=Le.offset;if(de.isInstancedInterleavedBuffer){for(let ne=0;ne<ae.locationSize;ne++)C(ae.location+ne,de.meshPerAttribute);X.isInstancedMesh!==!0&&$._maxInstanceCount===void 0&&($._maxInstanceCount=de.meshPerAttribute*de.count)}else for(let ne=0;ne<ae.locationSize;ne++)S(ae.location+ne);r.bindBuffer(r.ARRAY_BUFFER,nt);for(let ne=0;ne<ae.locationSize;ne++)U(ae.location+ne,Ne/ae.locationSize,He,ke,qe*Ve,(te+Ne/ae.locationSize*ne)*Ve)}else{if(Le.isInstancedBufferAttribute){for(let de=0;de<ae.locationSize;de++)C(ae.location+de,Le.meshPerAttribute);X.isInstancedMesh!==!0&&$._maxInstanceCount===void 0&&($._maxInstanceCount=Le.meshPerAttribute*Le.count)}else for(let de=0;de<ae.locationSize;de++)S(ae.location+de);r.bindBuffer(r.ARRAY_BUFFER,nt);for(let de=0;de<ae.locationSize;de++)U(ae.location+de,Ne/ae.locationSize,He,ke,Ne*Ve,Ne/ae.locationSize*de*Ve)}}else if(oe!==void 0){const ke=oe[ue];if(ke!==void 0)switch(ke.length){case 2:r.vertexAttrib2fv(ae.location,ke);break;case 3:r.vertexAttrib3fv(ae.location,ke);break;case 4:r.vertexAttrib4fv(ae.location,ke);break;default:r.vertexAttrib1fv(ae.location,ke)}}}}N()}function K(){H();for(const X in a){const k=a[X];for(const Z in k){const $=k[Z];for(const V in $)v($[V].object),delete $[V];delete k[Z]}delete a[X]}}function G(X){if(a[X.id]===void 0)return;const k=a[X.id];for(const Z in k){const $=k[Z];for(const V in $)v($[V].object),delete $[V];delete k[Z]}delete a[X.id]}function R(X){for(const k in a){const Z=a[k];if(Z[X.id]===void 0)continue;const $=Z[X.id];for(const V in $)v($[V].object),delete $[V];delete Z[X.id]}}function H(){ee(),u=!0,h!==c&&(h=c,p(h.object))}function ee(){c.geometry=null,c.program=null,c.wireframe=!1}return{setup:f,reset:H,resetDefaultState:ee,dispose:K,releaseStatesOfGeometry:G,releaseStatesOfProgram:R,initAttributes:A,enableAttribute:S,disableUnusedAttributes:N}}function Av(r,e,t,n){const i=n.isWebGL2;let s;function o(h){s=h}function a(h,u){r.drawArrays(s,h,u),t.update(u,s,1)}function c(h,u,f){if(f===0)return;let d,p;if(i)d=r,p="drawArraysInstanced";else if(d=e.get("ANGLE_instanced_arrays"),p="drawArraysInstancedANGLE",d===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}d[p](s,h,u,f),t.update(u,s,f)}this.setMode=o,this.render=a,this.renderInstances=c}function Rv(r,e,t){let n;function i(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const U=e.get("EXT_texture_filter_anisotropic");n=r.getParameter(U.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function s(U){if(U==="highp"){if(r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.HIGH_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.HIGH_FLOAT).precision>0)return"highp";U="mediump"}return U==="mediump"&&r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.MEDIUM_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}const o=typeof WebGL2RenderingContext!="undefined"&&r instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext!="undefined"&&r instanceof WebGL2ComputeRenderingContext;let a=t.precision!==void 0?t.precision:"highp";const c=s(a);c!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",c,"instead."),a=c);const h=o||e.has("WEBGL_draw_buffers"),u=t.logarithmicDepthBuffer===!0,f=r.getParameter(r.MAX_TEXTURE_IMAGE_UNITS),d=r.getParameter(r.MAX_VERTEX_TEXTURE_IMAGE_UNITS),p=r.getParameter(r.MAX_TEXTURE_SIZE),v=r.getParameter(r.MAX_CUBE_MAP_TEXTURE_SIZE),m=r.getParameter(r.MAX_VERTEX_ATTRIBS),g=r.getParameter(r.MAX_VERTEX_UNIFORM_VECTORS),b=r.getParameter(r.MAX_VARYING_VECTORS),E=r.getParameter(r.MAX_FRAGMENT_UNIFORM_VECTORS),A=d>0,S=o||e.has("OES_texture_float"),C=A&&S,N=o?r.getParameter(r.MAX_SAMPLES):0;return{isWebGL2:o,drawBuffers:h,getMaxAnisotropy:i,getMaxPrecision:s,precision:a,logarithmicDepthBuffer:u,maxTextures:f,maxVertexTextures:d,maxTextureSize:p,maxCubemapSize:v,maxAttributes:m,maxVertexUniforms:g,maxVaryings:b,maxFragmentUniforms:E,vertexTextures:A,floatFragmentTextures:S,floatVertexTextures:C,maxSamples:N}}function Cv(r){const e=this;let t=null,n=0,i=!1,s=!1;const o=new bn,a=new Lt,c={value:null,needsUpdate:!1};this.uniform=c,this.numPlanes=0,this.numIntersection=0,this.init=function(f,d,p){const v=f.length!==0||d||n!==0||i;return i=d,t=u(f,p,0),n=f.length,v},this.beginShadows=function(){s=!0,u(null)},this.endShadows=function(){s=!1,h()},this.setState=function(f,d,p){const v=f.clippingPlanes,m=f.clipIntersection,g=f.clipShadows,b=r.get(f);if(!i||v===null||v.length===0||s&&!g)s?u(null):h();else{const E=s?0:n,A=E*4;let S=b.clippingState||null;c.value=S,S=u(v,d,A,p);for(let C=0;C!==A;++C)S[C]=t[C];b.clippingState=S,this.numIntersection=m?this.numPlanes:0,this.numPlanes+=E}};function h(){c.value!==t&&(c.value=t,c.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function u(f,d,p,v){const m=f!==null?f.length:0;let g=null;if(m!==0){if(g=c.value,v!==!0||g===null){const b=p+m*4,E=d.matrixWorldInverse;a.getNormalMatrix(E),(g===null||g.length<b)&&(g=new Float32Array(b));for(let A=0,S=p;A!==m;++A,S+=4)o.copy(f[A]).applyMatrix4(E,a),o.normal.toArray(g,S),g[S+3]=o.constant}c.value=g,c.needsUpdate=!0}return e.numPlanes=m,e.numIntersection=0,g}}function Lv(r){let e=new WeakMap;function t(o,a){return a===gs?o.mapping=ui:a===vs&&(o.mapping=di),o}function n(o){if(o&&o.isTexture&&o.isRenderTargetTexture===!1){const a=o.mapping;if(a===gs||a===vs)if(e.has(o)){const c=e.get(o).texture;return t(c,o.mapping)}else{const c=o.image;if(c&&c.height>0){const h=new na(c.height/2);return h.fromEquirectangularTexture(r,o),e.set(o,h),o.addEventListener("dispose",i),t(h.texture,o.mapping)}else return null}}return o}function i(o){const a=o.target;a.removeEventListener("dispose",i);const c=e.get(a);c!==void 0&&(e.delete(a),c.dispose())}function s(){e=new WeakMap}return{get:n,dispose:s}}class Ns extends Fs{constructor(e=-1,t=1,n=1,i=-1,s=.1,o=2e3){super();this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=s,this.far=o,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,s,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let s=n-e,o=n+e,a=i+t,c=i-t;if(this.view!==null&&this.view.enabled){const h=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=h*this.view.offsetX,o=s+h*this.view.width,a-=u*this.view.offsetY,c=a-u*this.view.height}this.projectionMatrix.makeOrthographic(s,o,a,c,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}Ns.prototype.isOrthographicCamera=!0;const Rr=4,Kc=[.125,.215,.35,.446,.526,.582],Oi=20,qa=new Ns,jc=new xe;let Ya=null;const Di=(1+Math.sqrt(5))/2,Mr=1/Di,$c=[new P(1,1,1),new P(-1,1,1),new P(1,1,-1),new P(-1,1,-1),new P(0,Di,Mr),new P(0,Di,-Mr),new P(Mr,0,Di),new P(-Mr,0,Di),new P(Di,Mr,0),new P(-Di,Mr,0)];class Ol{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){Ya=this._renderer.getRenderTarget(),this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(e,n,i,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=th(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=eh(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Ya),e.scissorTest=!1,po(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===ui||e.mapping===di?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),Ya=this._renderer.getRenderTarget();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize-32,n={magFilter:_t,minFilter:_t,generateMipmaps:!1,type:Gi,format:Kt,encoding:An,depthBuffer:!1},i=Qc(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=Qc(e,t,n);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=Pv(s)),this._blurMaterial=Iv(s,e,t)}return i}_compileMaterial(e){const t=new St(this._lodPlanes[0],e);this._renderer.compile(t,qa)}_sceneToCubeUV(e,t,n,i){const a=new It(90,1,t,n),c=[1,-1,1,1,1,1],h=[1,1,1,-1,-1,-1],u=this._renderer,f=u.autoClear,d=u.toneMapping;u.getClearColor(jc),u.toneMapping=En,u.autoClear=!1;const p=new Jn({name:"PMREM.Background",side:jt,depthWrite:!1,depthTest:!1}),v=new St(new qn,p);let m=!1;const g=e.background;g?g.isColor&&(p.color.copy(g),e.background=null,m=!0):(p.color.copy(jc),m=!0);for(let b=0;b<6;b++){const E=b%3;E===0?(a.up.set(0,c[b],0),a.lookAt(h[b],0,0)):E===1?(a.up.set(0,0,c[b]),a.lookAt(0,h[b],0)):(a.up.set(0,c[b],0),a.lookAt(0,0,h[b]));const A=this._cubeSize;po(i,E*A,b>2?A:0,A,A),u.setRenderTarget(i),m&&u.render(v,a),u.render(e,a)}v.geometry.dispose(),v.material.dispose(),u.toneMapping=d,u.autoClear=f,e.background=g}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===ui||e.mapping===di;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=th()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=eh());const s=i?this._cubemapMaterial:this._equirectMaterial,o=new St(this._lodPlanes[0],s),a=s.uniforms;a.envMap.value=e;const c=this._cubeSize;po(t,0,0,3*c,2*c),n.setRenderTarget(t),n.render(o,qa)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const s=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),o=$c[(i-1)%$c.length];this._blur(e,i-1,i,s,o)}t.autoClear=n}_blur(e,t,n,i,s){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,n,i,"latitudinal",s),this._halfBlur(o,e,n,n,i,"longitudinal",s)}_halfBlur(e,t,n,i,s,o,a){const c=this._renderer,h=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const u=3,f=new St(this._lodPlanes[i],h),d=h.uniforms,p=this._sizeLods[n]-1,v=isFinite(s)?Math.PI/(2*p):2*Math.PI/(2*Oi-1),m=s/v,g=isFinite(s)?1+Math.floor(u*m):Oi;g>Oi&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${g} samples when the maximum is set to ${Oi}`);const b=[];let E=0;for(let U=0;U<Oi;++U){const D=U/m,K=Math.exp(-D*D/2);b.push(K),U===0?E+=K:U<g&&(E+=2*K)}for(let U=0;U<b.length;U++)b[U]=b[U]/E;d.envMap.value=e.texture,d.samples.value=g,d.weights.value=b,d.latitudinal.value=o==="latitudinal",a&&(d.poleAxis.value=a);const{_lodMax:A}=this;d.dTheta.value=v,d.mipInt.value=A-n;const S=this._sizeLods[i],C=3*S*(i>A-Rr?i-A+Rr:0),N=4*(this._cubeSize-S);po(t,C,N,3*S,2*S),c.setRenderTarget(t),c.render(f,qa)}}function Pv(r){const e=[],t=[],n=[];let i=r;const s=r-Rr+1+Kc.length;for(let o=0;o<s;o++){const a=Math.pow(2,i);t.push(a);let c=1/a;o>r-Rr?c=Kc[o-r+Rr-1]:o===0&&(c=0),n.push(c);const h=1/(a-1),u=-h/2,f=1+h/2,d=[u,u,f,u,f,f,u,u,f,f,u,f],p=6,v=6,m=3,g=2,b=1,E=new Float32Array(m*v*p),A=new Float32Array(g*v*p),S=new Float32Array(b*v*p);for(let N=0;N<p;N++){const U=N%3*2/3-1,D=N>2?0:-1,K=[U,D,0,U+2/3,D,0,U+2/3,D+1,0,U,D,0,U+2/3,D+1,0,U,D+1,0];E.set(K,m*v*N),A.set(d,g*v*N);const G=[N,N,N,N,N,N];S.set(G,b*v*N)}const C=new Oe;C.setAttribute("position",new et(E,m)),C.setAttribute("uv",new et(A,g)),C.setAttribute("faceIndex",new et(S,b)),e.push(C),i>Rr&&i--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function Qc(r,e,t){const n=new Gt(r,e,t);return n.texture.mapping=Xr,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function po(r,e,t,n,i){r.viewport.set(e,t,n,i),r.scissor.set(e,t,n,i)}function Iv(r,e,t){const n=new Float32Array(Oi),i=new P(0,1,0);return new ln({name:"SphericalGaussianBlur",defines:{n:Oi,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${r}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:Jl(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Xn,depthTest:!1,depthWrite:!1})}function eh(){return new ln({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Jl(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Xn,depthTest:!1,depthWrite:!1})}function th(){return new ln({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Jl(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Xn,depthTest:!1,depthWrite:!1})}function Jl(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function Dv(r){let e=new WeakMap,t=null;function n(a){if(a&&a.isTexture){const c=a.mapping,h=c===gs||c===vs,u=c===ui||c===di;if(h||u)if(a.isRenderTargetTexture&&a.needsPMREMUpdate===!0){a.needsPMREMUpdate=!1;let f=e.get(a);return t===null&&(t=new Ol(r)),f=h?t.fromEquirectangular(a,f):t.fromCubemap(a,f),e.set(a,f),f.texture}else{if(e.has(a))return e.get(a).texture;{const f=a.image;if(h&&f&&f.height>0||u&&f&&i(f)){t===null&&(t=new Ol(r));const d=h?t.fromEquirectangular(a):t.fromCubemap(a);return e.set(a,d),a.addEventListener("dispose",s),d.texture}else return null}}}return a}function i(a){let c=0;const h=6;for(let u=0;u<h;u++)a[u]!==void 0&&c++;return c===h}function s(a){const c=a.target;c.removeEventListener("dispose",s);const h=e.get(c);h!==void 0&&(e.delete(c),h.dispose())}function o(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:o}}function Fv(r){const e={};function t(n){if(e[n]!==void 0)return e[n];let i;switch(n){case"WEBGL_depth_texture":i=r.getExtension("WEBGL_depth_texture")||r.getExtension("MOZ_WEBGL_depth_texture")||r.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=r.getExtension("EXT_texture_filter_anisotropic")||r.getExtension("MOZ_EXT_texture_filter_anisotropic")||r.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=r.getExtension("WEBGL_compressed_texture_s3tc")||r.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=r.getExtension("WEBGL_compressed_texture_pvrtc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=r.getExtension(n)}return e[n]=i,i}return{has:function(n){return t(n)!==null},init:function(n){n.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(n){const i=t(n);return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function Ov(r,e,t,n){const i={},s=new WeakMap;function o(f){const d=f.target;d.index!==null&&e.remove(d.index);for(const v in d.attributes)e.remove(d.attributes[v]);d.removeEventListener("dispose",o),delete i[d.id];const p=s.get(d);p&&(e.remove(p),s.delete(d)),n.releaseStatesOfGeometry(d),d.isInstancedBufferGeometry===!0&&delete d._maxInstanceCount,t.memory.geometries--}function a(f,d){return i[d.id]===!0||(d.addEventListener("dispose",o),i[d.id]=!0,t.memory.geometries++),d}function c(f){const d=f.attributes;for(const v in d)e.update(d[v],r.ARRAY_BUFFER);const p=f.morphAttributes;for(const v in p){const m=p[v];for(let g=0,b=m.length;g<b;g++)e.update(m[g],r.ARRAY_BUFFER)}}function h(f){const d=[],p=f.index,v=f.attributes.position;let m=0;if(p!==null){const E=p.array;m=p.version;for(let A=0,S=E.length;A<S;A+=3){const C=E[A+0],N=E[A+1],U=E[A+2];d.push(C,N,N,U,U,C)}}else{const E=v.array;m=v.version;for(let A=0,S=E.length/3-1;A<S;A+=3){const C=A+0,N=A+1,U=A+2;d.push(C,N,N,U,U,C)}}const g=new(cd(d)?ea:Qo)(d,1);g.version=m;const b=s.get(f);b&&e.remove(b),s.set(f,g)}function u(f){const d=s.get(f);if(d){const p=f.index;p!==null&&d.version<p.version&&h(f)}else h(f);return s.get(f)}return{get:a,update:c,getWireframeAttribute:u}}function Nv(r,e,t,n){const i=n.isWebGL2;let s;function o(d){s=d}let a,c;function h(d){a=d.type,c=d.bytesPerElement}function u(d,p){r.drawElements(s,p,a,d*c),t.update(p,s,1)}function f(d,p,v){if(v===0)return;let m,g;if(i)m=r,g="drawElementsInstanced";else if(m=e.get("ANGLE_instanced_arrays"),g="drawElementsInstancedANGLE",m===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}m[g](s,p,a,d*c,v),t.update(p,s,v)}this.setMode=o,this.setIndex=h,this.render=u,this.renderInstances=f}function Uv(r){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(s,o,a){switch(t.calls++,o){case r.TRIANGLES:t.triangles+=a*(s/3);break;case r.LINES:t.lines+=a*(s/2);break;case r.LINE_STRIP:t.lines+=a*(s-1);break;case r.LINE_LOOP:t.lines+=a*s;break;case r.POINTS:t.points+=a*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function i(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}function Bv(r,e){return r[0]-e[0]}function Hv(r,e){return Math.abs(e[1])-Math.abs(r[1])}function Za(r,e){let t=1;const n=e.isInterleavedBufferAttribute?e.data.array:e.array;n instanceof Int8Array?t=127:n instanceof Int16Array?t=32767:n instanceof Int32Array?t=2147483647:console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ",n),r.divideScalar(t)}function zv(r,e,t){const n={},i=new Float32Array(8),s=new WeakMap,o=new st,a=[];for(let h=0;h<8;h++)a[h]=[h,0];function c(h,u,f,d){const p=h.morphTargetInfluences;if(e.isWebGL2===!0){const v=u.morphAttributes.position||u.morphAttributes.normal||u.morphAttributes.color,m=v!==void 0?v.length:0;let g=s.get(u);if(g===void 0||g.count!==m){let k=function(){ee.dispose(),s.delete(u),u.removeEventListener("dispose",k)};g!==void 0&&g.texture.dispose();const A=u.morphAttributes.position!==void 0,S=u.morphAttributes.normal!==void 0,C=u.morphAttributes.color!==void 0,N=u.morphAttributes.position||[],U=u.morphAttributes.normal||[],D=u.morphAttributes.color||[];let K=0;A===!0&&(K=1),S===!0&&(K=2),C===!0&&(K=3);let G=u.attributes.position.count*K,R=1;G>e.maxTextureSize&&(R=Math.ceil(G/e.maxTextureSize),G=e.maxTextureSize);const H=new Float32Array(G*R*4*m),ee=new qr(H,G,R,m);ee.type=Wn,ee.needsUpdate=!0;const X=K*4;for(let Z=0;Z<m;Z++){const $=N[Z],V=U[Z],ie=D[Z],oe=G*R*4*Z;for(let ue=0;ue<$.count;ue++){const ae=ue*X;A===!0&&(o.fromBufferAttribute($,ue),$.normalized===!0&&Za(o,$),H[oe+ae+0]=o.x,H[oe+ae+1]=o.y,H[oe+ae+2]=o.z,H[oe+ae+3]=0),S===!0&&(o.fromBufferAttribute(V,ue),V.normalized===!0&&Za(o,V),H[oe+ae+4]=o.x,H[oe+ae+5]=o.y,H[oe+ae+6]=o.z,H[oe+ae+7]=0),C===!0&&(o.fromBufferAttribute(ie,ue),ie.normalized===!0&&Za(o,ie),H[oe+ae+8]=o.x,H[oe+ae+9]=o.y,H[oe+ae+10]=o.z,H[oe+ae+11]=ie.itemSize===4?o.w:1)}}g={count:m,texture:ee,size:new se(G,R)},s.set(u,g),u.addEventListener("dispose",k)}let b=0;for(let A=0;A<p.length;A++)b+=p[A];const E=u.morphTargetsRelative?1:1-b;d.getUniforms().setValue(r,"morphTargetBaseInfluence",E),d.getUniforms().setValue(r,"morphTargetInfluences",p),d.getUniforms().setValue(r,"morphTargetsTexture",g.texture,t),d.getUniforms().setValue(r,"morphTargetsTextureSize",g.size)}else{const v=p===void 0?0:p.length;let m=n[u.id];if(m===void 0||m.length!==v){m=[];for(let S=0;S<v;S++)m[S]=[S,0];n[u.id]=m}for(let S=0;S<v;S++){const C=m[S];C[0]=S,C[1]=p[S]}m.sort(Hv);for(let S=0;S<8;S++)S<v&&m[S][1]?(a[S][0]=m[S][0],a[S][1]=m[S][1]):(a[S][0]=Number.MAX_SAFE_INTEGER,a[S][1]=0);a.sort(Bv);const g=u.morphAttributes.position,b=u.morphAttributes.normal;let E=0;for(let S=0;S<8;S++){const C=a[S],N=C[0],U=C[1];N!==Number.MAX_SAFE_INTEGER&&U?(g&&u.getAttribute("morphTarget"+S)!==g[N]&&u.setAttribute("morphTarget"+S,g[N]),b&&u.getAttribute("morphNormal"+S)!==b[N]&&u.setAttribute("morphNormal"+S,b[N]),i[S]=U,E+=U):(g&&u.hasAttribute("morphTarget"+S)===!0&&u.deleteAttribute("morphTarget"+S),b&&u.hasAttribute("morphNormal"+S)===!0&&u.deleteAttribute("morphNormal"+S),i[S]=0)}const A=u.morphTargetsRelative?1:1-E;d.getUniforms().setValue(r,"morphTargetBaseInfluence",A),d.getUniforms().setValue(r,"morphTargetInfluences",i)}}return{update:c}}function Gv(r,e,t,n){let i=new WeakMap;function s(c){const h=n.render.frame,u=c.geometry,f=e.get(c,u);return i.get(f)!==h&&(e.update(f),i.set(f,h)),c.isInstancedMesh&&(c.hasEventListener("dispose",a)===!1&&c.addEventListener("dispose",a),t.update(c.instanceMatrix,r.ARRAY_BUFFER),c.instanceColor!==null&&t.update(c.instanceColor,r.ARRAY_BUFFER)),f}function o(){i=new WeakMap}function a(c){const h=c.target;h.removeEventListener("dispose",a),t.remove(h.instanceMatrix),h.instanceColor!==null&&t.remove(h.instanceColor)}return{update:s,dispose:o}}const bd=new At,Ed=new qr,Td=new Ds,Sd=new Yr,nh=[],ih=[],rh=new Float32Array(16),sh=new Float32Array(9),oh=new Float32Array(4);function Zr(r,e,t){const n=r[0];if(n<=0||n>0)return r;const i=e*t;let s=nh[i];if(s===void 0&&(s=new Float32Array(i),nh[i]=s),e!==0){n.toArray(s,0);for(let o=1,a=0;o!==e;++o)a+=t,r[o].toArray(s,a)}return s}function kt(r,e){if(r.length!==e.length)return!1;for(let t=0,n=r.length;t<n;t++)if(r[t]!==e[t])return!1;return!0}function Ut(r,e){for(let t=0,n=e.length;t<n;t++)r[t]=e[t]}function ia(r,e){let t=ih[e];t===void 0&&(t=new Int32Array(e),ih[e]=t);for(let n=0;n!==e;++n)t[n]=r.allocateTextureUnit();return t}function kv(r,e){const t=this.cache;t[0]!==e&&(r.uniform1f(this.addr,e),t[0]=e)}function Vv(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(kt(t,e))return;r.uniform2fv(this.addr,e),Ut(t,e)}}function Wv(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(r.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(kt(t,e))return;r.uniform3fv(this.addr,e),Ut(t,e)}}function Xv(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(kt(t,e))return;r.uniform4fv(this.addr,e),Ut(t,e)}}function qv(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(kt(t,e))return;r.uniformMatrix2fv(this.addr,!1,e),Ut(t,e)}else{if(kt(t,n))return;oh.set(n),r.uniformMatrix2fv(this.addr,!1,oh),Ut(t,n)}}function Yv(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(kt(t,e))return;r.uniformMatrix3fv(this.addr,!1,e),Ut(t,e)}else{if(kt(t,n))return;sh.set(n),r.uniformMatrix3fv(this.addr,!1,sh),Ut(t,n)}}function Zv(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(kt(t,e))return;r.uniformMatrix4fv(this.addr,!1,e),Ut(t,e)}else{if(kt(t,n))return;rh.set(n),r.uniformMatrix4fv(this.addr,!1,rh),Ut(t,n)}}function Jv(r,e){const t=this.cache;t[0]!==e&&(r.uniform1i(this.addr,e),t[0]=e)}function Kv(r,e){const t=this.cache;kt(t,e)||(r.uniform2iv(this.addr,e),Ut(t,e))}function jv(r,e){const t=this.cache;kt(t,e)||(r.uniform3iv(this.addr,e),Ut(t,e))}function $v(r,e){const t=this.cache;kt(t,e)||(r.uniform4iv(this.addr,e),Ut(t,e))}function Qv(r,e){const t=this.cache;t[0]!==e&&(r.uniform1ui(this.addr,e),t[0]=e)}function e_(r,e){const t=this.cache;kt(t,e)||(r.uniform2uiv(this.addr,e),Ut(t,e))}function t_(r,e){const t=this.cache;kt(t,e)||(r.uniform3uiv(this.addr,e),Ut(t,e))}function n_(r,e){const t=this.cache;kt(t,e)||(r.uniform4uiv(this.addr,e),Ut(t,e))}function i_(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture2D(e||bd,i)}function r_(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||Td,i)}function s_(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||Sd,i)}function o_(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||Ed,i)}function a_(r){switch(r){case 5126:return kv;case 35664:return Vv;case 35665:return Wv;case 35666:return Xv;case 35674:return qv;case 35675:return Yv;case 35676:return Zv;case 5124:case 35670:return Jv;case 35667:case 35671:return Kv;case 35668:case 35672:return jv;case 35669:case 35673:return $v;case 5125:return Qv;case 36294:return e_;case 36295:return t_;case 36296:return n_;case 35678:case 36198:case 36298:case 36306:case 35682:return i_;case 35679:case 36299:case 36307:return r_;case 35680:case 36300:case 36308:case 36293:return s_;case 36289:case 36303:case 36311:case 36292:return o_}}function l_(r,e){r.uniform1fv(this.addr,e)}function c_(r,e){const t=Zr(e,this.size,2);r.uniform2fv(this.addr,t)}function h_(r,e){const t=Zr(e,this.size,3);r.uniform3fv(this.addr,t)}function u_(r,e){const t=Zr(e,this.size,4);r.uniform4fv(this.addr,t)}function d_(r,e){const t=Zr(e,this.size,4);r.uniformMatrix2fv(this.addr,!1,t)}function f_(r,e){const t=Zr(e,this.size,9);r.uniformMatrix3fv(this.addr,!1,t)}function p_(r,e){const t=Zr(e,this.size,16);r.uniformMatrix4fv(this.addr,!1,t)}function m_(r,e){r.uniform1iv(this.addr,e)}function g_(r,e){r.uniform2iv(this.addr,e)}function v_(r,e){r.uniform3iv(this.addr,e)}function __(r,e){r.uniform4iv(this.addr,e)}function y_(r,e){r.uniform1uiv(this.addr,e)}function x_(r,e){r.uniform2uiv(this.addr,e)}function M_(r,e){r.uniform3uiv(this.addr,e)}function w_(r,e){r.uniform4uiv(this.addr,e)}function b_(r,e,t){const n=e.length,i=ia(t,n);r.uniform1iv(this.addr,i);for(let s=0;s!==n;++s)t.setTexture2D(e[s]||bd,i[s])}function E_(r,e,t){const n=e.length,i=ia(t,n);r.uniform1iv(this.addr,i);for(let s=0;s!==n;++s)t.setTexture3D(e[s]||Td,i[s])}function T_(r,e,t){const n=e.length,i=ia(t,n);r.uniform1iv(this.addr,i);for(let s=0;s!==n;++s)t.setTextureCube(e[s]||Sd,i[s])}function S_(r,e,t){const n=e.length,i=ia(t,n);r.uniform1iv(this.addr,i);for(let s=0;s!==n;++s)t.setTexture2DArray(e[s]||Ed,i[s])}function A_(r){switch(r){case 5126:return l_;case 35664:return c_;case 35665:return h_;case 35666:return u_;case 35674:return d_;case 35675:return f_;case 35676:return p_;case 5124:case 35670:return m_;case 35667:case 35671:return g_;case 35668:case 35672:return v_;case 35669:case 35673:return __;case 5125:return y_;case 36294:return x_;case 36295:return M_;case 36296:return w_;case 35678:case 36198:case 36298:case 36306:case 35682:return b_;case 35679:case 36299:case 36307:return E_;case 35680:case 36300:case 36308:case 36293:return T_;case 36289:case 36303:case 36311:case 36292:return S_}}function R_(r,e,t){this.id=r,this.addr=t,this.cache=[],this.setValue=a_(e.type)}function Ad(r,e,t){this.id=r,this.addr=t,this.cache=[],this.size=e.size,this.setValue=A_(e.type)}Ad.prototype.updateCache=function(r){const e=this.cache;r instanceof Float32Array&&e.length!==r.length&&(this.cache=new Float32Array(r.length)),Ut(e,r)};function Rd(r){this.id=r,this.seq=[],this.map={}}Rd.prototype.setValue=function(r,e,t){const n=this.seq;for(let i=0,s=n.length;i!==s;++i){const o=n[i];o.setValue(r,e[o.id],t)}};const Ja=/(\w+)(\])?(\[|\.)?/g;function ah(r,e){r.seq.push(e),r.map[e.id]=e}function C_(r,e,t){const n=r.name,i=n.length;for(Ja.lastIndex=0;;){const s=Ja.exec(n),o=Ja.lastIndex;let a=s[1];const c=s[2]==="]",h=s[3];if(c&&(a=a|0),h===void 0||h==="["&&o+2===i){ah(t,h===void 0?new R_(a,r,e):new Ad(a,r,e));break}else{let f=t.map[a];f===void 0&&(f=new Rd(a),ah(t,f)),t=f}}}function hi(r,e){this.seq=[],this.map={};const t=r.getProgramParameter(e,r.ACTIVE_UNIFORMS);for(let n=0;n<t;++n){const i=r.getActiveUniform(e,n),s=r.getUniformLocation(e,i.name);C_(i,s,this)}}hi.prototype.setValue=function(r,e,t,n){const i=this.map[e];i!==void 0&&i.setValue(r,t,n)};hi.prototype.setOptional=function(r,e,t){const n=e[t];n!==void 0&&this.setValue(r,t,n)};hi.upload=function(r,e,t,n){for(let i=0,s=e.length;i!==s;++i){const o=e[i],a=t[o.id];a.needsUpdate!==!1&&o.setValue(r,a.value,n)}};hi.seqWithValue=function(r,e){const t=[];for(let n=0,i=r.length;n!==i;++n){const s=r[n];s.id in e&&t.push(s)}return t};function lh(r,e,t){const n=r.createShader(e);return r.shaderSource(n,t),r.compileShader(n),n}let L_=0;function P_(r,e){const t=r.split(`
`),n=[],i=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let o=i;o<s;o++)n.push(o+1+": "+t[o]);return n.join(`
`)}function I_(r){switch(r){case An:return["Linear","( value )"];case dt:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",r),["Linear","( value )"]}}function ch(r,e,t){const n=r.getShaderParameter(e,r.COMPILE_STATUS),i=r.getShaderInfoLog(e).trim();if(n&&i==="")return"";const s=parseInt(/ERROR: 0:(\d+)/.exec(i)[1]);return t.toUpperCase()+`

`+i+`

`+P_(r.getShaderSource(e),s)}function D_(r,e){const t=I_(e);return"vec4 "+r+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function F_(r,e){let t;switch(e){case Du:t="Linear";break;case Fu:t="Reinhard";break;case Ou:t="OptimizedCineon";break;case Nu:t="ACESFilmic";break;case Uu:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+r+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function O_(r){return[r.extensionDerivatives||!!r.envMapCubeUVHeight||r.bumpMap||r.tangentSpaceNormalMap||r.clearcoatNormalMap||r.flatShading||r.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(r.extensionFragDepth||r.logarithmicDepthBuffer)&&r.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",r.extensionDrawBuffers&&r.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(r.extensionShaderTextureLOD||r.envMap||r.transmission)&&r.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(us).join(`
`)}function N_(r){const e=[];for(const t in r){const n=r[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function U_(r,e){const t={},n=r.getProgramParameter(e,r.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){const s=r.getActiveAttrib(e,i),o=s.name;let a=1;s.type===r.FLOAT_MAT2&&(a=2),s.type===r.FLOAT_MAT3&&(a=3),s.type===r.FLOAT_MAT4&&(a=4),t[o]={type:s.type,location:r.getAttribLocation(e,o),locationSize:a}}return t}function us(r){return r!==""}function hh(r,e){return r.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function uh(r,e){return r.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const B_=/^[ \t]*#include +<([\w\d./]+)>/gm;function Nl(r){return r.replace(B_,H_)}function H_(r,e){const t=Je[e];if(t===void 0)throw new Error("Can not resolve #include <"+e+">");return Nl(t)}const z_=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,G_=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function dh(r){return r.replace(G_,Cd).replace(z_,k_)}function k_(r,e,t,n){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),Cd(r,e,t,n)}function Cd(r,e,t,n){let i="";for(let s=parseInt(e);s<parseInt(t);s++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return i}function fh(r){let e="precision "+r.precision+` float;
precision `+r.precision+" int;";return r.precision==="highp"?e+=`
#define HIGH_PRECISION`:r.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:r.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function V_(r){let e="SHADOWMAP_TYPE_BASIC";return r.shadowMapType===kl?e="SHADOWMAP_TYPE_PCF":r.shadowMapType===uu?e="SHADOWMAP_TYPE_PCF_SOFT":r.shadowMapType===Sr&&(e="SHADOWMAP_TYPE_VSM"),e}function W_(r){let e="ENVMAP_TYPE_CUBE";if(r.envMap)switch(r.envMapMode){case ui:case di:e="ENVMAP_TYPE_CUBE";break;case Xr:e="ENVMAP_TYPE_CUBE_UV";break}return e}function X_(r){let e="ENVMAP_MODE_REFLECTION";if(r.envMap)switch(r.envMapMode){case di:e="ENVMAP_MODE_REFRACTION";break}return e}function q_(r){let e="ENVMAP_BLENDING_NONE";if(r.envMap)switch(r.combine){case Is:e="ENVMAP_BLENDING_MULTIPLY";break;case Pu:e="ENVMAP_BLENDING_MIX";break;case Iu:e="ENVMAP_BLENDING_ADD";break}return e}function Y_(r){const e=r.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e/32+1)+3,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function Z_(r,e,t,n){const i=r.getContext(),s=t.defines;let o=t.vertexShader,a=t.fragmentShader;const c=V_(t),h=W_(t),u=X_(t),f=q_(t),d=Y_(t),p=t.isWebGL2?"":O_(t),v=N_(s),m=i.createProgram();let g,b,E=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(g=[v].filter(us).join(`
`),g.length>0&&(g+=`
`),b=[p,v].filter(us).join(`
`),b.length>0&&(b+=`
`)):(g=[fh(t),"#define SHADER_NAME "+t.shaderName,v,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define MAX_BONES "+t.maxBones,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+u:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.displacementMap&&t.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.useVertexTexture?"#define BONE_TEXTURE":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+c:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(us).join(`
`),b=[p,fh(t),"#define SHADER_NAME "+t.shaderName,v,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.envMap?"#define "+u:"",t.envMap?"#define "+f:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+c:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==En?"#define TONE_MAPPING":"",t.toneMapping!==En?Je.tonemapping_pars_fragment:"",t.toneMapping!==En?F_("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",Je.encodings_pars_fragment,D_("linearToOutputTexel",t.outputEncoding),t.depthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(us).join(`
`)),o=Nl(o),o=hh(o,t),o=uh(o,t),a=Nl(a),a=hh(a,t),a=uh(a,t),o=dh(o),a=dh(a),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(E=`#version 300 es
`,g=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+g,b=["#define varying in",t.glslVersion===Dl?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===Dl?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+b);const A=E+g+o,S=E+b+a,C=lh(i,i.VERTEX_SHADER,A),N=lh(i,i.FRAGMENT_SHADER,S);if(i.attachShader(m,C),i.attachShader(m,N),t.index0AttributeName!==void 0?i.bindAttribLocation(m,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(m,0,"position"),i.linkProgram(m),r.debug.checkShaderErrors){const K=i.getProgramInfoLog(m).trim(),G=i.getShaderInfoLog(C).trim(),R=i.getShaderInfoLog(N).trim();let H=!0,ee=!0;if(i.getProgramParameter(m,i.LINK_STATUS)===!1){H=!1;const X=ch(i,C,"vertex"),k=ch(i,N,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(m,i.VALIDATE_STATUS)+`

Program Info Log: `+K+`
`+X+`
`+k)}else K!==""?console.warn("THREE.WebGLProgram: Program Info Log:",K):(G===""||R==="")&&(ee=!1);ee&&(this.diagnostics={runnable:H,programLog:K,vertexShader:{log:G,prefix:g},fragmentShader:{log:R,prefix:b}})}i.deleteShader(C),i.deleteShader(N);let U;this.getUniforms=function(){return U===void 0&&(U=new hi(i,m)),U};let D;return this.getAttributes=function(){return D===void 0&&(D=U_(i,m)),D},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(m),this.program=void 0},this.name=t.shaderName,this.id=L_++,this.cacheKey=e,this.usedTimes=1,this.program=m,this.vertexShader=C,this.fragmentShader=N,this}let J_=0;class K_{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),s=this._getShaderStage(n),o=this._getShaderCacheForMaterial(e);return o.has(i)===!1&&(o.add(i),i.usedTimes++),o.has(s)===!1&&(o.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;return t.has(e)===!1&&t.set(e,new Set),t.get(e)}_getShaderStage(e){const t=this.shaderCache;if(t.has(e)===!1){const n=new j_(e);t.set(e,n)}return t.get(e)}}class j_{constructor(e){this.id=J_++,this.code=e,this.usedTimes=0}}function $_(r,e,t,n,i,s,o){const a=new $o,c=new K_,h=[],u=i.isWebGL2,f=i.logarithmicDepthBuffer,d=i.floatVertexTextures,p=i.maxVertexUniforms,v=i.vertexTextures;let m=i.precision;const g={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function b(R){const ee=R.skeleton.bones;if(d)return 1024;{const k=Math.floor((p-20)/4),Z=Math.min(k,ee.length);return Z<ee.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+ee.length+" bones. This GPU supports "+Z+"."),0):Z}}function E(R,H,ee,X,k){const Z=X.fog,$=k.geometry,V=R.isMeshStandardMaterial?X.environment:null,ie=(R.isMeshStandardMaterial?t:e).get(R.envMap||V),oe=!!ie&&ie.mapping===Xr?ie.image.height:null,ue=g[R.type],ae=k.isSkinnedMesh?b(k):0;R.precision!==null&&(m=i.getMaxPrecision(R.precision),m!==R.precision&&console.warn("THREE.WebGLProgram.getParameters:",R.precision,"not supported, using",m,"instead."));const Le=$.morphAttributes.position||$.morphAttributes.normal||$.morphAttributes.color,ke=Le!==void 0?Le.length:0;let Ne=0;$.morphAttributes.position!==void 0&&(Ne=1),$.morphAttributes.normal!==void 0&&(Ne=2),$.morphAttributes.color!==void 0&&(Ne=3);let W,nt,He,Ve;if(ue){const he=vn[ue];W=he.vertexShader,nt=he.fragmentShader}else W=R.vertexShader,nt=R.fragmentShader,c.update(R),He=c.getVertexShaderID(R),Ve=c.getFragmentShaderID(R);const de=r.getRenderTarget(),qe=R.alphaTest>0,te=R.clearcoat>0;return{isWebGL2:u,shaderID:ue,shaderName:R.type,vertexShader:W,fragmentShader:nt,defines:R.defines,customVertexShaderID:He,customFragmentShaderID:Ve,isRawShaderMaterial:R.isRawShaderMaterial===!0,glslVersion:R.glslVersion,precision:m,instancing:k.isInstancedMesh===!0,instancingColor:k.isInstancedMesh===!0&&k.instanceColor!==null,supportsVertexTextures:v,outputEncoding:de===null?r.outputEncoding:de.isXRRenderTarget===!0?de.texture.encoding:An,map:!!R.map,matcap:!!R.matcap,envMap:!!ie,envMapMode:ie&&ie.mapping,envMapCubeUVHeight:oe,lightMap:!!R.lightMap,aoMap:!!R.aoMap,emissiveMap:!!R.emissiveMap,bumpMap:!!R.bumpMap,normalMap:!!R.normalMap,objectSpaceNormalMap:R.normalMapType===sd,tangentSpaceNormalMap:R.normalMapType===ir,decodeVideoTexture:!!R.map&&R.map.isVideoTexture===!0&&R.map.encoding===dt,clearcoat:te,clearcoatMap:te&&!!R.clearcoatMap,clearcoatRoughnessMap:te&&!!R.clearcoatRoughnessMap,clearcoatNormalMap:te&&!!R.clearcoatNormalMap,displacementMap:!!R.displacementMap,roughnessMap:!!R.roughnessMap,metalnessMap:!!R.metalnessMap,specularMap:!!R.specularMap,specularIntensityMap:!!R.specularIntensityMap,specularColorMap:!!R.specularColorMap,opaque:R.transparent===!1&&R.blending===zi,alphaMap:!!R.alphaMap,alphaTest:qe,gradientMap:!!R.gradientMap,sheen:R.sheen>0,sheenColorMap:!!R.sheenColorMap,sheenRoughnessMap:!!R.sheenRoughnessMap,transmission:R.transmission>0,transmissionMap:!!R.transmissionMap,thicknessMap:!!R.thicknessMap,combine:R.combine,vertexTangents:!!R.normalMap&&!!$.attributes.tangent,vertexColors:R.vertexColors,vertexAlphas:R.vertexColors===!0&&!!$.attributes.color&&$.attributes.color.itemSize===4,vertexUvs:!!R.map||!!R.bumpMap||!!R.normalMap||!!R.specularMap||!!R.alphaMap||!!R.emissiveMap||!!R.roughnessMap||!!R.metalnessMap||!!R.clearcoatMap||!!R.clearcoatRoughnessMap||!!R.clearcoatNormalMap||!!R.displacementMap||!!R.transmissionMap||!!R.thicknessMap||!!R.specularIntensityMap||!!R.specularColorMap||!!R.sheenColorMap||!!R.sheenRoughnessMap,uvsVertexOnly:!(!!R.map||!!R.bumpMap||!!R.normalMap||!!R.specularMap||!!R.alphaMap||!!R.emissiveMap||!!R.roughnessMap||!!R.metalnessMap||!!R.clearcoatNormalMap||R.transmission>0||!!R.transmissionMap||!!R.thicknessMap||!!R.specularIntensityMap||!!R.specularColorMap||R.sheen>0||!!R.sheenColorMap||!!R.sheenRoughnessMap)&&!!R.displacementMap,fog:!!Z,useFog:R.fog,fogExp2:Z&&Z.isFogExp2,flatShading:!!R.flatShading,sizeAttenuation:R.sizeAttenuation,logarithmicDepthBuffer:f,skinning:k.isSkinnedMesh===!0&&ae>0,maxBones:ae,useVertexTexture:d,morphTargets:$.morphAttributes.position!==void 0,morphNormals:$.morphAttributes.normal!==void 0,morphColors:$.morphAttributes.color!==void 0,morphTargetsCount:ke,morphTextureStride:Ne,numDirLights:H.directional.length,numPointLights:H.point.length,numSpotLights:H.spot.length,numRectAreaLights:H.rectArea.length,numHemiLights:H.hemi.length,numDirLightShadows:H.directionalShadowMap.length,numPointLightShadows:H.pointShadowMap.length,numSpotLightShadows:H.spotShadowMap.length,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:R.dithering,shadowMapEnabled:r.shadowMap.enabled&&ee.length>0,shadowMapType:r.shadowMap.type,toneMapping:R.toneMapped?r.toneMapping:En,physicallyCorrectLights:r.physicallyCorrectLights,premultipliedAlpha:R.premultipliedAlpha,doubleSided:R.side===Yi,flipSided:R.side===jt,depthPacking:R.depthPacking!==void 0?R.depthPacking:!1,index0AttributeName:R.index0AttributeName,extensionDerivatives:R.extensions&&R.extensions.derivatives,extensionFragDepth:R.extensions&&R.extensions.fragDepth,extensionDrawBuffers:R.extensions&&R.extensions.drawBuffers,extensionShaderTextureLOD:R.extensions&&R.extensions.shaderTextureLOD,rendererExtensionFragDepth:u||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:u||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:u||n.has("EXT_shader_texture_lod"),customProgramCacheKey:R.customProgramCacheKey()}}function A(R){const H=[];if(R.shaderID?H.push(R.shaderID):(H.push(R.customVertexShaderID),H.push(R.customFragmentShaderID)),R.defines!==void 0)for(const ee in R.defines)H.push(ee),H.push(R.defines[ee]);return R.isRawShaderMaterial===!1&&(S(H,R),C(H,R),H.push(r.outputEncoding)),H.push(R.customProgramCacheKey),H.join()}function S(R,H){R.push(H.precision),R.push(H.outputEncoding),R.push(H.envMapMode),R.push(H.envMapCubeUVHeight),R.push(H.combine),R.push(H.vertexUvs),R.push(H.fogExp2),R.push(H.sizeAttenuation),R.push(H.maxBones),R.push(H.morphTargetsCount),R.push(H.morphAttributeCount),R.push(H.numDirLights),R.push(H.numPointLights),R.push(H.numSpotLights),R.push(H.numHemiLights),R.push(H.numRectAreaLights),R.push(H.numDirLightShadows),R.push(H.numPointLightShadows),R.push(H.numSpotLightShadows),R.push(H.shadowMapType),R.push(H.toneMapping),R.push(H.numClippingPlanes),R.push(H.numClipIntersection)}function C(R,H){a.disableAll(),H.isWebGL2&&a.enable(0),H.supportsVertexTextures&&a.enable(1),H.instancing&&a.enable(2),H.instancingColor&&a.enable(3),H.map&&a.enable(4),H.matcap&&a.enable(5),H.envMap&&a.enable(6),H.lightMap&&a.enable(7),H.aoMap&&a.enable(8),H.emissiveMap&&a.enable(9),H.bumpMap&&a.enable(10),H.normalMap&&a.enable(11),H.objectSpaceNormalMap&&a.enable(12),H.tangentSpaceNormalMap&&a.enable(13),H.clearcoat&&a.enable(14),H.clearcoatMap&&a.enable(15),H.clearcoatRoughnessMap&&a.enable(16),H.clearcoatNormalMap&&a.enable(17),H.displacementMap&&a.enable(18),H.specularMap&&a.enable(19),H.roughnessMap&&a.enable(20),H.metalnessMap&&a.enable(21),H.gradientMap&&a.enable(22),H.alphaMap&&a.enable(23),H.alphaTest&&a.enable(24),H.vertexColors&&a.enable(25),H.vertexAlphas&&a.enable(26),H.vertexUvs&&a.enable(27),H.vertexTangents&&a.enable(28),H.uvsVertexOnly&&a.enable(29),H.fog&&a.enable(30),R.push(a.mask),a.disableAll(),H.useFog&&a.enable(0),H.flatShading&&a.enable(1),H.logarithmicDepthBuffer&&a.enable(2),H.skinning&&a.enable(3),H.useVertexTexture&&a.enable(4),H.morphTargets&&a.enable(5),H.morphNormals&&a.enable(6),H.morphColors&&a.enable(7),H.premultipliedAlpha&&a.enable(8),H.shadowMapEnabled&&a.enable(9),H.physicallyCorrectLights&&a.enable(10),H.doubleSided&&a.enable(11),H.flipSided&&a.enable(12),H.depthPacking&&a.enable(13),H.dithering&&a.enable(14),H.specularIntensityMap&&a.enable(15),H.specularColorMap&&a.enable(16),H.transmission&&a.enable(17),H.transmissionMap&&a.enable(18),H.thicknessMap&&a.enable(19),H.sheen&&a.enable(20),H.sheenColorMap&&a.enable(21),H.sheenRoughnessMap&&a.enable(22),H.decodeVideoTexture&&a.enable(23),H.opaque&&a.enable(24),R.push(a.mask)}function N(R){const H=g[R.type];let ee;if(H){const X=vn[H];ee=Md.clone(X.uniforms)}else ee=R.uniforms;return ee}function U(R,H){let ee;for(let X=0,k=h.length;X<k;X++){const Z=h[X];if(Z.cacheKey===H){ee=Z,++ee.usedTimes;break}}return ee===void 0&&(ee=new Z_(r,H,R,s),h.push(ee)),ee}function D(R){if(--R.usedTimes===0){const H=h.indexOf(R);h[H]=h[h.length-1],h.pop(),R.destroy()}}function K(R){c.remove(R)}function G(){c.dispose()}return{getParameters:E,getProgramCacheKey:A,getUniforms:N,acquireProgram:U,releaseProgram:D,releaseShaderCache:K,programs:h,dispose:G}}function Q_(){let r=new WeakMap;function e(s){let o=r.get(s);return o===void 0&&(o={},r.set(s,o)),o}function t(s){r.delete(s)}function n(s,o,a){r.get(s)[o]=a}function i(){r=new WeakMap}return{get:e,remove:t,update:n,dispose:i}}function e0(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.material.id!==e.material.id?r.material.id-e.material.id:r.z!==e.z?r.z-e.z:r.id-e.id}function ph(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.z!==e.z?e.z-r.z:r.id-e.id}function mh(){const r=[];let e=0;const t=[],n=[],i=[];function s(){e=0,t.length=0,n.length=0,i.length=0}function o(f,d,p,v,m,g){let b=r[e];return b===void 0?(b={id:f.id,object:f,geometry:d,material:p,groupOrder:v,renderOrder:f.renderOrder,z:m,group:g},r[e]=b):(b.id=f.id,b.object=f,b.geometry=d,b.material=p,b.groupOrder=v,b.renderOrder=f.renderOrder,b.z=m,b.group=g),e++,b}function a(f,d,p,v,m,g){const b=o(f,d,p,v,m,g);p.transmission>0?n.push(b):p.transparent===!0?i.push(b):t.push(b)}function c(f,d,p,v,m,g){const b=o(f,d,p,v,m,g);p.transmission>0?n.unshift(b):p.transparent===!0?i.unshift(b):t.unshift(b)}function h(f,d){t.length>1&&t.sort(f||e0),n.length>1&&n.sort(d||ph),i.length>1&&i.sort(d||ph)}function u(){for(let f=e,d=r.length;f<d;f++){const p=r[f];if(p.id===null)break;p.id=null,p.object=null,p.geometry=null,p.material=null,p.group=null}}return{opaque:t,transmissive:n,transparent:i,init:s,push:a,unshift:c,finish:u,sort:h}}function t0(){let r=new WeakMap;function e(n,i){let s;return r.has(n)===!1?(s=new mh,r.set(n,[s])):i>=r.get(n).length?(s=new mh,r.get(n).push(s)):s=r.get(n)[i],s}function t(){r=new WeakMap}return{get:e,dispose:t}}function n0(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new P,color:new xe};break;case"SpotLight":t={position:new P,direction:new P,color:new xe,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new P,color:new xe,distance:0,decay:0};break;case"HemisphereLight":t={direction:new P,skyColor:new xe,groundColor:new xe};break;case"RectAreaLight":t={color:new xe,position:new P,halfWidth:new P,halfHeight:new P};break}return r[e.id]=t,t}}}function i0(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new se};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new se};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new se,shadowCameraNear:1,shadowCameraFar:1e3};break}return r[e.id]=t,t}}}let r0=0;function s0(r,e){return(e.castShadow?1:0)-(r.castShadow?1:0)}function o0(r,e){const t=new n0,n=i0(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let u=0;u<9;u++)i.probe.push(new P);const s=new P,o=new Se,a=new Se;function c(u,f){let d=0,p=0,v=0;for(let K=0;K<9;K++)i.probe[K].set(0,0,0);let m=0,g=0,b=0,E=0,A=0,S=0,C=0,N=0;u.sort(s0);const U=f!==!0?Math.PI:1;for(let K=0,G=u.length;K<G;K++){const R=u[K],H=R.color,ee=R.intensity,X=R.distance,k=R.shadow&&R.shadow.map?R.shadow.map.texture:null;if(R.isAmbientLight)d+=H.r*ee*U,p+=H.g*ee*U,v+=H.b*ee*U;else if(R.isLightProbe)for(let Z=0;Z<9;Z++)i.probe[Z].addScaledVector(R.sh.coefficients[Z],ee);else if(R.isDirectionalLight){const Z=t.get(R);if(Z.color.copy(R.color).multiplyScalar(R.intensity*U),R.castShadow){const $=R.shadow,V=n.get(R);V.shadowBias=$.bias,V.shadowNormalBias=$.normalBias,V.shadowRadius=$.radius,V.shadowMapSize=$.mapSize,i.directionalShadow[m]=V,i.directionalShadowMap[m]=k,i.directionalShadowMatrix[m]=R.shadow.matrix,S++}i.directional[m]=Z,m++}else if(R.isSpotLight){const Z=t.get(R);if(Z.position.setFromMatrixPosition(R.matrixWorld),Z.color.copy(H).multiplyScalar(ee*U),Z.distance=X,Z.coneCos=Math.cos(R.angle),Z.penumbraCos=Math.cos(R.angle*(1-R.penumbra)),Z.decay=R.decay,R.castShadow){const $=R.shadow,V=n.get(R);V.shadowBias=$.bias,V.shadowNormalBias=$.normalBias,V.shadowRadius=$.radius,V.shadowMapSize=$.mapSize,i.spotShadow[b]=V,i.spotShadowMap[b]=k,i.spotShadowMatrix[b]=R.shadow.matrix,N++}i.spot[b]=Z,b++}else if(R.isRectAreaLight){const Z=t.get(R);Z.color.copy(H).multiplyScalar(ee),Z.halfWidth.set(R.width*.5,0,0),Z.halfHeight.set(0,R.height*.5,0),i.rectArea[E]=Z,E++}else if(R.isPointLight){const Z=t.get(R);if(Z.color.copy(R.color).multiplyScalar(R.intensity*U),Z.distance=R.distance,Z.decay=R.decay,R.castShadow){const $=R.shadow,V=n.get(R);V.shadowBias=$.bias,V.shadowNormalBias=$.normalBias,V.shadowRadius=$.radius,V.shadowMapSize=$.mapSize,V.shadowCameraNear=$.camera.near,V.shadowCameraFar=$.camera.far,i.pointShadow[g]=V,i.pointShadowMap[g]=k,i.pointShadowMatrix[g]=R.shadow.matrix,C++}i.point[g]=Z,g++}else if(R.isHemisphereLight){const Z=t.get(R);Z.skyColor.copy(R.color).multiplyScalar(ee*U),Z.groundColor.copy(R.groundColor).multiplyScalar(ee*U),i.hemi[A]=Z,A++}}E>0&&(e.isWebGL2||r.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=ve.LTC_FLOAT_1,i.rectAreaLTC2=ve.LTC_FLOAT_2):r.has("OES_texture_half_float_linear")===!0?(i.rectAreaLTC1=ve.LTC_HALF_1,i.rectAreaLTC2=ve.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=d,i.ambient[1]=p,i.ambient[2]=v;const D=i.hash;(D.directionalLength!==m||D.pointLength!==g||D.spotLength!==b||D.rectAreaLength!==E||D.hemiLength!==A||D.numDirectionalShadows!==S||D.numPointShadows!==C||D.numSpotShadows!==N)&&(i.directional.length=m,i.spot.length=b,i.rectArea.length=E,i.point.length=g,i.hemi.length=A,i.directionalShadow.length=S,i.directionalShadowMap.length=S,i.pointShadow.length=C,i.pointShadowMap.length=C,i.spotShadow.length=N,i.spotShadowMap.length=N,i.directionalShadowMatrix.length=S,i.pointShadowMatrix.length=C,i.spotShadowMatrix.length=N,D.directionalLength=m,D.pointLength=g,D.spotLength=b,D.rectAreaLength=E,D.hemiLength=A,D.numDirectionalShadows=S,D.numPointShadows=C,D.numSpotShadows=N,i.version=r0++)}function h(u,f){let d=0,p=0,v=0,m=0,g=0;const b=f.matrixWorldInverse;for(let E=0,A=u.length;E<A;E++){const S=u[E];if(S.isDirectionalLight){const C=i.directional[d];C.direction.setFromMatrixPosition(S.matrixWorld),s.setFromMatrixPosition(S.target.matrixWorld),C.direction.sub(s),C.direction.transformDirection(b),d++}else if(S.isSpotLight){const C=i.spot[v];C.position.setFromMatrixPosition(S.matrixWorld),C.position.applyMatrix4(b),C.direction.setFromMatrixPosition(S.matrixWorld),s.setFromMatrixPosition(S.target.matrixWorld),C.direction.sub(s),C.direction.transformDirection(b),v++}else if(S.isRectAreaLight){const C=i.rectArea[m];C.position.setFromMatrixPosition(S.matrixWorld),C.position.applyMatrix4(b),a.identity(),o.copy(S.matrixWorld),o.premultiply(b),a.extractRotation(o),C.halfWidth.set(S.width*.5,0,0),C.halfHeight.set(0,S.height*.5,0),C.halfWidth.applyMatrix4(a),C.halfHeight.applyMatrix4(a),m++}else if(S.isPointLight){const C=i.point[p];C.position.setFromMatrixPosition(S.matrixWorld),C.position.applyMatrix4(b),p++}else if(S.isHemisphereLight){const C=i.hemi[g];C.direction.setFromMatrixPosition(S.matrixWorld),C.direction.transformDirection(b),C.direction.normalize(),g++}}}return{setup:c,setupView:h,state:i}}function gh(r,e){const t=new o0(r,e),n=[],i=[];function s(){n.length=0,i.length=0}function o(f){n.push(f)}function a(f){i.push(f)}function c(f){t.setup(n,f)}function h(f){t.setupView(n,f)}return{init:s,state:{lightsArray:n,shadowsArray:i,lights:t},setupLights:c,setupLightsView:h,pushLight:o,pushShadow:a}}function a0(r,e){let t=new WeakMap;function n(s,o=0){let a;return t.has(s)===!1?(a=new gh(r,e),t.set(s,[a])):o>=t.get(s).length?(a=new gh(r,e),t.get(s).push(a)):a=t.get(s)[o],a}function i(){t=new WeakMap}return{get:n,dispose:i}}class ra extends Mt{constructor(e){super();this.type="MeshDepthMaterial",this.depthPacking=id,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}ra.prototype.isMeshDepthMaterial=!0;class sa extends Mt{constructor(e){super();this.type="MeshDistanceMaterial",this.referencePosition=new P,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}sa.prototype.isMeshDistanceMaterial=!0;const l0=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,c0=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function Ld(r,e,t){let n=new Os;const i=new se,s=new se,o=new st,a=new ra({depthPacking:rd}),c=new sa,h={},u=t.maxTextureSize,f={0:jt,1:qi,2:Yi},d=new ln({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new se},radius:{value:4}},vertexShader:l0,fragmentShader:c0}),p=d.clone();p.defines.HORIZONTAL_PASS=1;const v=new Oe;v.setAttribute("position",new et(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const m=new St(v,d),g=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=kl,this.render=function(S,C,N){if(g.enabled===!1||g.autoUpdate===!1&&g.needsUpdate===!1||S.length===0)return;const U=r.getRenderTarget(),D=r.getActiveCubeFace(),K=r.getActiveMipmapLevel(),G=r.state;G.setBlending(Xn),G.buffers.color.setClear(1,1,1,1),G.buffers.depth.setTest(!0),G.setScissorTest(!1);for(let R=0,H=S.length;R<H;R++){const ee=S[R],X=ee.shadow;if(X===void 0){console.warn("THREE.WebGLShadowMap:",ee,"has no shadow.");continue}if(X.autoUpdate===!1&&X.needsUpdate===!1)continue;i.copy(X.mapSize);const k=X.getFrameExtents();if(i.multiply(k),s.copy(X.mapSize),(i.x>u||i.y>u)&&(i.x>u&&(s.x=Math.floor(u/k.x),i.x=s.x*k.x,X.mapSize.x=s.x),i.y>u&&(s.y=Math.floor(u/k.y),i.y=s.y*k.y,X.mapSize.y=s.y)),X.map===null&&!X.isPointLightShadow&&this.type===Sr&&(X.map=new Gt(i.x,i.y),X.map.texture.name=ee.name+".shadowMap",X.mapPass=new Gt(i.x,i.y),X.camera.updateProjectionMatrix()),X.map===null){const $={minFilter:Tt,magFilter:Tt,format:Kt};X.map=new Gt(i.x,i.y,$),X.map.texture.name=ee.name+".shadowMap",X.camera.updateProjectionMatrix()}r.setRenderTarget(X.map),r.clear();const Z=X.getViewportCount();for(let $=0;$<Z;$++){const V=X.getViewport($);o.set(s.x*V.x,s.y*V.y,s.x*V.z,s.y*V.w),G.viewport(o),X.updateMatrices(ee,$),n=X.getFrustum(),A(C,N,X.camera,ee,this.type)}!X.isPointLightShadow&&this.type===Sr&&b(X,N),X.needsUpdate=!1}g.needsUpdate=!1,r.setRenderTarget(U,D,K)};function b(S,C){const N=e.update(m);d.defines.VSM_SAMPLES!==S.blurSamples&&(d.defines.VSM_SAMPLES=S.blurSamples,p.defines.VSM_SAMPLES=S.blurSamples,d.needsUpdate=!0,p.needsUpdate=!0),d.uniforms.shadow_pass.value=S.map.texture,d.uniforms.resolution.value=S.mapSize,d.uniforms.radius.value=S.radius,r.setRenderTarget(S.mapPass),r.clear(),r.renderBufferDirect(C,null,N,d,m,null),p.uniforms.shadow_pass.value=S.mapPass.texture,p.uniforms.resolution.value=S.mapSize,p.uniforms.radius.value=S.radius,r.setRenderTarget(S.map),r.clear(),r.renderBufferDirect(C,null,N,p,m,null)}function E(S,C,N,U,D,K){let G=null;const R=N.isPointLight===!0?S.customDistanceMaterial:S.customDepthMaterial;if(R!==void 0?G=R:G=N.isPointLight===!0?c:a,r.localClippingEnabled&&C.clipShadows===!0&&C.clippingPlanes.length!==0||C.displacementMap&&C.displacementScale!==0||C.alphaMap&&C.alphaTest>0){const H=G.uuid,ee=C.uuid;let X=h[H];X===void 0&&(X={},h[H]=X);let k=X[ee];k===void 0&&(k=G.clone(),X[ee]=k),G=k}return G.visible=C.visible,G.wireframe=C.wireframe,K===Sr?G.side=C.shadowSide!==null?C.shadowSide:C.side:G.side=C.shadowSide!==null?C.shadowSide:f[C.side],G.alphaMap=C.alphaMap,G.alphaTest=C.alphaTest,G.clipShadows=C.clipShadows,G.clippingPlanes=C.clippingPlanes,G.clipIntersection=C.clipIntersection,G.displacementMap=C.displacementMap,G.displacementScale=C.displacementScale,G.displacementBias=C.displacementBias,G.wireframeLinewidth=C.wireframeLinewidth,G.linewidth=C.linewidth,N.isPointLight===!0&&G.isMeshDistanceMaterial===!0&&(G.referencePosition.setFromMatrixPosition(N.matrixWorld),G.nearDistance=U,G.farDistance=D),G}function A(S,C,N,U,D){if(S.visible===!1)return;if(S.layers.test(C.layers)&&(S.isMesh||S.isLine||S.isPoints)&&(S.castShadow||S.receiveShadow&&D===Sr)&&(!S.frustumCulled||n.intersectsObject(S))){S.modelViewMatrix.multiplyMatrices(N.matrixWorldInverse,S.matrixWorld);const R=e.update(S),H=S.material;if(Array.isArray(H)){const ee=R.groups;for(let X=0,k=ee.length;X<k;X++){const Z=ee[X],$=H[Z.materialIndex];if($&&$.visible){const V=E(S,$,U,N.near,N.far,D);r.renderBufferDirect(N,null,R,V,S,Z)}}}else if(H.visible){const ee=E(S,H,U,N.near,N.far,D);r.renderBufferDirect(N,null,R,ee,S,null)}}const G=S.children;for(let R=0,H=G.length;R<H;R++)A(G[R],C,N,U,D)}}function h0(r,e,t){const n=t.isWebGL2;function i(){let z=!1;const me=new st;let pe=null;const Ae=new st(0,0,0,0);return{setMask:function(Ee){pe!==Ee&&!z&&(r.colorMask(Ee,Ee,Ee,Ee),pe=Ee)},setLocked:function(Ee){z=Ee},setClear:function(Ee,Ce,fe,Ge,lt){lt===!0&&(Ee*=Ge,Ce*=Ge,fe*=Ge),me.set(Ee,Ce,fe,Ge),Ae.equals(me)===!1&&(r.clearColor(Ee,Ce,fe,Ge),Ae.copy(me))},reset:function(){z=!1,pe=null,Ae.set(-1,0,0,0)}}}function s(){let z=!1,me=null,pe=null,Ae=null;return{setTest:function(Ee){Ee?Ne(r.DEPTH_TEST):W(r.DEPTH_TEST)},setMask:function(Ee){me!==Ee&&!z&&(r.depthMask(Ee),me=Ee)},setFunc:function(Ee){if(pe!==Ee){if(Ee)switch(Ee){case Eu:r.depthFunc(r.NEVER);break;case Tu:r.depthFunc(r.ALWAYS);break;case Su:r.depthFunc(r.LESS);break;case Vo:r.depthFunc(r.LEQUAL);break;case Au:r.depthFunc(r.EQUAL);break;case Ru:r.depthFunc(r.GEQUAL);break;case Cu:r.depthFunc(r.GREATER);break;case Lu:r.depthFunc(r.NOTEQUAL);break;default:r.depthFunc(r.LEQUAL)}else r.depthFunc(r.LEQUAL);pe=Ee}},setLocked:function(Ee){z=Ee},setClear:function(Ee){Ae!==Ee&&(r.clearDepth(Ee),Ae=Ee)},reset:function(){z=!1,me=null,pe=null,Ae=null}}}function o(){let z=!1,me=null,pe=null,Ae=null,Ee=null,Ce=null,fe=null,Ge=null,lt=null;return{setTest:function(Ke){z||(Ke?Ne(r.STENCIL_TEST):W(r.STENCIL_TEST))},setMask:function(Ke){me!==Ke&&!z&&(r.stencilMask(Ke),me=Ke)},setFunc:function(Ke,Yt,Wt){(pe!==Ke||Ae!==Yt||Ee!==Wt)&&(r.stencilFunc(Ke,Yt,Wt),pe=Ke,Ae=Yt,Ee=Wt)},setOp:function(Ke,Yt,Wt){(Ce!==Ke||fe!==Yt||Ge!==Wt)&&(r.stencilOp(Ke,Yt,Wt),Ce=Ke,fe=Yt,Ge=Wt)},setLocked:function(Ke){z=Ke},setClear:function(Ke){lt!==Ke&&(r.clearStencil(Ke),lt=Ke)},reset:function(){z=!1,me=null,pe=null,Ae=null,Ee=null,Ce=null,fe=null,Ge=null,lt=null}}}const a=new i,c=new s,h=new o;let u={},f={},d=new WeakMap,p=[],v=null,m=!1,g=null,b=null,E=null,A=null,S=null,C=null,N=null,U=!1,D=null,K=null,G=null,R=null,H=null;const ee=r.getParameter(r.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let X=!1,k=0;const Z=r.getParameter(r.VERSION);Z.indexOf("WebGL")!==-1?(k=parseFloat(/^WebGL (\d)/.exec(Z)[1]),X=k>=1):Z.indexOf("OpenGL ES")!==-1&&(k=parseFloat(/^OpenGL ES (\d)/.exec(Z)[1]),X=k>=2);let $=null,V={};const ie=r.getParameter(r.SCISSOR_BOX),oe=r.getParameter(r.VIEWPORT),ue=new st().fromArray(ie),ae=new st().fromArray(oe);function Le(z,me,pe){const Ae=new Uint8Array(4),Ee=r.createTexture();r.bindTexture(z,Ee),r.texParameteri(z,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(z,r.TEXTURE_MAG_FILTER,r.NEAREST);for(let Ce=0;Ce<pe;Ce++)r.texImage2D(me+Ce,0,r.RGBA,1,1,0,r.RGBA,r.UNSIGNED_BYTE,Ae);return Ee}const ke={};ke[r.TEXTURE_2D]=Le(r.TEXTURE_2D,r.TEXTURE_2D,1),ke[r.TEXTURE_CUBE_MAP]=Le(r.TEXTURE_CUBE_MAP,r.TEXTURE_CUBE_MAP_POSITIVE_X,6),a.setClear(0,0,0,1),c.setClear(1),h.setClear(0),Ne(r.DEPTH_TEST),c.setFunc(Vo),he(!1),be(ol),Ne(r.CULL_FACE),te(Xn);function Ne(z){u[z]!==!0&&(r.enable(z),u[z]=!0)}function W(z){u[z]!==!1&&(r.disable(z),u[z]=!1)}function nt(z,me){return f[z]!==me?(r.bindFramebuffer(z,me),f[z]=me,n&&(z===r.DRAW_FRAMEBUFFER&&(f[r.FRAMEBUFFER]=me),z===r.FRAMEBUFFER&&(f[r.DRAW_FRAMEBUFFER]=me)),!0):!1}function He(z,me){let pe=p,Ae=!1;if(z)if(pe=d.get(me),pe===void 0&&(pe=[],d.set(me,pe)),z.isWebGLMultipleRenderTargets){const Ee=z.texture;if(pe.length!==Ee.length||pe[0]!==r.COLOR_ATTACHMENT0){for(let Ce=0,fe=Ee.length;Ce<fe;Ce++)pe[Ce]=r.COLOR_ATTACHMENT0+Ce;pe.length=Ee.length,Ae=!0}}else pe[0]!==r.COLOR_ATTACHMENT0&&(pe[0]=r.COLOR_ATTACHMENT0,Ae=!0);else pe[0]!==r.BACK&&(pe[0]=r.BACK,Ae=!0);Ae&&(t.isWebGL2?r.drawBuffers(pe):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(pe))}function Ve(z){return v!==z?(r.useProgram(z),v=z,!0):!1}const de={[Fi]:r.FUNC_ADD,[fu]:r.FUNC_SUBTRACT,[pu]:r.FUNC_REVERSE_SUBTRACT};if(n)de[hl]=r.MIN,de[ul]=r.MAX;else{const z=e.get("EXT_blend_minmax");z!==null&&(de[hl]=z.MIN_EXT,de[ul]=z.MAX_EXT)}const qe={[mu]:r.ZERO,[gu]:r.ONE,[vu]:r.SRC_COLOR,[Wl]:r.SRC_ALPHA,[bu]:r.SRC_ALPHA_SATURATE,[Mu]:r.DST_COLOR,[yu]:r.DST_ALPHA,[_u]:r.ONE_MINUS_SRC_COLOR,[Xl]:r.ONE_MINUS_SRC_ALPHA,[wu]:r.ONE_MINUS_DST_COLOR,[xu]:r.ONE_MINUS_DST_ALPHA};function te(z,me,pe,Ae,Ee,Ce,fe,Ge){if(z===Xn){m===!0&&(W(r.BLEND),m=!1);return}if(m===!1&&(Ne(r.BLEND),m=!0),z!==du){if(z!==g||Ge!==U){if((b!==Fi||S!==Fi)&&(r.blendEquation(r.FUNC_ADD),b=Fi,S=Fi),Ge)switch(z){case zi:r.blendFuncSeparate(r.ONE,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case al:r.blendFunc(r.ONE,r.ONE);break;case ll:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case cl:r.blendFuncSeparate(r.ZERO,r.SRC_COLOR,r.ZERO,r.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",z);break}else switch(z){case zi:r.blendFuncSeparate(r.SRC_ALPHA,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case al:r.blendFunc(r.SRC_ALPHA,r.ONE);break;case ll:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case cl:r.blendFunc(r.ZERO,r.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",z);break}E=null,A=null,C=null,N=null,g=z,U=Ge}return}Ee=Ee||me,Ce=Ce||pe,fe=fe||Ae,(me!==b||Ee!==S)&&(r.blendEquationSeparate(de[me],de[Ee]),b=me,S=Ee),(pe!==E||Ae!==A||Ce!==C||fe!==N)&&(r.blendFuncSeparate(qe[pe],qe[Ae],qe[Ce],qe[fe]),E=pe,A=Ae,C=Ce,N=fe),g=z,U=null}function ne(z,me){z.side===Yi?W(r.CULL_FACE):Ne(r.CULL_FACE);let pe=z.side===jt;me&&(pe=!pe),he(pe),z.blending===zi&&z.transparent===!1?te(Xn):te(z.blending,z.blendEquation,z.blendSrc,z.blendDst,z.blendEquationAlpha,z.blendSrcAlpha,z.blendDstAlpha,z.premultipliedAlpha),c.setFunc(z.depthFunc),c.setTest(z.depthTest),c.setMask(z.depthWrite),a.setMask(z.colorWrite);const Ae=z.stencilWrite;h.setTest(Ae),Ae&&(h.setMask(z.stencilWriteMask),h.setFunc(z.stencilFunc,z.stencilRef,z.stencilFuncMask),h.setOp(z.stencilFail,z.stencilZFail,z.stencilZPass)),We(z.polygonOffset,z.polygonOffsetFactor,z.polygonOffsetUnits),z.alphaToCoverage===!0?Ne(r.SAMPLE_ALPHA_TO_COVERAGE):W(r.SAMPLE_ALPHA_TO_COVERAGE)}function he(z){D!==z&&(z?r.frontFace(r.CW):r.frontFace(r.CCW),D=z)}function be(z){z!==cu?(Ne(r.CULL_FACE),z!==K&&(z===ol?r.cullFace(r.BACK):z===hu?r.cullFace(r.FRONT):r.cullFace(r.FRONT_AND_BACK))):W(r.CULL_FACE),K=z}function _e(z){z!==G&&(X&&r.lineWidth(z),G=z)}function We(z,me,pe){z?(Ne(r.POLYGON_OFFSET_FILL),(R!==me||H!==pe)&&(r.polygonOffset(me,pe),R=me,H=pe)):W(r.POLYGON_OFFSET_FILL)}function Fe(z){z?Ne(r.SCISSOR_TEST):W(r.SCISSOR_TEST)}function De(z){z===void 0&&(z=r.TEXTURE0+ee-1),$!==z&&(r.activeTexture(z),$=z)}function ht(z,me){$===null&&De();let pe=V[$];pe===void 0&&(pe={type:void 0,texture:void 0},V[$]=pe),(pe.type!==z||pe.texture!==me)&&(r.bindTexture(z,me||ke[z]),pe.type=z,pe.texture=me)}function rt(){const z=V[$];z!==void 0&&z.type!==void 0&&(r.bindTexture(z.type,null),z.type=void 0,z.texture=void 0)}function O(){try{r.compressedTexImage2D.apply(r,arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function L(){try{r.texSubImage2D.apply(r,arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function j(){try{r.texSubImage3D.apply(r,arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function le(){try{r.compressedTexSubImage2D.apply(r,arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function ye(){try{r.texStorage2D.apply(r,arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function we(){try{r.texStorage3D.apply(r,arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function Pe(){try{r.texImage2D.apply(r,arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function Q(){try{r.texImage3D.apply(r,arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function Re(z){ue.equals(z)===!1&&(r.scissor(z.x,z.y,z.z,z.w),ue.copy(z))}function Xe(z){ae.equals(z)===!1&&(r.viewport(z.x,z.y,z.z,z.w),ae.copy(z))}function Me(){r.disable(r.BLEND),r.disable(r.CULL_FACE),r.disable(r.DEPTH_TEST),r.disable(r.POLYGON_OFFSET_FILL),r.disable(r.SCISSOR_TEST),r.disable(r.STENCIL_TEST),r.disable(r.SAMPLE_ALPHA_TO_COVERAGE),r.blendEquation(r.FUNC_ADD),r.blendFunc(r.ONE,r.ZERO),r.blendFuncSeparate(r.ONE,r.ZERO,r.ONE,r.ZERO),r.colorMask(!0,!0,!0,!0),r.clearColor(0,0,0,0),r.depthMask(!0),r.depthFunc(r.LESS),r.clearDepth(1),r.stencilMask(4294967295),r.stencilFunc(r.ALWAYS,0,4294967295),r.stencilOp(r.KEEP,r.KEEP,r.KEEP),r.clearStencil(0),r.cullFace(r.BACK),r.frontFace(r.CCW),r.polygonOffset(0,0),r.activeTexture(r.TEXTURE0),r.bindFramebuffer(r.FRAMEBUFFER,null),n===!0&&(r.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),r.bindFramebuffer(r.READ_FRAMEBUFFER,null)),r.useProgram(null),r.lineWidth(1),r.scissor(0,0,r.canvas.width,r.canvas.height),r.viewport(0,0,r.canvas.width,r.canvas.height),u={},$=null,V={},f={},d=new WeakMap,p=[],v=null,m=!1,g=null,b=null,E=null,A=null,S=null,C=null,N=null,U=!1,D=null,K=null,G=null,R=null,H=null,ue.set(0,0,r.canvas.width,r.canvas.height),ae.set(0,0,r.canvas.width,r.canvas.height),a.reset(),c.reset(),h.reset()}return{buffers:{color:a,depth:c,stencil:h},enable:Ne,disable:W,bindFramebuffer:nt,drawBuffers:He,useProgram:Ve,setBlending:te,setMaterial:ne,setFlipSided:he,setCullFace:be,setLineWidth:_e,setPolygonOffset:We,setScissorTest:Fe,activeTexture:De,bindTexture:ht,unbindTexture:rt,compressedTexImage2D:O,texImage2D:Pe,texImage3D:Q,texStorage2D:ye,texStorage3D:we,texSubImage2D:L,texSubImage3D:j,compressedTexSubImage2D:le,scissor:Re,viewport:Xe,reset:Me}}function u0(r,e,t,n,i,s,o){const a=i.isWebGL2,c=i.maxTextures,h=i.maxCubemapSize,u=i.maxTextureSize,f=i.maxSamples,d=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,p=/OculusBrowser/g.test(navigator.userAgent),v=new WeakMap;let m;const g=new WeakMap;let b=!1;try{b=typeof OffscreenCanvas!="undefined"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function E(O,L){return b?new OffscreenCanvas(O,L):Es("canvas")}function A(O,L,j,le){let ye=1;if((O.width>le||O.height>le)&&(ye=le/Math.max(O.width,O.height)),ye<1||L===!0)if(typeof HTMLImageElement!="undefined"&&O instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&O instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&O instanceof ImageBitmap){const we=L?Yo:Math.floor,Pe=we(ye*O.width),Q=we(ye*O.height);m===void 0&&(m=E(Pe,Q));const Re=j?E(Pe,Q):m;return Re.width=Pe,Re.height=Q,Re.getContext("2d").drawImage(O,0,0,Pe,Q),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+O.width+"x"+O.height+") to ("+Pe+"x"+Q+")."),Re}else return"data"in O&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+O.width+"x"+O.height+")."),O;return O}function S(O){return Fl(O.width)&&Fl(O.height)}function C(O){return a?!1:O.wrapS!==zt||O.wrapT!==zt||O.minFilter!==Tt&&O.minFilter!==_t}function N(O,L){return O.generateMipmaps&&L&&O.minFilter!==Tt&&O.minFilter!==_t}function U(O){r.generateMipmap(O)}function D(O,L,j,le,ye=!1){if(a===!1)return L;if(O!==null){if(r[O]!==void 0)return r[O];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+O+"'")}let we=L;return L===r.RED&&(j===r.FLOAT&&(we=r.R32F),j===r.HALF_FLOAT&&(we=r.R16F),j===r.UNSIGNED_BYTE&&(we=r.R8)),L===r.RG&&(j===r.FLOAT&&(we=r.RG32F),j===r.HALF_FLOAT&&(we=r.RG16F),j===r.UNSIGNED_BYTE&&(we=r.RG8)),L===r.RGBA&&(j===r.FLOAT&&(we=r.RGBA32F),j===r.HALF_FLOAT&&(we=r.RGBA16F),j===r.UNSIGNED_BYTE&&(we=le===dt&&ye===!1?r.SRGB8_ALPHA8:r.RGBA8),j===r.UNSIGNED_SHORT_4_4_4_4&&(we=r.RGBA4),j===r.UNSIGNED_SHORT_5_5_5_1&&(we=r.RGB5_A1)),(we===r.R16F||we===r.R32F||we===r.RG16F||we===r.RG32F||we===r.RGBA16F||we===r.RGBA32F)&&e.get("EXT_color_buffer_float"),we}function K(O,L,j){return N(O,j)===!0||O.isFramebufferTexture&&O.minFilter!==Tt&&O.minFilter!==_t?Math.log2(Math.max(L.width,L.height))+1:O.mipmaps!==void 0&&O.mipmaps.length>0?O.mipmaps.length:O.isCompressedTexture&&Array.isArray(O.image)?L.mipmaps.length:1}function G(O){return O===Tt||O===Wo||O===Xo?r.NEAREST:r.LINEAR}function R(O){const L=O.target;L.removeEventListener("dispose",R),ee(L),L.isVideoTexture&&v.delete(L)}function H(O){const L=O.target;L.removeEventListener("dispose",H),k(L)}function ee(O){const L=n.get(O);if(L.__webglInit===void 0)return;const j=O.source,le=g.get(j);if(le){const ye=le[L.__cacheKey];ye.usedTimes--,ye.usedTimes===0&&X(O),Object.keys(le).length===0&&g.delete(j)}n.remove(O)}function X(O){const L=n.get(O);r.deleteTexture(L.__webglTexture);const j=O.source,le=g.get(j);delete le[L.__cacheKey],o.memory.textures--}function k(O){const L=O.texture,j=n.get(O),le=n.get(L);if(le.__webglTexture!==void 0&&(r.deleteTexture(le.__webglTexture),o.memory.textures--),O.depthTexture&&O.depthTexture.dispose(),O.isWebGLCubeRenderTarget)for(let ye=0;ye<6;ye++)r.deleteFramebuffer(j.__webglFramebuffer[ye]),j.__webglDepthbuffer&&r.deleteRenderbuffer(j.__webglDepthbuffer[ye]);else r.deleteFramebuffer(j.__webglFramebuffer),j.__webglDepthbuffer&&r.deleteRenderbuffer(j.__webglDepthbuffer),j.__webglMultisampledFramebuffer&&r.deleteFramebuffer(j.__webglMultisampledFramebuffer),j.__webglColorRenderbuffer&&r.deleteRenderbuffer(j.__webglColorRenderbuffer),j.__webglDepthRenderbuffer&&r.deleteRenderbuffer(j.__webglDepthRenderbuffer);if(O.isWebGLMultipleRenderTargets)for(let ye=0,we=L.length;ye<we;ye++){const Pe=n.get(L[ye]);Pe.__webglTexture&&(r.deleteTexture(Pe.__webglTexture),o.memory.textures--),n.remove(L[ye])}n.remove(L),n.remove(O)}let Z=0;function $(){Z=0}function V(){const O=Z;return O>=c&&console.warn("THREE.WebGLTextures: Trying to use "+O+" texture units while this GPU supports only "+c),Z+=1,O}function ie(O){const L=[];return L.push(O.wrapS),L.push(O.wrapT),L.push(O.magFilter),L.push(O.minFilter),L.push(O.anisotropy),L.push(O.internalFormat),L.push(O.format),L.push(O.type),L.push(O.generateMipmaps),L.push(O.premultiplyAlpha),L.push(O.flipY),L.push(O.unpackAlignment),L.push(O.encoding),L.join()}function oe(O,L){const j=n.get(O);if(O.isVideoTexture&&ht(O),O.isRenderTargetTexture===!1&&O.version>0&&j.__version!==O.version){const le=O.image;if(le===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(le.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{He(j,O,L);return}}t.activeTexture(r.TEXTURE0+L),t.bindTexture(r.TEXTURE_2D,j.__webglTexture)}function ue(O,L){const j=n.get(O);if(O.version>0&&j.__version!==O.version){He(j,O,L);return}t.activeTexture(r.TEXTURE0+L),t.bindTexture(r.TEXTURE_2D_ARRAY,j.__webglTexture)}function ae(O,L){const j=n.get(O);if(O.version>0&&j.__version!==O.version){He(j,O,L);return}t.activeTexture(r.TEXTURE0+L),t.bindTexture(r.TEXTURE_3D,j.__webglTexture)}function Le(O,L){const j=n.get(O);if(O.version>0&&j.__version!==O.version){Ve(j,O,L);return}t.activeTexture(r.TEXTURE0+L),t.bindTexture(r.TEXTURE_CUBE_MAP,j.__webglTexture)}const ke={[_s]:r.REPEAT,[zt]:r.CLAMP_TO_EDGE,[ys]:r.MIRRORED_REPEAT},Ne={[Tt]:r.NEAREST,[Wo]:r.NEAREST_MIPMAP_NEAREST,[Xo]:r.NEAREST_MIPMAP_LINEAR,[_t]:r.LINEAR,[ql]:r.LINEAR_MIPMAP_NEAREST,[nr]:r.LINEAR_MIPMAP_LINEAR};function W(O,L,j){if(j?(r.texParameteri(O,r.TEXTURE_WRAP_S,ke[L.wrapS]),r.texParameteri(O,r.TEXTURE_WRAP_T,ke[L.wrapT]),(O===r.TEXTURE_3D||O===r.TEXTURE_2D_ARRAY)&&r.texParameteri(O,r.TEXTURE_WRAP_R,ke[L.wrapR]),r.texParameteri(O,r.TEXTURE_MAG_FILTER,Ne[L.magFilter]),r.texParameteri(O,r.TEXTURE_MIN_FILTER,Ne[L.minFilter])):(r.texParameteri(O,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(O,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),(O===r.TEXTURE_3D||O===r.TEXTURE_2D_ARRAY)&&r.texParameteri(O,r.TEXTURE_WRAP_R,r.CLAMP_TO_EDGE),(L.wrapS!==zt||L.wrapT!==zt)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),r.texParameteri(O,r.TEXTURE_MAG_FILTER,G(L.magFilter)),r.texParameteri(O,r.TEXTURE_MIN_FILTER,G(L.minFilter)),L.minFilter!==Tt&&L.minFilter!==_t&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),e.has("EXT_texture_filter_anisotropic")===!0){const le=e.get("EXT_texture_filter_anisotropic");if(L.type===Wn&&e.has("OES_texture_float_linear")===!1||a===!1&&L.type===Gi&&e.has("OES_texture_half_float_linear")===!1)return;(L.anisotropy>1||n.get(L).__currentAnisotropy)&&(r.texParameterf(O,le.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(L.anisotropy,i.getMaxAnisotropy())),n.get(L).__currentAnisotropy=L.anisotropy)}}function nt(O,L){let j=!1;O.__webglInit===void 0&&(O.__webglInit=!0,L.addEventListener("dispose",R));const le=L.source;let ye=g.get(le);ye===void 0&&(ye={},g.set(le,ye));const we=ie(L);if(we!==O.__cacheKey){ye[we]===void 0&&(ye[we]={texture:r.createTexture(),usedTimes:0},o.memory.textures++,j=!0),ye[we].usedTimes++;const Pe=ye[O.__cacheKey];Pe!==void 0&&(ye[O.__cacheKey].usedTimes--,Pe.usedTimes===0&&X(L)),O.__cacheKey=we,O.__webglTexture=ye[we].texture}return j}function He(O,L,j){let le=r.TEXTURE_2D;L.isDataArrayTexture&&(le=r.TEXTURE_2D_ARRAY),L.isData3DTexture&&(le=r.TEXTURE_3D);const ye=nt(O,L),we=L.source;if(t.activeTexture(r.TEXTURE0+j),t.bindTexture(le,O.__webglTexture),we.version!==we.__currentVersion||ye===!0){r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,L.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,L.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,L.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,r.NONE);const Pe=C(L)&&S(L.image)===!1;let Q=A(L.image,Pe,!1,u);Q=rt(L,Q);const Re=S(Q)||a,Xe=s.convert(L.format,L.encoding);let Me=s.convert(L.type),z=D(L.internalFormat,Xe,Me,L.encoding,L.isVideoTexture);W(le,L,Re);let me;const pe=L.mipmaps,Ae=a&&L.isVideoTexture!==!0,Ee=O.__version===void 0,Ce=K(L,Q,Re);if(L.isDepthTexture)z=r.DEPTH_COMPONENT,a?L.type===Wn?z=r.DEPTH_COMPONENT32F:L.type===ds?z=r.DEPTH_COMPONENT24:L.type===ki?z=r.DEPTH24_STENCIL8:z=r.DEPTH_COMPONENT16:L.type===Wn&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),L.format===ci&&z===r.DEPTH_COMPONENT&&L.type!==Lr&&L.type!==ds&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),L.type=Lr,Me=s.convert(L.type)),L.format===Zi&&z===r.DEPTH_COMPONENT&&(z=r.DEPTH_STENCIL,L.type!==ki&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),L.type=ki,Me=s.convert(L.type))),Ae&&Ee?t.texStorage2D(r.TEXTURE_2D,1,z,Q.width,Q.height):t.texImage2D(r.TEXTURE_2D,0,z,Q.width,Q.height,0,Xe,Me,null);else if(L.isDataTexture)if(pe.length>0&&Re){Ae&&Ee&&t.texStorage2D(r.TEXTURE_2D,Ce,z,pe[0].width,pe[0].height);for(let fe=0,Ge=pe.length;fe<Ge;fe++)me=pe[fe],Ae?t.texSubImage2D(r.TEXTURE_2D,fe,0,0,me.width,me.height,Xe,Me,me.data):t.texImage2D(r.TEXTURE_2D,fe,z,me.width,me.height,0,Xe,Me,me.data);L.generateMipmaps=!1}else Ae?(Ee&&t.texStorage2D(r.TEXTURE_2D,Ce,z,Q.width,Q.height),t.texSubImage2D(r.TEXTURE_2D,0,0,0,Q.width,Q.height,Xe,Me,Q.data)):t.texImage2D(r.TEXTURE_2D,0,z,Q.width,Q.height,0,Xe,Me,Q.data);else if(L.isCompressedTexture){Ae&&Ee&&t.texStorage2D(r.TEXTURE_2D,Ce,z,pe[0].width,pe[0].height);for(let fe=0,Ge=pe.length;fe<Ge;fe++)me=pe[fe],L.format!==Kt?Xe!==null?Ae?t.compressedTexSubImage2D(r.TEXTURE_2D,fe,0,0,me.width,me.height,Xe,me.data):t.compressedTexImage2D(r.TEXTURE_2D,fe,z,me.width,me.height,0,me.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Ae?t.texSubImage2D(r.TEXTURE_2D,fe,0,0,me.width,me.height,Xe,Me,me.data):t.texImage2D(r.TEXTURE_2D,fe,z,me.width,me.height,0,Xe,Me,me.data)}else if(L.isDataArrayTexture)Ae?(Ee&&t.texStorage3D(r.TEXTURE_2D_ARRAY,Ce,z,Q.width,Q.height,Q.depth),t.texSubImage3D(r.TEXTURE_2D_ARRAY,0,0,0,0,Q.width,Q.height,Q.depth,Xe,Me,Q.data)):t.texImage3D(r.TEXTURE_2D_ARRAY,0,z,Q.width,Q.height,Q.depth,0,Xe,Me,Q.data);else if(L.isData3DTexture)Ae?(Ee&&t.texStorage3D(r.TEXTURE_3D,Ce,z,Q.width,Q.height,Q.depth),t.texSubImage3D(r.TEXTURE_3D,0,0,0,0,Q.width,Q.height,Q.depth,Xe,Me,Q.data)):t.texImage3D(r.TEXTURE_3D,0,z,Q.width,Q.height,Q.depth,0,Xe,Me,Q.data);else if(L.isFramebufferTexture)Ae&&Ee?t.texStorage2D(r.TEXTURE_2D,Ce,z,Q.width,Q.height):t.texImage2D(r.TEXTURE_2D,0,z,Q.width,Q.height,0,Xe,Me,null);else if(pe.length>0&&Re){Ae&&Ee&&t.texStorage2D(r.TEXTURE_2D,Ce,z,pe[0].width,pe[0].height);for(let fe=0,Ge=pe.length;fe<Ge;fe++)me=pe[fe],Ae?t.texSubImage2D(r.TEXTURE_2D,fe,0,0,Xe,Me,me):t.texImage2D(r.TEXTURE_2D,fe,z,Xe,Me,me);L.generateMipmaps=!1}else Ae?(Ee&&t.texStorage2D(r.TEXTURE_2D,Ce,z,Q.width,Q.height),t.texSubImage2D(r.TEXTURE_2D,0,0,0,Xe,Me,Q)):t.texImage2D(r.TEXTURE_2D,0,z,Xe,Me,Q);N(L,Re)&&U(le),we.__currentVersion=we.version,L.onUpdate&&L.onUpdate(L)}O.__version=L.version}function Ve(O,L,j){if(L.image.length!==6)return;const le=nt(O,L),ye=L.source;if(t.activeTexture(r.TEXTURE0+j),t.bindTexture(r.TEXTURE_CUBE_MAP,O.__webglTexture),ye.version!==ye.__currentVersion||le===!0){r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,L.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,L.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,L.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,r.NONE);const we=L.isCompressedTexture||L.image[0].isCompressedTexture,Pe=L.image[0]&&L.image[0].isDataTexture,Q=[];for(let fe=0;fe<6;fe++)!we&&!Pe?Q[fe]=A(L.image[fe],!1,!0,h):Q[fe]=Pe?L.image[fe].image:L.image[fe],Q[fe]=rt(L,Q[fe]);const Re=Q[0],Xe=S(Re)||a,Me=s.convert(L.format,L.encoding),z=s.convert(L.type),me=D(L.internalFormat,Me,z,L.encoding),pe=a&&L.isVideoTexture!==!0,Ae=O.__version===void 0;let Ee=K(L,Re,Xe);W(r.TEXTURE_CUBE_MAP,L,Xe);let Ce;if(we){pe&&Ae&&t.texStorage2D(r.TEXTURE_CUBE_MAP,Ee,me,Re.width,Re.height);for(let fe=0;fe<6;fe++){Ce=Q[fe].mipmaps;for(let Ge=0;Ge<Ce.length;Ge++){const lt=Ce[Ge];L.format!==Kt?Me!==null?pe?t.compressedTexSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+fe,Ge,0,0,lt.width,lt.height,Me,lt.data):t.compressedTexImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+fe,Ge,me,lt.width,lt.height,0,lt.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):pe?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+fe,Ge,0,0,lt.width,lt.height,Me,z,lt.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+fe,Ge,me,lt.width,lt.height,0,Me,z,lt.data)}}}else{Ce=L.mipmaps,pe&&Ae&&(Ce.length>0&&Ee++,t.texStorage2D(r.TEXTURE_CUBE_MAP,Ee,me,Q[0].width,Q[0].height));for(let fe=0;fe<6;fe++)if(Pe){pe?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+fe,0,0,0,Q[fe].width,Q[fe].height,Me,z,Q[fe].data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+fe,0,me,Q[fe].width,Q[fe].height,0,Me,z,Q[fe].data);for(let Ge=0;Ge<Ce.length;Ge++){const Ke=Ce[Ge].image[fe].image;pe?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+fe,Ge+1,0,0,Ke.width,Ke.height,Me,z,Ke.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+fe,Ge+1,me,Ke.width,Ke.height,0,Me,z,Ke.data)}}else{pe?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+fe,0,0,0,Me,z,Q[fe]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+fe,0,me,Me,z,Q[fe]);for(let Ge=0;Ge<Ce.length;Ge++){const lt=Ce[Ge];pe?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+fe,Ge+1,0,0,Me,z,lt.image[fe]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+fe,Ge+1,me,Me,z,lt.image[fe])}}}N(L,Xe)&&U(r.TEXTURE_CUBE_MAP),ye.__currentVersion=ye.version,L.onUpdate&&L.onUpdate(L)}O.__version=L.version}function de(O,L,j,le,ye){const we=s.convert(j.format,j.encoding),Pe=s.convert(j.type),Q=D(j.internalFormat,we,Pe,j.encoding);n.get(L).__hasExternalTextures||(ye===r.TEXTURE_3D||ye===r.TEXTURE_2D_ARRAY?t.texImage3D(ye,0,Q,L.width,L.height,L.depth,0,we,Pe,null):t.texImage2D(ye,0,Q,L.width,L.height,0,we,Pe,null)),t.bindFramebuffer(r.FRAMEBUFFER,O),De(L)?d.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,le,ye,n.get(j).__webglTexture,0,Fe(L)):r.framebufferTexture2D(r.FRAMEBUFFER,le,ye,n.get(j).__webglTexture,0),t.bindFramebuffer(r.FRAMEBUFFER,null)}function qe(O,L,j){if(r.bindRenderbuffer(r.RENDERBUFFER,O),L.depthBuffer&&!L.stencilBuffer){let le=r.DEPTH_COMPONENT16;if(j||De(L)){const ye=L.depthTexture;ye&&ye.isDepthTexture&&(ye.type===Wn?le=r.DEPTH_COMPONENT32F:ye.type===ds&&(le=r.DEPTH_COMPONENT24));const we=Fe(L);De(L)?d.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,we,le,L.width,L.height):r.renderbufferStorageMultisample(r.RENDERBUFFER,we,le,L.width,L.height)}else r.renderbufferStorage(r.RENDERBUFFER,le,L.width,L.height);r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.RENDERBUFFER,O)}else if(L.depthBuffer&&L.stencilBuffer){const le=Fe(L);j&&De(L)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,le,r.DEPTH24_STENCIL8,L.width,L.height):De(L)?d.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,le,r.DEPTH24_STENCIL8,L.width,L.height):r.renderbufferStorage(r.RENDERBUFFER,r.DEPTH_STENCIL,L.width,L.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.RENDERBUFFER,O)}else{const le=L.isWebGLMultipleRenderTargets===!0?L.texture[0]:L.texture,ye=s.convert(le.format,le.encoding),we=s.convert(le.type),Pe=D(le.internalFormat,ye,we,le.encoding),Q=Fe(L);j&&De(L)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,Q,Pe,L.width,L.height):De(L)?d.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,Q,Pe,L.width,L.height):r.renderbufferStorage(r.RENDERBUFFER,Pe,L.width,L.height)}r.bindRenderbuffer(r.RENDERBUFFER,null)}function te(O,L){if(L&&L.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(r.FRAMEBUFFER,O),!(L.depthTexture&&L.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(L.depthTexture).__webglTexture||L.depthTexture.image.width!==L.width||L.depthTexture.image.height!==L.height)&&(L.depthTexture.image.width=L.width,L.depthTexture.image.height=L.height,L.depthTexture.needsUpdate=!0),oe(L.depthTexture,0);const le=n.get(L.depthTexture).__webglTexture,ye=Fe(L);if(L.depthTexture.format===ci)De(L)?d.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,le,0,ye):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,le,0);else if(L.depthTexture.format===Zi)De(L)?d.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,le,0,ye):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,le,0);else throw new Error("Unknown depthTexture format")}function ne(O){const L=n.get(O),j=O.isWebGLCubeRenderTarget===!0;if(O.depthTexture&&!L.__autoAllocateDepthBuffer){if(j)throw new Error("target.depthTexture not supported in Cube render targets");te(L.__webglFramebuffer,O)}else if(j){L.__webglDepthbuffer=[];for(let le=0;le<6;le++)t.bindFramebuffer(r.FRAMEBUFFER,L.__webglFramebuffer[le]),L.__webglDepthbuffer[le]=r.createRenderbuffer(),qe(L.__webglDepthbuffer[le],O,!1)}else t.bindFramebuffer(r.FRAMEBUFFER,L.__webglFramebuffer),L.__webglDepthbuffer=r.createRenderbuffer(),qe(L.__webglDepthbuffer,O,!1);t.bindFramebuffer(r.FRAMEBUFFER,null)}function he(O,L,j){const le=n.get(O);L!==void 0&&de(le.__webglFramebuffer,O,O.texture,r.COLOR_ATTACHMENT0,r.TEXTURE_2D),j!==void 0&&ne(O)}function be(O){const L=O.texture,j=n.get(O),le=n.get(L);O.addEventListener("dispose",H),O.isWebGLMultipleRenderTargets!==!0&&(le.__webglTexture===void 0&&(le.__webglTexture=r.createTexture()),le.__version=L.version,o.memory.textures++);const ye=O.isWebGLCubeRenderTarget===!0,we=O.isWebGLMultipleRenderTargets===!0,Pe=S(O)||a;if(ye){j.__webglFramebuffer=[];for(let Q=0;Q<6;Q++)j.__webglFramebuffer[Q]=r.createFramebuffer()}else if(j.__webglFramebuffer=r.createFramebuffer(),we)if(i.drawBuffers){const Q=O.texture;for(let Re=0,Xe=Q.length;Re<Xe;Re++){const Me=n.get(Q[Re]);Me.__webglTexture===void 0&&(Me.__webglTexture=r.createTexture(),o.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");else if(a&&O.samples>0&&De(O)===!1){j.__webglMultisampledFramebuffer=r.createFramebuffer(),j.__webglColorRenderbuffer=r.createRenderbuffer(),r.bindRenderbuffer(r.RENDERBUFFER,j.__webglColorRenderbuffer);const Q=s.convert(L.format,L.encoding),Re=s.convert(L.type),Xe=D(L.internalFormat,Q,Re,L.encoding),Me=Fe(O);r.renderbufferStorageMultisample(r.RENDERBUFFER,Me,Xe,O.width,O.height),t.bindFramebuffer(r.FRAMEBUFFER,j.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.RENDERBUFFER,j.__webglColorRenderbuffer),r.bindRenderbuffer(r.RENDERBUFFER,null),O.depthBuffer&&(j.__webglDepthRenderbuffer=r.createRenderbuffer(),qe(j.__webglDepthRenderbuffer,O,!0)),t.bindFramebuffer(r.FRAMEBUFFER,null)}if(ye){t.bindTexture(r.TEXTURE_CUBE_MAP,le.__webglTexture),W(r.TEXTURE_CUBE_MAP,L,Pe);for(let Q=0;Q<6;Q++)de(j.__webglFramebuffer[Q],O,L,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+Q);N(L,Pe)&&U(r.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(we){const Q=O.texture;for(let Re=0,Xe=Q.length;Re<Xe;Re++){const Me=Q[Re],z=n.get(Me);t.bindTexture(r.TEXTURE_2D,z.__webglTexture),W(r.TEXTURE_2D,Me,Pe),de(j.__webglFramebuffer,O,Me,r.COLOR_ATTACHMENT0+Re,r.TEXTURE_2D),N(Me,Pe)&&U(r.TEXTURE_2D)}t.unbindTexture()}else{let Q=r.TEXTURE_2D;(O.isWebGL3DRenderTarget||O.isWebGLArrayRenderTarget)&&(a?Q=O.isWebGL3DRenderTarget?r.TEXTURE_3D:r.TEXTURE_2D_ARRAY:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(Q,le.__webglTexture),W(Q,L,Pe),de(j.__webglFramebuffer,O,L,r.COLOR_ATTACHMENT0,Q),N(L,Pe)&&U(Q),t.unbindTexture()}O.depthBuffer&&ne(O)}function _e(O){const L=S(O)||a,j=O.isWebGLMultipleRenderTargets===!0?O.texture:[O.texture];for(let le=0,ye=j.length;le<ye;le++){const we=j[le];if(N(we,L)){const Pe=O.isWebGLCubeRenderTarget?r.TEXTURE_CUBE_MAP:r.TEXTURE_2D,Q=n.get(we).__webglTexture;t.bindTexture(Pe,Q),U(Pe),t.unbindTexture()}}}function We(O){if(a&&O.samples>0&&De(O)===!1){const L=O.width,j=O.height;let le=r.COLOR_BUFFER_BIT;const ye=[r.COLOR_ATTACHMENT0],we=O.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT;O.depthBuffer&&ye.push(we);const Pe=n.get(O),Q=Pe.__ignoreDepthValues!==void 0?Pe.__ignoreDepthValues:!1;Q===!1&&(O.depthBuffer&&(le|=r.DEPTH_BUFFER_BIT),O.stencilBuffer&&(le|=r.STENCIL_BUFFER_BIT)),t.bindFramebuffer(r.READ_FRAMEBUFFER,Pe.__webglMultisampledFramebuffer),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,Pe.__webglFramebuffer),Q===!0&&(r.invalidateFramebuffer(r.READ_FRAMEBUFFER,[we]),r.invalidateFramebuffer(r.DRAW_FRAMEBUFFER,[we])),r.blitFramebuffer(0,0,L,j,0,0,L,j,le,r.NEAREST),p&&r.invalidateFramebuffer(r.READ_FRAMEBUFFER,ye),t.bindFramebuffer(r.READ_FRAMEBUFFER,null),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,Pe.__webglMultisampledFramebuffer)}}function Fe(O){return Math.min(f,O.samples)}function De(O){const L=n.get(O);return a&&O.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&L.__useRenderToTexture!==!1}function ht(O){const L=o.render.frame;v.get(O)!==L&&(v.set(O,L),O.update())}function rt(O,L){const j=O.encoding,le=O.format,ye=O.type;return O.isCompressedTexture===!0||O.isVideoTexture===!0||O.format===qo||j!==An&&(j===dt?a===!1?e.has("EXT_sRGB")===!0&&le===Kt?(O.format=qo,O.minFilter=_t,O.generateMipmaps=!1):L=_i.sRGBToLinear(L):(le!==Kt||ye!==fi)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",j)),L}this.allocateTextureUnit=V,this.resetTextureUnits=$,this.setTexture2D=oe,this.setTexture2DArray=ue,this.setTexture3D=ae,this.setTextureCube=Le,this.rebindTextures=he,this.setupRenderTarget=be,this.updateRenderTargetMipmap=_e,this.updateMultisampleRenderTarget=We,this.setupDepthRenderbuffer=ne,this.setupFrameBufferTexture=de,this.useMultisampledRTT=De}function Pd(r,e,t){const n=t.isWebGL2;function i(s,o=null){let a;if(s===fi)return r.UNSIGNED_BYTE;if(s===Gu)return r.UNSIGNED_SHORT_4_4_4_4;if(s===ku)return r.UNSIGNED_SHORT_5_5_5_1;if(s===Bu)return r.BYTE;if(s===Hu)return r.SHORT;if(s===Lr)return r.UNSIGNED_SHORT;if(s===zu)return r.INT;if(s===ds)return r.UNSIGNED_INT;if(s===Wn)return r.FLOAT;if(s===Gi)return n?r.HALF_FLOAT:(a=e.get("OES_texture_half_float"),a!==null?a.HALF_FLOAT_OES:null);if(s===Vu)return r.ALPHA;if(s===Kt)return r.RGBA;if(s===Xu)return r.LUMINANCE;if(s===qu)return r.LUMINANCE_ALPHA;if(s===ci)return r.DEPTH_COMPONENT;if(s===Zi)return r.DEPTH_STENCIL;if(s===Yu)return r.RED;if(s===Wu)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),r.RGBA;if(s===qo)return a=e.get("EXT_sRGB"),a!==null?a.SRGB_ALPHA_EXT:null;if(s===Zu)return r.RED_INTEGER;if(s===Ju)return r.RG;if(s===Ku)return r.RG_INTEGER;if(s===ju)return r.RGBA_INTEGER;if(s===No||s===Uo||s===Bo||s===Ho)if(o===dt)if(a=e.get("WEBGL_compressed_texture_s3tc_srgb"),a!==null){if(s===No)return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(s===Uo)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(s===Bo)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(s===Ho)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(a=e.get("WEBGL_compressed_texture_s3tc"),a!==null){if(s===No)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(s===Uo)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(s===Bo)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(s===Ho)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(s===dl||s===fl||s===pl||s===ml)if(a=e.get("WEBGL_compressed_texture_pvrtc"),a!==null){if(s===dl)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(s===fl)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(s===pl)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(s===ml)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(s===$u)return a=e.get("WEBGL_compressed_texture_etc1"),a!==null?a.COMPRESSED_RGB_ETC1_WEBGL:null;if(s===gl||s===vl)if(a=e.get("WEBGL_compressed_texture_etc"),a!==null){if(s===gl)return o===dt?a.COMPRESSED_SRGB8_ETC2:a.COMPRESSED_RGB8_ETC2;if(s===vl)return o===dt?a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:a.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(s===_l||s===yl||s===xl||s===Ml||s===wl||s===bl||s===El||s===Tl||s===Sl||s===Al||s===Rl||s===Cl||s===Ll||s===Pl)if(a=e.get("WEBGL_compressed_texture_astc"),a!==null){if(s===_l)return o===dt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:a.COMPRESSED_RGBA_ASTC_4x4_KHR;if(s===yl)return o===dt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:a.COMPRESSED_RGBA_ASTC_5x4_KHR;if(s===xl)return o===dt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:a.COMPRESSED_RGBA_ASTC_5x5_KHR;if(s===Ml)return o===dt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:a.COMPRESSED_RGBA_ASTC_6x5_KHR;if(s===wl)return o===dt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:a.COMPRESSED_RGBA_ASTC_6x6_KHR;if(s===bl)return o===dt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:a.COMPRESSED_RGBA_ASTC_8x5_KHR;if(s===El)return o===dt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:a.COMPRESSED_RGBA_ASTC_8x6_KHR;if(s===Tl)return o===dt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:a.COMPRESSED_RGBA_ASTC_8x8_KHR;if(s===Sl)return o===dt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:a.COMPRESSED_RGBA_ASTC_10x5_KHR;if(s===Al)return o===dt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:a.COMPRESSED_RGBA_ASTC_10x6_KHR;if(s===Rl)return o===dt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:a.COMPRESSED_RGBA_ASTC_10x8_KHR;if(s===Cl)return o===dt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:a.COMPRESSED_RGBA_ASTC_10x10_KHR;if(s===Ll)return o===dt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:a.COMPRESSED_RGBA_ASTC_12x10_KHR;if(s===Pl)return o===dt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:a.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(s===Il)if(a=e.get("EXT_texture_compression_bptc"),a!==null){if(s===Il)return o===dt?a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:a.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;if(s===ki)return n?r.UNSIGNED_INT_24_8:(a=e.get("WEBGL_depth_texture"),a!==null?a.UNSIGNED_INT_24_8_WEBGL:null)}return{convert:i}}class Kl extends It{constructor(e=[]){super();this.cameras=e}}Kl.prototype.isArrayCamera=!0;class Hi extends $e{constructor(){super();this.type="Group"}}Hi.prototype.isGroup=!0;const d0={type:"move"};class Ka{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new Hi,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new Hi,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new P,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new P),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new Hi,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new P,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new P),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,s=null,o=null;const a=this._targetRay,c=this._grip,h=this._hand;if(e&&t.session.visibilityState!=="visible-blurred")if(a!==null&&(i=t.getPose(e.targetRaySpace,n),i!==null&&(a.matrix.fromArray(i.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),i.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(i.linearVelocity)):a.hasLinearVelocity=!1,i.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(i.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(d0))),h&&e.hand){o=!0;for(const m of e.hand.values()){const g=t.getJointPose(m,n);if(h.joints[m.jointName]===void 0){const E=new Hi;E.matrixAutoUpdate=!1,E.visible=!1,h.joints[m.jointName]=E,h.add(E)}const b=h.joints[m.jointName];g!==null&&(b.matrix.fromArray(g.transform.matrix),b.matrix.decompose(b.position,b.rotation,b.scale),b.jointRadius=g.radius),b.visible=g!==null}const u=h.joints["index-finger-tip"],f=h.joints["thumb-tip"],d=u.position.distanceTo(f.position),p=.02,v=.005;h.inputState.pinching&&d>p+v?(h.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!h.inputState.pinching&&d<=p-v&&(h.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else c!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,n),s!==null&&(c.matrix.fromArray(s.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),s.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(s.linearVelocity)):c.hasLinearVelocity=!1,s.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(s.angularVelocity)):c.hasAngularVelocity=!1));return a!==null&&(a.visible=i!==null),c!==null&&(c.visible=s!==null),h!==null&&(h.visible=o!==null),this}}class jl extends At{constructor(e,t,n,i,s,o,a,c,h,u){if(u=u!==void 0?u:ci,u!==ci&&u!==Zi)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&u===ci&&(n=Lr),n===void 0&&u===Zi&&(n=ki);super(null,i,s,o,a,c,u,n,h);this.image={width:e,height:t},this.magFilter=a!==void 0?a:Tt,this.minFilter=c!==void 0?c:Tt,this.flipY=!1,this.generateMipmaps=!1}}jl.prototype.isDepthTexture=!0;class f0 extends vi{constructor(e,t){super();const n=this;let i=null,s=1,o=null,a="local-floor",c=null,h=null,u=null,f=null,d=null;const p=t.getContextAttributes();let v=null,m=null;const g=[],b=new Map,E=new It;E.layers.enable(1),E.viewport=new st;const A=new It;A.layers.enable(2),A.viewport=new st;const S=[E,A],C=new Kl;C.layers.enable(1),C.layers.enable(2);let N=null,U=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(V){let ie=g[V];return ie===void 0&&(ie=new Ka,g[V]=ie),ie.getTargetRaySpace()},this.getControllerGrip=function(V){let ie=g[V];return ie===void 0&&(ie=new Ka,g[V]=ie),ie.getGripSpace()},this.getHand=function(V){let ie=g[V];return ie===void 0&&(ie=new Ka,g[V]=ie),ie.getHandSpace()};function D(V){const ie=b.get(V.inputSource);ie&&ie.dispatchEvent({type:V.type,data:V.inputSource})}function K(){b.forEach(function(V,ie){V.disconnect(ie)}),b.clear(),N=null,U=null,e.setRenderTarget(v),f=null,u=null,h=null,i=null,m=null,$.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(V){s=V,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(V){a=V,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return o},this.getBaseLayer=function(){return u!==null?u:f},this.getBinding=function(){return h},this.getFrame=function(){return d},this.getSession=function(){return i},this.setSession=async function(V){if(i=V,i!==null){if(v=e.getRenderTarget(),i.addEventListener("select",D),i.addEventListener("selectstart",D),i.addEventListener("selectend",D),i.addEventListener("squeeze",D),i.addEventListener("squeezestart",D),i.addEventListener("squeezeend",D),i.addEventListener("end",K),i.addEventListener("inputsourceschange",G),p.xrCompatible!==!0&&await t.makeXRCompatible(),i.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const ie={antialias:i.renderState.layers===void 0?p.antialias:!0,alpha:p.alpha,depth:p.depth,stencil:p.stencil,framebufferScaleFactor:s};f=new XRWebGLLayer(i,t,ie),i.updateRenderState({baseLayer:f}),m=new Gt(f.framebufferWidth,f.framebufferHeight,{format:Kt,type:fi,encoding:e.outputEncoding})}else{let ie=null,oe=null,ue=null;p.depth&&(ue=p.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,ie=p.stencil?Zi:ci,oe=p.stencil?ki:Lr);const ae={colorFormat:e.outputEncoding===dt?t.SRGB8_ALPHA8:t.RGBA8,depthFormat:ue,scaleFactor:s};h=new XRWebGLBinding(i,t),u=h.createProjectionLayer(ae),i.updateRenderState({layers:[u]}),m=new Gt(u.textureWidth,u.textureHeight,{format:Kt,type:fi,depthTexture:new jl(u.textureWidth,u.textureHeight,oe,void 0,void 0,void 0,void 0,void 0,void 0,ie),stencilBuffer:p.stencil,encoding:e.outputEncoding,samples:p.antialias?4:0});const Le=e.properties.get(m);Le.__ignoreDepthValues=u.ignoreDepthValues}m.isXRRenderTarget=!0,this.setFoveation(1),o=await i.requestReferenceSpace(a),$.setContext(i),$.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};function G(V){const ie=i.inputSources;for(let oe=0;oe<g.length;oe++)b.set(ie[oe],g[oe]);for(let oe=0;oe<V.removed.length;oe++){const ue=V.removed[oe],ae=b.get(ue);ae&&(ae.dispatchEvent({type:"disconnected",data:ue}),b.delete(ue))}for(let oe=0;oe<V.added.length;oe++){const ue=V.added[oe],ae=b.get(ue);ae&&ae.dispatchEvent({type:"connected",data:ue})}}const R=new P,H=new P;function ee(V,ie,oe){R.setFromMatrixPosition(ie.matrixWorld),H.setFromMatrixPosition(oe.matrixWorld);const ue=R.distanceTo(H),ae=ie.projectionMatrix.elements,Le=oe.projectionMatrix.elements,ke=ae[14]/(ae[10]-1),Ne=ae[14]/(ae[10]+1),W=(ae[9]+1)/ae[5],nt=(ae[9]-1)/ae[5],He=(ae[8]-1)/ae[0],Ve=(Le[8]+1)/Le[0],de=ke*He,qe=ke*Ve,te=ue/(-He+Ve),ne=te*-He;ie.matrixWorld.decompose(V.position,V.quaternion,V.scale),V.translateX(ne),V.translateZ(te),V.matrixWorld.compose(V.position,V.quaternion,V.scale),V.matrixWorldInverse.copy(V.matrixWorld).invert();const he=ke+te,be=Ne+te,_e=de-ne,We=qe+(ue-ne),Fe=W*Ne/be*he,De=nt*Ne/be*he;V.projectionMatrix.makePerspective(_e,We,Fe,De,he,be)}function X(V,ie){ie===null?V.matrixWorld.copy(V.matrix):V.matrixWorld.multiplyMatrices(ie.matrixWorld,V.matrix),V.matrixWorldInverse.copy(V.matrixWorld).invert()}this.updateCamera=function(V){if(i===null)return;C.near=A.near=E.near=V.near,C.far=A.far=E.far=V.far,(N!==C.near||U!==C.far)&&(i.updateRenderState({depthNear:C.near,depthFar:C.far}),N=C.near,U=C.far);const ie=V.parent,oe=C.cameras;X(C,ie);for(let ae=0;ae<oe.length;ae++)X(oe[ae],ie);C.matrixWorld.decompose(C.position,C.quaternion,C.scale),V.position.copy(C.position),V.quaternion.copy(C.quaternion),V.scale.copy(C.scale),V.matrix.copy(C.matrix),V.matrixWorld.copy(C.matrixWorld);const ue=V.children;for(let ae=0,Le=ue.length;ae<Le;ae++)ue[ae].updateMatrixWorld(!0);oe.length===2?ee(C,E,A):C.projectionMatrix.copy(E.projectionMatrix)},this.getCamera=function(){return C},this.getFoveation=function(){if(u!==null)return u.fixedFoveation;if(f!==null)return f.fixedFoveation},this.setFoveation=function(V){u!==null&&(u.fixedFoveation=V),f!==null&&f.fixedFoveation!==void 0&&(f.fixedFoveation=V)};let k=null;function Z(V,ie){if(c=ie.getViewerPose(o),d=ie,c!==null){const ue=c.views;f!==null&&(e.setRenderTargetFramebuffer(m,f.framebuffer),e.setRenderTarget(m));let ae=!1;ue.length!==C.cameras.length&&(C.cameras.length=0,ae=!0);for(let Le=0;Le<ue.length;Le++){const ke=ue[Le];let Ne=null;if(f!==null)Ne=f.getViewport(ke);else{const nt=h.getViewSubImage(u,ke);Ne=nt.viewport,Le===0&&(e.setRenderTargetTextures(m,nt.colorTexture,u.ignoreDepthValues?void 0:nt.depthStencilTexture),e.setRenderTarget(m))}const W=S[Le];W.matrix.fromArray(ke.transform.matrix),W.projectionMatrix.fromArray(ke.projectionMatrix),W.viewport.set(Ne.x,Ne.y,Ne.width,Ne.height),Le===0&&C.matrix.copy(W.matrix),ae===!0&&C.cameras.push(W)}}const oe=i.inputSources;for(let ue=0;ue<g.length;ue++){const ae=g[ue],Le=oe[ue];ae.update(Le,ie,o)}k&&k(V,ie),d=null}const $=new wd;$.setAnimationLoop(Z),this.setAnimationLoop=function(V){k=V},this.dispose=function(){}}}function p0(r,e){function t(m,g){m.fogColor.value.copy(g.color),g.isFog?(m.fogNear.value=g.near,m.fogFar.value=g.far):g.isFogExp2&&(m.fogDensity.value=g.density)}function n(m,g,b,E,A){g.isMeshBasicMaterial||g.isMeshLambertMaterial?i(m,g):g.isMeshToonMaterial?(i(m,g),u(m,g)):g.isMeshPhongMaterial?(i(m,g),h(m,g)):g.isMeshStandardMaterial?(i(m,g),f(m,g),g.isMeshPhysicalMaterial&&d(m,g,A)):g.isMeshMatcapMaterial?(i(m,g),p(m,g)):g.isMeshDepthMaterial?i(m,g):g.isMeshDistanceMaterial?(i(m,g),v(m,g)):g.isMeshNormalMaterial?i(m,g):g.isLineBasicMaterial?(s(m,g),g.isLineDashedMaterial&&o(m,g)):g.isPointsMaterial?a(m,g,b,E):g.isSpriteMaterial?c(m,g):g.isShadowMaterial?(m.color.value.copy(g.color),m.opacity.value=g.opacity):g.isShaderMaterial&&(g.uniformsNeedUpdate=!1)}function i(m,g){m.opacity.value=g.opacity,g.color&&m.diffuse.value.copy(g.color),g.emissive&&m.emissive.value.copy(g.emissive).multiplyScalar(g.emissiveIntensity),g.map&&(m.map.value=g.map),g.alphaMap&&(m.alphaMap.value=g.alphaMap),g.bumpMap&&(m.bumpMap.value=g.bumpMap,m.bumpScale.value=g.bumpScale,g.side===jt&&(m.bumpScale.value*=-1)),g.displacementMap&&(m.displacementMap.value=g.displacementMap,m.displacementScale.value=g.displacementScale,m.displacementBias.value=g.displacementBias),g.emissiveMap&&(m.emissiveMap.value=g.emissiveMap),g.normalMap&&(m.normalMap.value=g.normalMap,m.normalScale.value.copy(g.normalScale),g.side===jt&&m.normalScale.value.negate()),g.specularMap&&(m.specularMap.value=g.specularMap),g.alphaTest>0&&(m.alphaTest.value=g.alphaTest);const b=e.get(g).envMap;if(b&&(m.envMap.value=b,m.flipEnvMap.value=b.isCubeTexture&&b.isRenderTargetTexture===!1?-1:1,m.reflectivity.value=g.reflectivity,m.ior.value=g.ior,m.refractionRatio.value=g.refractionRatio),g.lightMap){m.lightMap.value=g.lightMap;const S=r.physicallyCorrectLights!==!0?Math.PI:1;m.lightMapIntensity.value=g.lightMapIntensity*S}g.aoMap&&(m.aoMap.value=g.aoMap,m.aoMapIntensity.value=g.aoMapIntensity);let E;g.map?E=g.map:g.specularMap?E=g.specularMap:g.displacementMap?E=g.displacementMap:g.normalMap?E=g.normalMap:g.bumpMap?E=g.bumpMap:g.roughnessMap?E=g.roughnessMap:g.metalnessMap?E=g.metalnessMap:g.alphaMap?E=g.alphaMap:g.emissiveMap?E=g.emissiveMap:g.clearcoatMap?E=g.clearcoatMap:g.clearcoatNormalMap?E=g.clearcoatNormalMap:g.clearcoatRoughnessMap?E=g.clearcoatRoughnessMap:g.specularIntensityMap?E=g.specularIntensityMap:g.specularColorMap?E=g.specularColorMap:g.transmissionMap?E=g.transmissionMap:g.thicknessMap?E=g.thicknessMap:g.sheenColorMap?E=g.sheenColorMap:g.sheenRoughnessMap&&(E=g.sheenRoughnessMap),E!==void 0&&(E.isWebGLRenderTarget&&(E=E.texture),E.matrixAutoUpdate===!0&&E.updateMatrix(),m.uvTransform.value.copy(E.matrix));let A;g.aoMap?A=g.aoMap:g.lightMap&&(A=g.lightMap),A!==void 0&&(A.isWebGLRenderTarget&&(A=A.texture),A.matrixAutoUpdate===!0&&A.updateMatrix(),m.uv2Transform.value.copy(A.matrix))}function s(m,g){m.diffuse.value.copy(g.color),m.opacity.value=g.opacity}function o(m,g){m.dashSize.value=g.dashSize,m.totalSize.value=g.dashSize+g.gapSize,m.scale.value=g.scale}function a(m,g,b,E){m.diffuse.value.copy(g.color),m.opacity.value=g.opacity,m.size.value=g.size*b,m.scale.value=E*.5,g.map&&(m.map.value=g.map),g.alphaMap&&(m.alphaMap.value=g.alphaMap),g.alphaTest>0&&(m.alphaTest.value=g.alphaTest);let A;g.map?A=g.map:g.alphaMap&&(A=g.alphaMap),A!==void 0&&(A.matrixAutoUpdate===!0&&A.updateMatrix(),m.uvTransform.value.copy(A.matrix))}function c(m,g){m.diffuse.value.copy(g.color),m.opacity.value=g.opacity,m.rotation.value=g.rotation,g.map&&(m.map.value=g.map),g.alphaMap&&(m.alphaMap.value=g.alphaMap),g.alphaTest>0&&(m.alphaTest.value=g.alphaTest);let b;g.map?b=g.map:g.alphaMap&&(b=g.alphaMap),b!==void 0&&(b.matrixAutoUpdate===!0&&b.updateMatrix(),m.uvTransform.value.copy(b.matrix))}function h(m,g){m.specular.value.copy(g.specular),m.shininess.value=Math.max(g.shininess,1e-4)}function u(m,g){g.gradientMap&&(m.gradientMap.value=g.gradientMap)}function f(m,g){m.roughness.value=g.roughness,m.metalness.value=g.metalness,g.roughnessMap&&(m.roughnessMap.value=g.roughnessMap),g.metalnessMap&&(m.metalnessMap.value=g.metalnessMap),e.get(g).envMap&&(m.envMapIntensity.value=g.envMapIntensity)}function d(m,g,b){m.ior.value=g.ior,g.sheen>0&&(m.sheenColor.value.copy(g.sheenColor).multiplyScalar(g.sheen),m.sheenRoughness.value=g.sheenRoughness,g.sheenColorMap&&(m.sheenColorMap.value=g.sheenColorMap),g.sheenRoughnessMap&&(m.sheenRoughnessMap.value=g.sheenRoughnessMap)),g.clearcoat>0&&(m.clearcoat.value=g.clearcoat,m.clearcoatRoughness.value=g.clearcoatRoughness,g.clearcoatMap&&(m.clearcoatMap.value=g.clearcoatMap),g.clearcoatRoughnessMap&&(m.clearcoatRoughnessMap.value=g.clearcoatRoughnessMap),g.clearcoatNormalMap&&(m.clearcoatNormalScale.value.copy(g.clearcoatNormalScale),m.clearcoatNormalMap.value=g.clearcoatNormalMap,g.side===jt&&m.clearcoatNormalScale.value.negate())),g.transmission>0&&(m.transmission.value=g.transmission,m.transmissionSamplerMap.value=b.texture,m.transmissionSamplerSize.value.set(b.width,b.height),g.transmissionMap&&(m.transmissionMap.value=g.transmissionMap),m.thickness.value=g.thickness,g.thicknessMap&&(m.thicknessMap.value=g.thicknessMap),m.attenuationDistance.value=g.attenuationDistance,m.attenuationColor.value.copy(g.attenuationColor)),m.specularIntensity.value=g.specularIntensity,m.specularColor.value.copy(g.specularColor),g.specularIntensityMap&&(m.specularIntensityMap.value=g.specularIntensityMap),g.specularColorMap&&(m.specularColorMap.value=g.specularColorMap)}function p(m,g){g.matcap&&(m.matcap.value=g.matcap)}function v(m,g){m.referencePosition.value.copy(g.referencePosition),m.nearDistance.value=g.nearDistance,m.farDistance.value=g.farDistance}return{refreshFogUniforms:t,refreshMaterialUniforms:n}}function m0(){const r=Es("canvas");return r.style.display="block",r}function at(r={}){const e=r.canvas!==void 0?r.canvas:m0(),t=r.context!==void 0?r.context:null,n=r.depth!==void 0?r.depth:!0,i=r.stencil!==void 0?r.stencil:!0,s=r.antialias!==void 0?r.antialias:!1,o=r.premultipliedAlpha!==void 0?r.premultipliedAlpha:!0,a=r.preserveDrawingBuffer!==void 0?r.preserveDrawingBuffer:!1,c=r.powerPreference!==void 0?r.powerPreference:"default",h=r.failIfMajorPerformanceCaveat!==void 0?r.failIfMajorPerformanceCaveat:!1;let u;r.context!==void 0?u=t.getContextAttributes().alpha:u=r.alpha!==void 0?r.alpha:!1;let f=null,d=null;const p=[],v=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=An,this.physicallyCorrectLights=!1,this.toneMapping=En,this.toneMappingExposure=1;const m=this;let g=!1,b=0,E=0,A=null,S=-1,C=null;const N=new st,U=new st;let D=null,K=e.width,G=e.height,R=1,H=null,ee=null;const X=new st(0,0,K,G),k=new st(0,0,K,G);let Z=!1;const $=new Os;let V=!1,ie=!1,oe=null;const ue=new Se,ae=new se,Le=new P,ke={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function Ne(){return A===null?R:1}let W=t;function nt(I,q){for(let J=0;J<I.length;J++){const Y=I[J],re=e.getContext(Y,q);if(re!==null)return re}return null}try{const I={alpha:!0,depth:n,stencil:i,antialias:s,premultipliedAlpha:o,preserveDrawingBuffer:a,powerPreference:c,failIfMajorPerformanceCaveat:h};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${Jo}`),e.addEventListener("webglcontextlost",z,!1),e.addEventListener("webglcontextrestored",me,!1),W===null){const q=["webgl2","webgl","experimental-webgl"];if(m.isWebGL1Renderer===!0&&q.shift(),W=nt(q,I),W===null)throw nt(q)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}W.getShaderPrecisionFormat===void 0&&(W.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(I){throw console.error("THREE.WebGLRenderer: "+I.message),I}let He,Ve,de,qe,te,ne,he,be,_e,We,Fe,De,ht,rt,O,L,j,le,ye,we,Pe,Q,Re;function Xe(){He=new Fv(W),Ve=new Rv(W,He,r),He.init(Ve),Q=new Pd(W,He,Ve),de=new h0(W,He,Ve),qe=new Uv(W),te=new Q_,ne=new u0(W,He,de,te,Ve,Q,qe),he=new Lv(m),be=new Dv(m),_e=new jp(W,Ve),Re=new Sv(W,He,_e,Ve),We=new Ov(W,_e,qe,Re),Fe=new Gv(W,We,_e,qe),ye=new zv(W,Ve,ne),L=new Cv(te),De=new $_(m,he,be,He,Ve,Re,L),ht=new p0(m,te),rt=new t0,O=new a0(He,Ve),le=new Tv(m,he,de,Fe,u,o),j=new Ld(m,Fe,Ve),we=new Av(W,He,qe,Ve),Pe=new Nv(W,He,qe,Ve),qe.programs=De.programs,m.capabilities=Ve,m.extensions=He,m.properties=te,m.renderLists=rt,m.shadowMap=j,m.state=de,m.info=qe}Xe();const Me=new f0(m,W);this.xr=Me,this.getContext=function(){return W},this.getContextAttributes=function(){return W.getContextAttributes()},this.forceContextLoss=function(){const I=He.get("WEBGL_lose_context");I&&I.loseContext()},this.forceContextRestore=function(){const I=He.get("WEBGL_lose_context");I&&I.restoreContext()},this.getPixelRatio=function(){return R},this.setPixelRatio=function(I){I!==void 0&&(R=I,this.setSize(K,G,!1))},this.getSize=function(I){return I.set(K,G)},this.setSize=function(I,q,J){if(Me.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}K=I,G=q,e.width=Math.floor(I*R),e.height=Math.floor(q*R),J!==!1&&(e.style.width=I+"px",e.style.height=q+"px"),this.setViewport(0,0,I,q)},this.getDrawingBufferSize=function(I){return I.set(K*R,G*R).floor()},this.setDrawingBufferSize=function(I,q,J){K=I,G=q,R=J,e.width=Math.floor(I*J),e.height=Math.floor(q*J),this.setViewport(0,0,I,q)},this.getCurrentViewport=function(I){return I.copy(N)},this.getViewport=function(I){return I.copy(X)},this.setViewport=function(I,q,J,Y){I.isVector4?X.set(I.x,I.y,I.z,I.w):X.set(I,q,J,Y),de.viewport(N.copy(X).multiplyScalar(R).floor())},this.getScissor=function(I){return I.copy(k)},this.setScissor=function(I,q,J,Y){I.isVector4?k.set(I.x,I.y,I.z,I.w):k.set(I,q,J,Y),de.scissor(U.copy(k).multiplyScalar(R).floor())},this.getScissorTest=function(){return Z},this.setScissorTest=function(I){de.setScissorTest(Z=I)},this.setOpaqueSort=function(I){H=I},this.setTransparentSort=function(I){ee=I},this.getClearColor=function(I){return I.copy(le.getClearColor())},this.setClearColor=function(){le.setClearColor.apply(le,arguments)},this.getClearAlpha=function(){return le.getClearAlpha()},this.setClearAlpha=function(){le.setClearAlpha.apply(le,arguments)},this.clear=function(I=!0,q=!0,J=!0){let Y=0;I&&(Y|=W.COLOR_BUFFER_BIT),q&&(Y|=W.DEPTH_BUFFER_BIT),J&&(Y|=W.STENCIL_BUFFER_BIT),W.clear(Y)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",z,!1),e.removeEventListener("webglcontextrestored",me,!1),rt.dispose(),O.dispose(),te.dispose(),he.dispose(),be.dispose(),Fe.dispose(),Re.dispose(),De.dispose(),Me.dispose(),Me.removeEventListener("sessionstart",Ge),Me.removeEventListener("sessionend",lt),oe&&(oe.dispose(),oe=null),Ke.stop()};function z(I){I.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),g=!0}function me(){console.log("THREE.WebGLRenderer: Context Restored."),g=!1;const I=qe.autoReset,q=j.enabled,J=j.autoUpdate,Y=j.needsUpdate,re=j.type;Xe(),qe.autoReset=I,j.enabled=q,j.autoUpdate=J,j.needsUpdate=Y,j.type=re}function pe(I){const q=I.target;q.removeEventListener("dispose",pe),Ae(q)}function Ae(I){Ee(I),te.remove(I)}function Ee(I){const q=te.get(I).programs;q!==void 0&&(q.forEach(function(J){De.releaseProgram(J)}),I.isShaderMaterial&&De.releaseShaderCache(I))}this.renderBufferDirect=function(I,q,J,Y,re,Be){q===null&&(q=ke);const ze=re.isMesh&&re.matrixWorld.determinant()<0,Ye=In(I,q,J,Y,re);de.setMaterial(Y,ze);let Ue=J.index;const it=J.attributes.position;if(Ue===null){if(it===void 0||it.count===0)return}else if(Ue.count===0)return;let Ze=1;Y.wireframe===!0&&(Ue=We.getWireframeAttribute(J),Ze=2),Re.setup(re,Y,Ye,J,Ue);let je,ot=we;Ue!==null&&(je=_e.get(Ue),ot=Pe,ot.setIndex(je));const Dn=Ue!==null?Ue.count:it.count,xn=J.drawRange.start*Ze,jn=J.drawRange.count*Ze,nn=Be!==null?Be.start*Ze:0,Qe=Be!==null?Be.count*Ze:1/0,Fn=Math.max(xn,nn),ct=Math.min(Dn,xn+jn,nn+Qe)-1,rn=Math.max(0,ct-Fn+1);if(rn!==0){if(re.isMesh)Y.wireframe===!0?(de.setLineWidth(Y.wireframeLinewidth*Ne()),ot.setMode(W.LINES)):ot.setMode(W.TRIANGLES);else if(re.isLine){let sn=Y.linewidth;sn===void 0&&(sn=1),de.setLineWidth(sn*Ne()),re.isLineSegments?ot.setMode(W.LINES):re.isLineLoop?ot.setMode(W.LINE_LOOP):ot.setMode(W.LINE_STRIP)}else re.isPoints?ot.setMode(W.POINTS):re.isSprite&&ot.setMode(W.TRIANGLES);if(re.isInstancedMesh)ot.renderInstances(Fn,rn,re.count);else if(J.isInstancedBufferGeometry){const sn=Math.min(J.instanceCount,J._maxInstanceCount);ot.renderInstances(Fn,rn,sn)}else ot.render(Fn,rn)}},this.compile=function(I,q){d=O.get(I),d.init(),v.push(d),I.traverseVisible(function(J){J.isLight&&J.layers.test(q.layers)&&(d.pushLight(J),J.castShadow&&d.pushShadow(J))}),d.setupLights(m.physicallyCorrectLights),I.traverse(function(J){const Y=J.material;if(Y)if(Array.isArray(Y))for(let re=0;re<Y.length;re++){const Be=Y[re];wi(Be,I,J)}else wi(Y,I,J)}),v.pop(),d=null};let Ce=null;function fe(I){Ce&&Ce(I)}function Ge(){Ke.stop()}function lt(){Ke.start()}const Ke=new wd;Ke.setAnimationLoop(fe),typeof self!="undefined"&&Ke.setContext(self),this.setAnimationLoop=function(I){Ce=I,Me.setAnimationLoop(I),I===null?Ke.stop():Ke.start()},Me.addEventListener("sessionstart",Ge),Me.addEventListener("sessionend",lt),this.render=function(I,q){if(q!==void 0&&q.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(g===!0)return;I.autoUpdate===!0&&I.updateMatrixWorld(),q.parent===null&&q.updateMatrixWorld(),Me.enabled===!0&&Me.isPresenting===!0&&(Me.cameraAutoUpdate===!0&&Me.updateCamera(q),q=Me.getCamera()),I.isScene===!0&&I.onBeforeRender(m,I,q,A),d=O.get(I,v.length),d.init(),v.push(d),ue.multiplyMatrices(q.projectionMatrix,q.matrixWorldInverse),$.setFromProjectionMatrix(ue),ie=this.localClippingEnabled,V=L.init(this.clippingPlanes,ie,q),f=rt.get(I,p.length),f.init(),p.push(f),Yt(I,q,0,m.sortObjects),f.finish(),m.sortObjects===!0&&f.sort(H,ee),V===!0&&L.beginShadows();const J=d.state.shadowsArray;if(j.render(J,I,q),V===!0&&L.endShadows(),this.info.autoReset===!0&&this.info.reset(),le.render(f,I),d.setupLights(m.physicallyCorrectLights),q.isArrayCamera){const Y=q.cameras;for(let re=0,Be=Y.length;re<Be;re++){const ze=Y[re];Wt(f,I,ze,ze.viewport)}}else Wt(f,I,q);A!==null&&(ne.updateMultisampleRenderTarget(A),ne.updateRenderTargetMipmap(A)),I.isScene===!0&&I.onAfterRender(m,I,q),Re.resetDefaultState(),S=-1,C=null,v.pop(),v.length>0?d=v[v.length-1]:d=null,p.pop(),p.length>0?f=p[p.length-1]:f=null};function Yt(I,q,J,Y){if(I.visible===!1)return;if(I.layers.test(q.layers)){if(I.isGroup)J=I.renderOrder;else if(I.isLOD)I.autoUpdate===!0&&I.update(q);else if(I.isLight)d.pushLight(I),I.castShadow&&d.pushShadow(I);else if(I.isSprite){if(!I.frustumCulled||$.intersectsSprite(I)){Y&&Le.setFromMatrixPosition(I.matrixWorld).applyMatrix4(ue);const ze=Fe.update(I),Ye=I.material;Ye.visible&&f.push(I,ze,Ye,J,Le.z,null)}}else if((I.isMesh||I.isLine||I.isPoints)&&(I.isSkinnedMesh&&I.skeleton.frame!==qe.render.frame&&(I.skeleton.update(),I.skeleton.frame=qe.render.frame),!I.frustumCulled||$.intersectsObject(I))){Y&&Le.setFromMatrixPosition(I.matrixWorld).applyMatrix4(ue);const ze=Fe.update(I),Ye=I.material;if(Array.isArray(Ye)){const Ue=ze.groups;for(let it=0,Ze=Ue.length;it<Ze;it++){const je=Ue[it],ot=Ye[je.materialIndex];ot&&ot.visible&&f.push(I,ze,ot,J,Le.z,je)}}else Ye.visible&&f.push(I,ze,Ye,J,Le.z,null)}}const Be=I.children;for(let ze=0,Ye=Be.length;ze<Ye;ze++)Yt(Be[ze],q,J,Y)}function Wt(I,q,J,Y){const re=I.opaque,Be=I.transmissive,ze=I.transparent;d.setupLightsView(J),Be.length>0&&tn(re,q,J),Y&&de.viewport(N.copy(Y)),re.length>0&&Kn(re,q,J),Be.length>0&&Kn(Be,q,J),ze.length>0&&Kn(ze,q,J),de.buffers.depth.setTest(!0),de.buffers.depth.setMask(!0),de.buffers.color.setMask(!0),de.setPolygonOffset(!1)}function tn(I,q,J){const Y=Ve.isWebGL2;oe===null&&(oe=new Gt(1,1,{generateMipmaps:!0,type:Q.convert(Gi)!==null?Gi:fi,minFilter:nr,samples:Y&&s===!0?4:0})),m.getDrawingBufferSize(ae),Y?oe.setSize(ae.x,ae.y):oe.setSize(Yo(ae.x),Yo(ae.y));const re=m.getRenderTarget();m.setRenderTarget(oe),m.clear();const Be=m.toneMapping;m.toneMapping=En,Kn(I,q,J),m.toneMapping=Be,ne.updateMultisampleRenderTarget(oe),ne.updateRenderTargetMipmap(oe),m.setRenderTarget(re)}function Kn(I,q,J){const Y=q.isScene===!0?q.overrideMaterial:null;for(let re=0,Be=I.length;re<Be;re++){const ze=I[re],Ye=ze.object,Ue=ze.geometry,it=Y===null?ze.material:Y,Ze=ze.group;Ye.layers.test(J.layers)&&Vs(Ye,q,J,Ue,it,Ze)}}function Vs(I,q,J,Y,re,Be){I.onBeforeRender(m,q,J,Y,re,Be),I.modelViewMatrix.multiplyMatrices(J.matrixWorldInverse,I.matrixWorld),I.normalMatrix.getNormalMatrix(I.modelViewMatrix),re.onBeforeRender(m,q,J,Y,I,Be),re.transparent===!0&&re.side===Yi?(re.side=jt,re.needsUpdate=!0,m.renderBufferDirect(J,q,Y,re,I,Be),re.side=qi,re.needsUpdate=!0,m.renderBufferDirect(J,q,Y,re,I,Be),re.side=Yi):m.renderBufferDirect(J,q,Y,re,I,Be),I.onAfterRender(m,q,J,Y,re,Be)}function wi(I,q,J){q.isScene!==!0&&(q=ke);const Y=te.get(I),re=d.state.lights,Be=d.state.shadowsArray,ze=re.state.version,Ye=De.getParameters(I,re.state,Be,q,J),Ue=De.getProgramCacheKey(Ye);let it=Y.programs;Y.environment=I.isMeshStandardMaterial?q.environment:null,Y.fog=q.fog,Y.envMap=(I.isMeshStandardMaterial?be:he).get(I.envMap||Y.environment),it===void 0&&(I.addEventListener("dispose",pe),it=new Map,Y.programs=it);let Ze=it.get(Ue);if(Ze!==void 0){if(Y.currentProgram===Ze&&Y.lightsStateVersion===ze)return Pn(I,Ye),Ze}else Ye.uniforms=De.getUniforms(I),I.onBuild(J,Ye,m),I.onBeforeCompile(Ye,m),Ze=De.acquireProgram(Ye,Ue),it.set(Ue,Ze),Y.uniforms=Ye.uniforms;const je=Y.uniforms;(!I.isShaderMaterial&&!I.isRawShaderMaterial||I.clipping===!0)&&(je.clippingPlanes=L.uniform),Pn(I,Ye),Y.needsLights=bi(I),Y.lightsStateVersion=ze,Y.needsLights&&(je.ambientLightColor.value=re.state.ambient,je.lightProbe.value=re.state.probe,je.directionalLights.value=re.state.directional,je.directionalLightShadows.value=re.state.directionalShadow,je.spotLights.value=re.state.spot,je.spotLightShadows.value=re.state.spotShadow,je.rectAreaLights.value=re.state.rectArea,je.ltc_1.value=re.state.rectAreaLTC1,je.ltc_2.value=re.state.rectAreaLTC2,je.pointLights.value=re.state.point,je.pointLightShadows.value=re.state.pointShadow,je.hemisphereLights.value=re.state.hemi,je.directionalShadowMap.value=re.state.directionalShadowMap,je.directionalShadowMatrix.value=re.state.directionalShadowMatrix,je.spotShadowMap.value=re.state.spotShadowMap,je.spotShadowMatrix.value=re.state.spotShadowMatrix,je.pointShadowMap.value=re.state.pointShadowMap,je.pointShadowMatrix.value=re.state.pointShadowMatrix);const ot=Ze.getUniforms(),Dn=hi.seqWithValue(ot.seq,je);return Y.currentProgram=Ze,Y.uniformsList=Dn,Ze}function Pn(I,q){const J=te.get(I);J.outputEncoding=q.outputEncoding,J.instancing=q.instancing,J.skinning=q.skinning,J.morphTargets=q.morphTargets,J.morphNormals=q.morphNormals,J.morphColors=q.morphColors,J.morphTargetsCount=q.morphTargetsCount,J.numClippingPlanes=q.numClippingPlanes,J.numIntersection=q.numClipIntersection,J.vertexAlphas=q.vertexAlphas,J.vertexTangents=q.vertexTangents,J.toneMapping=q.toneMapping}function In(I,q,J,Y,re){q.isScene!==!0&&(q=ke),ne.resetTextureUnits();const Be=q.fog,ze=Y.isMeshStandardMaterial?q.environment:null,Ye=A===null?m.outputEncoding:A.isXRRenderTarget===!0?A.texture.encoding:An,Ue=(Y.isMeshStandardMaterial?be:he).get(Y.envMap||ze),it=Y.vertexColors===!0&&!!J.attributes.color&&J.attributes.color.itemSize===4,Ze=!!Y.normalMap&&!!J.attributes.tangent,je=!!J.morphAttributes.position,ot=!!J.morphAttributes.normal,Dn=!!J.morphAttributes.color,xn=Y.toneMapped?m.toneMapping:En,jn=J.morphAttributes.position||J.morphAttributes.normal||J.morphAttributes.color,nn=jn!==void 0?jn.length:0,Qe=te.get(Y),Fn=d.state.lights;if(V===!0&&(ie===!0||I!==C)){const Bt=I===C&&Y.id===S;L.setState(Y,I,Bt)}let ct=!1;Y.version===Qe.__version?(Qe.needsLights&&Qe.lightsStateVersion!==Fn.state.version||Qe.outputEncoding!==Ye||re.isInstancedMesh&&Qe.instancing===!1||!re.isInstancedMesh&&Qe.instancing===!0||re.isSkinnedMesh&&Qe.skinning===!1||!re.isSkinnedMesh&&Qe.skinning===!0||Qe.envMap!==Ue||Y.fog&&Qe.fog!==Be||Qe.numClippingPlanes!==void 0&&(Qe.numClippingPlanes!==L.numPlanes||Qe.numIntersection!==L.numIntersection)||Qe.vertexAlphas!==it||Qe.vertexTangents!==Ze||Qe.morphTargets!==je||Qe.morphNormals!==ot||Qe.morphColors!==Dn||Qe.toneMapping!==xn||Ve.isWebGL2===!0&&Qe.morphTargetsCount!==nn)&&(ct=!0):(ct=!0,Qe.__version=Y.version);let rn=Qe.currentProgram;ct===!0&&(rn=wi(Y,q,re));let sn=!1,Mn=!1,On=!1;const wt=rn.getUniforms(),Nn=Qe.uniforms;if(de.useProgram(rn.program)&&(sn=!0,Mn=!0,On=!0),Y.id!==S&&(S=Y.id,Mn=!0),sn||C!==I){if(wt.setValue(W,"projectionMatrix",I.projectionMatrix),Ve.logarithmicDepthBuffer&&wt.setValue(W,"logDepthBufFC",2/(Math.log(I.far+1)/Math.LN2)),C!==I&&(C=I,Mn=!0,On=!0),Y.isShaderMaterial||Y.isMeshPhongMaterial||Y.isMeshToonMaterial||Y.isMeshStandardMaterial||Y.envMap){const Bt=wt.map.cameraPosition;Bt!==void 0&&Bt.setValue(W,Le.setFromMatrixPosition(I.matrixWorld))}(Y.isMeshPhongMaterial||Y.isMeshToonMaterial||Y.isMeshLambertMaterial||Y.isMeshBasicMaterial||Y.isMeshStandardMaterial||Y.isShaderMaterial)&&wt.setValue(W,"isOrthographic",I.isOrthographicCamera===!0),(Y.isMeshPhongMaterial||Y.isMeshToonMaterial||Y.isMeshLambertMaterial||Y.isMeshBasicMaterial||Y.isMeshStandardMaterial||Y.isShaderMaterial||Y.isShadowMaterial||re.isSkinnedMesh)&&wt.setValue(W,"viewMatrix",I.matrixWorldInverse)}if(re.isSkinnedMesh){wt.setOptional(W,re,"bindMatrix"),wt.setOptional(W,re,"bindMatrixInverse");const Bt=re.skeleton;Bt&&(Ve.floatVertexTextures?(Bt.boneTexture===null&&Bt.computeBoneTexture(),wt.setValue(W,"boneTexture",Bt.boneTexture,ne),wt.setValue(W,"boneTextureSize",Bt.boneTextureSize)):wt.setOptional(W,Bt,"boneMatrices"))}const Ei=J.morphAttributes;return(Ei.position!==void 0||Ei.normal!==void 0||Ei.color!==void 0&&Ve.isWebGL2===!0)&&ye.update(re,J,Y,rn),(Mn||Qe.receiveShadow!==re.receiveShadow)&&(Qe.receiveShadow=re.receiveShadow,wt.setValue(W,"receiveShadow",re.receiveShadow)),Mn&&(wt.setValue(W,"toneMappingExposure",m.toneMappingExposure),Qe.needsLights&&Ws(Nn,On),Be&&Y.fog&&ht.refreshFogUniforms(Nn,Be),ht.refreshMaterialUniforms(Nn,Y,R,G,oe),hi.upload(W,Qe.uniformsList,Nn,ne)),Y.isShaderMaterial&&Y.uniformsNeedUpdate===!0&&(hi.upload(W,Qe.uniformsList,Nn,ne),Y.uniformsNeedUpdate=!1),Y.isSpriteMaterial&&wt.setValue(W,"center",re.center),wt.setValue(W,"modelViewMatrix",re.modelViewMatrix),wt.setValue(W,"normalMatrix",re.normalMatrix),wt.setValue(W,"modelMatrix",re.matrixWorld),rn}function Ws(I,q){I.ambientLightColor.needsUpdate=q,I.lightProbe.needsUpdate=q,I.directionalLights.needsUpdate=q,I.directionalLightShadows.needsUpdate=q,I.pointLights.needsUpdate=q,I.pointLightShadows.needsUpdate=q,I.spotLights.needsUpdate=q,I.spotLightShadows.needsUpdate=q,I.rectAreaLights.needsUpdate=q,I.hemisphereLights.needsUpdate=q}function bi(I){return I.isMeshLambertMaterial||I.isMeshToonMaterial||I.isMeshPhongMaterial||I.isMeshStandardMaterial||I.isShadowMaterial||I.isShaderMaterial&&I.lights===!0}this.getActiveCubeFace=function(){return b},this.getActiveMipmapLevel=function(){return E},this.getRenderTarget=function(){return A},this.setRenderTargetTextures=function(I,q,J){te.get(I.texture).__webglTexture=q,te.get(I.depthTexture).__webglTexture=J;const Y=te.get(I);Y.__hasExternalTextures=!0,Y.__hasExternalTextures&&(Y.__autoAllocateDepthBuffer=J===void 0,Y.__autoAllocateDepthBuffer||He.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),Y.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(I,q){const J=te.get(I);J.__webglFramebuffer=q,J.__useDefaultFramebuffer=q===void 0},this.setRenderTarget=function(I,q=0,J=0){A=I,b=q,E=J;let Y=!0;if(I){const Ue=te.get(I);Ue.__useDefaultFramebuffer!==void 0?(de.bindFramebuffer(W.FRAMEBUFFER,null),Y=!1):Ue.__webglFramebuffer===void 0?ne.setupRenderTarget(I):Ue.__hasExternalTextures&&ne.rebindTextures(I,te.get(I.texture).__webglTexture,te.get(I.depthTexture).__webglTexture)}let re=null,Be=!1,ze=!1;if(I){const Ue=I.texture;(Ue.isData3DTexture||Ue.isDataArrayTexture)&&(ze=!0);const it=te.get(I).__webglFramebuffer;I.isWebGLCubeRenderTarget?(re=it[q],Be=!0):Ve.isWebGL2&&I.samples>0&&ne.useMultisampledRTT(I)===!1?re=te.get(I).__webglMultisampledFramebuffer:re=it,N.copy(I.viewport),U.copy(I.scissor),D=I.scissorTest}else N.copy(X).multiplyScalar(R).floor(),U.copy(k).multiplyScalar(R).floor(),D=Z;if(de.bindFramebuffer(W.FRAMEBUFFER,re)&&Ve.drawBuffers&&Y&&de.drawBuffers(I,re),de.viewport(N),de.scissor(U),de.setScissorTest(D),Be){const Ue=te.get(I.texture);W.framebufferTexture2D(W.FRAMEBUFFER,W.COLOR_ATTACHMENT0,W.TEXTURE_CUBE_MAP_POSITIVE_X+q,Ue.__webglTexture,J)}else if(ze){const Ue=te.get(I.texture),it=q||0;W.framebufferTextureLayer(W.FRAMEBUFFER,W.COLOR_ATTACHMENT0,Ue.__webglTexture,J||0,it)}S=-1},this.readRenderTargetPixels=function(I,q,J,Y,re,Be,ze){if(!(I&&I.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Ye=te.get(I).__webglFramebuffer;if(I.isWebGLCubeRenderTarget&&ze!==void 0&&(Ye=Ye[ze]),Ye){de.bindFramebuffer(W.FRAMEBUFFER,Ye);try{const Ue=I.texture,it=Ue.format,Ze=Ue.type;if(it!==Kt&&Q.convert(it)!==W.getParameter(W.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const je=Ze===Gi&&(He.has("EXT_color_buffer_half_float")||Ve.isWebGL2&&He.has("EXT_color_buffer_float"));if(Ze!==fi&&Q.convert(Ze)!==W.getParameter(W.IMPLEMENTATION_COLOR_READ_TYPE)&&!(Ze===Wn&&(Ve.isWebGL2||He.has("OES_texture_float")||He.has("WEBGL_color_buffer_float")))&&!je){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}q>=0&&q<=I.width-Y&&J>=0&&J<=I.height-re&&W.readPixels(q,J,Y,re,Q.convert(it),Q.convert(Ze),Be)}finally{const Ue=A!==null?te.get(A).__webglFramebuffer:null;de.bindFramebuffer(W.FRAMEBUFFER,Ue)}}},this.copyFramebufferToTexture=function(I,q,J=0){if(q.isFramebufferTexture!==!0){console.error("THREE.WebGLRenderer: copyFramebufferToTexture() can only be used with FramebufferTexture.");return}const Y=Math.pow(2,-J),re=Math.floor(q.image.width*Y),Be=Math.floor(q.image.height*Y);ne.setTexture2D(q,0),W.copyTexSubImage2D(W.TEXTURE_2D,J,0,0,I.x,I.y,re,Be),de.unbindTexture()},this.copyTextureToTexture=function(I,q,J,Y=0){const re=q.image.width,Be=q.image.height,ze=Q.convert(J.format),Ye=Q.convert(J.type);ne.setTexture2D(J,0),W.pixelStorei(W.UNPACK_FLIP_Y_WEBGL,J.flipY),W.pixelStorei(W.UNPACK_PREMULTIPLY_ALPHA_WEBGL,J.premultiplyAlpha),W.pixelStorei(W.UNPACK_ALIGNMENT,J.unpackAlignment),q.isDataTexture?W.texSubImage2D(W.TEXTURE_2D,Y,I.x,I.y,re,Be,ze,Ye,q.image.data):q.isCompressedTexture?W.compressedTexSubImage2D(W.TEXTURE_2D,Y,I.x,I.y,q.mipmaps[0].width,q.mipmaps[0].height,ze,q.mipmaps[0].data):W.texSubImage2D(W.TEXTURE_2D,Y,I.x,I.y,ze,Ye,q.image),Y===0&&J.generateMipmaps&&W.generateMipmap(W.TEXTURE_2D),de.unbindTexture()},this.copyTextureToTexture3D=function(I,q,J,Y,re=0){if(m.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const Be=I.max.x-I.min.x+1,ze=I.max.y-I.min.y+1,Ye=I.max.z-I.min.z+1,Ue=Q.convert(Y.format),it=Q.convert(Y.type);let Ze;if(Y.isData3DTexture)ne.setTexture3D(Y,0),Ze=W.TEXTURE_3D;else if(Y.isDataArrayTexture)ne.setTexture2DArray(Y,0),Ze=W.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}W.pixelStorei(W.UNPACK_FLIP_Y_WEBGL,Y.flipY),W.pixelStorei(W.UNPACK_PREMULTIPLY_ALPHA_WEBGL,Y.premultiplyAlpha),W.pixelStorei(W.UNPACK_ALIGNMENT,Y.unpackAlignment);const je=W.getParameter(W.UNPACK_ROW_LENGTH),ot=W.getParameter(W.UNPACK_IMAGE_HEIGHT),Dn=W.getParameter(W.UNPACK_SKIP_PIXELS),xn=W.getParameter(W.UNPACK_SKIP_ROWS),jn=W.getParameter(W.UNPACK_SKIP_IMAGES),nn=J.isCompressedTexture?J.mipmaps[0]:J.image;W.pixelStorei(W.UNPACK_ROW_LENGTH,nn.width),W.pixelStorei(W.UNPACK_IMAGE_HEIGHT,nn.height),W.pixelStorei(W.UNPACK_SKIP_PIXELS,I.min.x),W.pixelStorei(W.UNPACK_SKIP_ROWS,I.min.y),W.pixelStorei(W.UNPACK_SKIP_IMAGES,I.min.z),J.isDataTexture||J.isData3DTexture?W.texSubImage3D(Ze,re,q.x,q.y,q.z,Be,ze,Ye,Ue,it,nn.data):J.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),W.compressedTexSubImage3D(Ze,re,q.x,q.y,q.z,Be,ze,Ye,Ue,nn.data)):W.texSubImage3D(Ze,re,q.x,q.y,q.z,Be,ze,Ye,Ue,it,nn),W.pixelStorei(W.UNPACK_ROW_LENGTH,je),W.pixelStorei(W.UNPACK_IMAGE_HEIGHT,ot),W.pixelStorei(W.UNPACK_SKIP_PIXELS,Dn),W.pixelStorei(W.UNPACK_SKIP_ROWS,xn),W.pixelStorei(W.UNPACK_SKIP_IMAGES,jn),re===0&&Y.generateMipmaps&&W.generateMipmap(Ze),de.unbindTexture()},this.initTexture=function(I){ne.setTexture2D(I,0),de.unbindTexture()},this.resetState=function(){b=0,E=0,A=null,de.reset(),Re.reset()},typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}at.prototype.isWebGLRenderer=!0;class Id extends at{}Id.prototype.isWebGL1Renderer=!0;class Us{constructor(e,t=25e-5){this.name="",this.color=new xe(e),this.density=t}clone(){return new Us(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}Us.prototype.isFogExp2=!0;class Bs{constructor(e,t=1,n=1e3){this.name="",this.color=new xe(e),this.near=t,this.far=n}clone(){return new Bs(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}Bs.prototype.isFog=!0;class oa extends $e{constructor(){super();this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),t}}oa.prototype.isScene=!0;class rr{constructor(e,t){this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=Pr,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=$t()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,s=this.stride;i<s;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=$t()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=$t()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}rr.prototype.isInterleavedBuffer=!0;const Ht=new P;class pi{constructor(e,t,n,i=!1){this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i===!0}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)Ht.fromBufferAttribute(this,t),Ht.applyMatrix4(e),this.setXYZ(t,Ht.x,Ht.y,Ht.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Ht.fromBufferAttribute(this,t),Ht.applyNormalMatrix(e),this.setXYZ(t,Ht.x,Ht.y,Ht.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Ht.fromBufferAttribute(this,t),Ht.transformDirection(e),this.setXYZ(t,Ht.x,Ht.y,Ht.z);return this}setX(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){return this.data.array[e*this.data.stride+this.offset]}getY(e){return this.data.array[e*this.data.stride+this.offset+1]}getZ(e){return this.data.array[e*this.data.stride+this.offset+2]}getW(e){return this.data.array[e*this.data.stride+this.offset+3]}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=s,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return new et(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new pi(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}pi.prototype.isInterleavedBufferAttribute=!0;class aa extends Mt{constructor(e){super();this.type="SpriteMaterial",this.color=new xe(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this}}aa.prototype.isSpriteMaterial=!0;let wr;const os=new P,br=new P,Er=new P,Tr=new se,as=new se,Dd=new Se,mo=new P,ls=new P,go=new P,vh=new se,ja=new se,_h=new se;class la extends $e{constructor(e){super();if(this.type="Sprite",wr===void 0){wr=new Oe;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new rr(t,5);wr.setIndex([0,1,2,0,2,3]),wr.setAttribute("position",new pi(n,3,0,!1)),wr.setAttribute("uv",new pi(n,2,3,!1))}this.geometry=wr,this.material=e!==void 0?e:new aa,this.center=new se(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),br.setFromMatrixScale(this.matrixWorld),Dd.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),Er.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&br.multiplyScalar(-Er.z);const n=this.material.rotation;let i,s;n!==0&&(s=Math.cos(n),i=Math.sin(n));const o=this.center;vo(mo.set(-.5,-.5,0),Er,o,br,i,s),vo(ls.set(.5,-.5,0),Er,o,br,i,s),vo(go.set(.5,.5,0),Er,o,br,i,s),vh.set(0,0),ja.set(1,0),_h.set(1,1);let a=e.ray.intersectTriangle(mo,ls,go,!1,os);if(a===null&&(vo(ls.set(-.5,.5,0),Er,o,br,i,s),ja.set(0,1),a=e.ray.intersectTriangle(mo,go,ls,!1,os),a===null))return;const c=e.ray.origin.distanceTo(os);c<e.near||c>e.far||t.push({distance:c,point:os.clone(),uv:xt.getUV(os,mo,ls,go,vh,ja,_h,new se),face:null,object:this})}copy(e){return super.copy(e),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}la.prototype.isSprite=!0;function vo(r,e,t,n,i,s){Tr.subVectors(r,t).addScalar(.5).multiply(n),i!==void 0?(as.x=s*Tr.x-i*Tr.y,as.y=i*Tr.x+s*Tr.y):as.copy(Tr),r.copy(e),r.x+=as.x,r.y+=as.y,r.applyMatrix4(Dd)}const _o=new P,yh=new P;class Fd extends $e{constructor(){super();this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let n=0,i=t.length;n<i;n++){const s=t[n];this.addLevel(s.object.clone(),s.distance)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0){t=Math.abs(t);const n=this.levels;let i;for(i=0;i<n.length&&!(t<n[i].distance);i++);return n.splice(i,0,{distance:t,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i&&!(e<t[n].distance);n++);return t[n-1].object}return null}raycast(e,t){if(this.levels.length>0){_o.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo(_o);this.getObjectForDistance(i).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){_o.setFromMatrixPosition(e.matrixWorld),yh.setFromMatrixPosition(this.matrixWorld);const n=_o.distanceTo(yh)/e.zoom;t[0].object.visible=!0;let i,s;for(i=1,s=t.length;i<s&&n>=t[i].distance;i++)t[i-1].object.visible=!1,t[i].object.visible=!0;for(this._currentLevel=i-1;i<s;i++)t[i].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let i=0,s=n.length;i<s;i++){const o=n[i];t.object.levels.push({object:o.object.uuid,distance:o.distance})}return t}}const xh=new P,Mh=new st,wh=new st,g0=new P,bh=new Se;class ca extends St{constructor(e,t){super(e,t);this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Se,this.bindMatrixInverse=new Se}copy(e){return super.copy(e),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new st,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);const s=1/e.manhattanLength();s!==1/0?e.multiplyScalar(s):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode==="attached"?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode==="detached"?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(e,t){const n=this.skeleton,i=this.geometry;Mh.fromBufferAttribute(i.attributes.skinIndex,e),wh.fromBufferAttribute(i.attributes.skinWeight,e),xh.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let s=0;s<4;s++){const o=wh.getComponent(s);if(o!==0){const a=Mh.getComponent(s);bh.multiplyMatrices(n.bones[a].matrixWorld,n.boneInverses[a]),t.addScaledVector(g0.copy(xh).applyMatrix4(bh),o)}}return t.applyMatrix4(this.bindMatrixInverse)}}ca.prototype.isSkinnedMesh=!0;class ha extends $e{constructor(){super();this.type="Bone"}}ha.prototype.isBone=!0;class Xi extends At{constructor(e=null,t=1,n=1,i,s,o,a,c,h=Tt,u=Tt,f,d){super(null,o,a,c,h,u,i,s,f,d);this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}Xi.prototype.isDataTexture=!0;const Eh=new Se,v0=new Se;class ua{constructor(e=[],t=[]){this.uuid=$t(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new Se)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new Se;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let s=0,o=e.length;s<o;s++){const a=e[s]?e[s].matrixWorld:v0;Eh.multiplyMatrices(a,t[s]),Eh.toArray(n,s*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new ua(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=ad(e),e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new Xi(t,e,e,Kt,Wn);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this.boneTextureSize=e,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const i=this.bones[t];if(i.name===e)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){const s=e.bones[n];let o=t[s];o===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",s),o=new ha),this.bones.push(o),this.boneInverses.push(new Se().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let i=0,s=t.length;i<s;i++){const o=t[i];e.bones.push(o.uuid);const a=n[i];e.boneInverses.push(a.toArray())}return e}}class Ki extends et{constructor(e,t,n,i=1){typeof n=="number"&&(i=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument."));super(e,t,n);this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}Ki.prototype.isInstancedBufferAttribute=!0;const Th=new Se,Sh=new Se,yo=[],cs=new St;class $l extends St{constructor(e,t,n){super(e,t);this.instanceMatrix=new Ki(new Float32Array(n*16),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}copy(e){return super.copy(e),this.instanceMatrix.copy(e.instanceMatrix),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}raycast(e,t){const n=this.matrixWorld,i=this.count;if(cs.geometry=this.geometry,cs.material=this.material,cs.material!==void 0)for(let s=0;s<i;s++){this.getMatrixAt(s,Th),Sh.multiplyMatrices(n,Th),cs.matrixWorld=Sh,cs.raycast(e,yo);for(let o=0,a=yo.length;o<a;o++){const c=yo[o];c.instanceId=s,c.object=this,t.push(c)}yo.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new Ki(new Float32Array(this.instanceMatrix.count*3),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}$l.prototype.isInstancedMesh=!0;class Dt extends Mt{constructor(e){super();this.type="LineBasicMaterial",this.color=new xe(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this}}Dt.prototype.isLineBasicMaterial=!0;const Ah=new P,Rh=new P,Ch=new Se,$a=new xi,xo=new yi;class Yn extends $e{constructor(e=new Oe,t=new Dt){super();this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry)if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,s=t.count;i<s;i++)Ah.fromBufferAttribute(t,i-1),Rh.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=Ah.distanceTo(Rh);e.setAttribute("lineDistance",new Te(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Line.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),xo.copy(n.boundingSphere),xo.applyMatrix4(i),xo.radius+=s,e.ray.intersectsSphere(xo)===!1)return;Ch.copy(i).invert(),$a.copy(e.ray).applyMatrix4(Ch);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),c=a*a,h=new P,u=new P,f=new P,d=new P,p=this.isLineSegments?2:1;if(n.isBufferGeometry){const v=n.index,g=n.attributes.position;if(v!==null){const b=Math.max(0,o.start),E=Math.min(v.count,o.start+o.count);for(let A=b,S=E-1;A<S;A+=p){const C=v.getX(A),N=v.getX(A+1);if(h.fromBufferAttribute(g,C),u.fromBufferAttribute(g,N),$a.distanceSqToSegment(h,u,d,f)>c)continue;d.applyMatrix4(this.matrixWorld);const D=e.ray.origin.distanceTo(d);D<e.near||D>e.far||t.push({distance:D,point:f.clone().applyMatrix4(this.matrixWorld),index:A,face:null,faceIndex:null,object:this})}}else{const b=Math.max(0,o.start),E=Math.min(g.count,o.start+o.count);for(let A=b,S=E-1;A<S;A+=p){if(h.fromBufferAttribute(g,A),u.fromBufferAttribute(g,A+1),$a.distanceSqToSegment(h,u,d,f)>c)continue;d.applyMatrix4(this.matrixWorld);const N=e.ray.origin.distanceTo(d);N<e.near||N>e.far||t.push({distance:N,point:f.clone().applyMatrix4(this.matrixWorld),index:A,face:null,faceIndex:null,object:this})}}}else n.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=i.length;s<o;s++){const a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}else{const t=e.morphTargets;t!==void 0&&t.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}Yn.prototype.isLine=!0;const Lh=new P,Ph=new P;class qt extends Yn{constructor(e,t){super(e,t);this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry)if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,s=t.count;i<s;i+=2)Lh.fromBufferAttribute(t,i),Ph.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+Lh.distanceTo(Ph);e.setAttribute("lineDistance",new Te(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}}qt.prototype.isLineSegments=!0;class Ql extends Yn{constructor(e,t){super(e,t);this.type="LineLoop"}}Ql.prototype.isLineLoop=!0;class sr extends Mt{constructor(e){super();this.type="PointsMaterial",this.color=new xe(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this}}sr.prototype.isPointsMaterial=!0;const Ih=new Se,Ul=new xi,Mo=new yi,wo=new P;class Hs extends $e{constructor(e=new Oe,t=new sr){super();this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Points.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Mo.copy(n.boundingSphere),Mo.applyMatrix4(i),Mo.radius+=s,e.ray.intersectsSphere(Mo)===!1)return;Ih.copy(i).invert(),Ul.copy(e.ray).applyMatrix4(Ih);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),c=a*a;if(n.isBufferGeometry){const h=n.index,f=n.attributes.position;if(h!==null){const d=Math.max(0,o.start),p=Math.min(h.count,o.start+o.count);for(let v=d,m=p;v<m;v++){const g=h.getX(v);wo.fromBufferAttribute(f,g),Dh(wo,g,c,i,e,t,this)}}else{const d=Math.max(0,o.start),p=Math.min(f.count,o.start+o.count);for(let v=d,m=p;v<m;v++)wo.fromBufferAttribute(f,v),Dh(wo,v,c,i,e,t,this)}}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=i.length;s<o;s++){const a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}else{const t=e.morphTargets;t!==void 0&&t.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}Hs.prototype.isPoints=!0;function Dh(r,e,t,n,i,s,o){const a=Ul.distanceSqToPoint(r);if(a<t){const c=new P;Ul.closestPointToPoint(r,c),c.applyMatrix4(n);const h=i.ray.origin.distanceTo(c);if(h<i.near||h>i.far)return;s.push({distance:h,distanceToRay:Math.sqrt(a),point:c,index:e,face:null,object:o})}}class Od extends At{constructor(e,t,n,i,s,o,a,c,h){super(e,t,n,i,s,o,a,c,h);this.minFilter=o!==void 0?o:_t,this.magFilter=s!==void 0?s:_t,this.generateMipmaps=!1;const u=this;function f(){u.needsUpdate=!0,e.requestVideoFrameCallback(f)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(f)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}Od.prototype.isVideoTexture=!0;class Nd extends At{constructor(e,t,n){super({width:e,height:t});this.format=n,this.magFilter=Tt,this.minFilter=Tt,this.generateMipmaps=!1,this.needsUpdate=!0}}Nd.prototype.isFramebufferTexture=!0;class ec extends At{constructor(e,t,n,i,s,o,a,c,h,u,f,d){super(null,o,a,c,h,u,i,s,f,d);this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}ec.prototype.isCompressedTexture=!0;class Ud extends At{constructor(e,t,n,i,s,o,a,c,h){super(e,t,n,i,s,o,a,c,h);this.needsUpdate=!0}}Ud.prototype.isCanvasTexture=!0;class Qt{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),s=0;t.push(0);for(let o=1;o<=e;o++)n=this.getPoint(o/e),s+=n.distanceTo(i),t.push(s),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let i=0;const s=n.length;let o;t?o=t:o=e*n[s-1];let a=0,c=s-1,h;for(;a<=c;)if(i=Math.floor(a+(c-a)/2),h=n[i]-o,h<0)a=i+1;else if(h>0)c=i-1;else{c=i;break}if(i=c,n[i]===o)return i/(s-1);const u=n[i],d=n[i+1]-u,p=(o-u)/d;return(i+p)/(s-1)}getTangent(e,t){let i=e-1e-4,s=e+1e-4;i<0&&(i=0),s>1&&(s=1);const o=this.getPoint(i),a=this.getPoint(s),c=t||(o.isVector2?new se:new P);return c.copy(a).sub(o).normalize(),c}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new P,i=[],s=[],o=[],a=new P,c=new Se;for(let p=0;p<=e;p++){const v=p/e;i[p]=this.getTangentAt(v,new P)}s[0]=new P,o[0]=new P;let h=Number.MAX_VALUE;const u=Math.abs(i[0].x),f=Math.abs(i[0].y),d=Math.abs(i[0].z);u<=h&&(h=u,n.set(1,0,0)),f<=h&&(h=f,n.set(0,1,0)),d<=h&&n.set(0,0,1),a.crossVectors(i[0],n).normalize(),s[0].crossVectors(i[0],a),o[0].crossVectors(i[0],s[0]);for(let p=1;p<=e;p++){if(s[p]=s[p-1].clone(),o[p]=o[p-1].clone(),a.crossVectors(i[p-1],i[p]),a.length()>Number.EPSILON){a.normalize();const v=Math.acos(yt(i[p-1].dot(i[p]),-1,1));s[p].applyMatrix4(c.makeRotationAxis(a,v))}o[p].crossVectors(i[p],s[p])}if(t===!0){let p=Math.acos(yt(s[0].dot(s[e]),-1,1));p/=e,i[0].dot(a.crossVectors(s[0],s[e]))>0&&(p=-p);for(let v=1;v<=e;v++)s[v].applyMatrix4(c.makeRotationAxis(i[v],p*v)),o[v].crossVectors(i[v],s[v])}return{tangents:i,normals:s,binormals:o}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class zs extends Qt{constructor(e=0,t=0,n=1,i=1,s=0,o=Math.PI*2,a=!1,c=0){super();this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=s,this.aEndAngle=o,this.aClockwise=a,this.aRotation=c}getPoint(e,t){const n=t||new se,i=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const o=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=i;for(;s>i;)s-=i;s<Number.EPSILON&&(o?s=0:s=i),this.aClockwise===!0&&!o&&(s===i?s=-i:s=s-i);const a=this.aStartAngle+e*s;let c=this.aX+this.xRadius*Math.cos(a),h=this.aY+this.yRadius*Math.sin(a);if(this.aRotation!==0){const u=Math.cos(this.aRotation),f=Math.sin(this.aRotation),d=c-this.aX,p=h-this.aY;c=d*u-p*f+this.aX,h=d*f+p*u+this.aY}return n.set(c,h)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}zs.prototype.isEllipseCurve=!0;class tc extends zs{constructor(e,t,n,i,s,o){super(e,t,n,n,i,s,o);this.type="ArcCurve"}}tc.prototype.isArcCurve=!0;function nc(){let r=0,e=0,t=0,n=0;function i(s,o,a,c){r=s,e=a,t=-3*s+3*o-2*a-c,n=2*s-2*o+a+c}return{initCatmullRom:function(s,o,a,c,h){i(o,a,h*(a-s),h*(c-o))},initNonuniformCatmullRom:function(s,o,a,c,h,u,f){let d=(o-s)/h-(a-s)/(h+u)+(a-o)/u,p=(a-o)/u-(c-o)/(u+f)+(c-a)/f;d*=u,p*=u,i(o,a,d,p)},calc:function(s){const o=s*s,a=o*s;return r+e*s+t*o+n*a}}}const bo=new P,Qa=new nc,el=new nc,tl=new nc;class ic extends Qt{constructor(e=[],t=!1,n="centripetal",i=.5){super();this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new P){const n=t,i=this.points,s=i.length,o=(s-(this.closed?0:1))*e;let a=Math.floor(o),c=o-a;this.closed?a+=a>0?0:(Math.floor(Math.abs(a)/s)+1)*s:c===0&&a===s-1&&(a=s-2,c=1);let h,u;this.closed||a>0?h=i[(a-1)%s]:(bo.subVectors(i[0],i[1]).add(i[0]),h=bo);const f=i[a%s],d=i[(a+1)%s];if(this.closed||a+2<s?u=i[(a+2)%s]:(bo.subVectors(i[s-1],i[s-2]).add(i[s-1]),u=bo),this.curveType==="centripetal"||this.curveType==="chordal"){const p=this.curveType==="chordal"?.5:.25;let v=Math.pow(h.distanceToSquared(f),p),m=Math.pow(f.distanceToSquared(d),p),g=Math.pow(d.distanceToSquared(u),p);m<1e-4&&(m=1),v<1e-4&&(v=m),g<1e-4&&(g=m),Qa.initNonuniformCatmullRom(h.x,f.x,d.x,u.x,v,m,g),el.initNonuniformCatmullRom(h.y,f.y,d.y,u.y,v,m,g),tl.initNonuniformCatmullRom(h.z,f.z,d.z,u.z,v,m,g)}else this.curveType==="catmullrom"&&(Qa.initCatmullRom(h.x,f.x,d.x,u.x,this.tension),el.initCatmullRom(h.y,f.y,d.y,u.y,this.tension),tl.initCatmullRom(h.z,f.z,d.z,u.z,this.tension));return n.set(Qa.calc(c),el.calc(c),tl.calc(c)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new P().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}ic.prototype.isCatmullRomCurve3=!0;function Fh(r,e,t,n,i){const s=(n-e)*.5,o=(i-t)*.5,a=r*r,c=r*a;return(2*t-2*n+s+o)*c+(-3*t+3*n-2*s-o)*a+s*r+t}function _0(r,e){const t=1-r;return t*t*e}function y0(r,e){return 2*(1-r)*r*e}function x0(r,e){return r*r*e}function ps(r,e,t,n){return _0(r,e)+y0(r,t)+x0(r,n)}function M0(r,e){const t=1-r;return t*t*t*e}function w0(r,e){const t=1-r;return 3*t*t*r*e}function b0(r,e){return 3*(1-r)*r*r*e}function E0(r,e){return r*r*r*e}function ms(r,e,t,n,i){return M0(r,e)+w0(r,t)+b0(r,n)+E0(r,i)}class da extends Qt{constructor(e=new se,t=new se,n=new se,i=new se){super();this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new se){const n=t,i=this.v0,s=this.v1,o=this.v2,a=this.v3;return n.set(ms(e,i.x,s.x,o.x,a.x),ms(e,i.y,s.y,o.y,a.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}da.prototype.isCubicBezierCurve=!0;class rc extends Qt{constructor(e=new P,t=new P,n=new P,i=new P){super();this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new P){const n=t,i=this.v0,s=this.v1,o=this.v2,a=this.v3;return n.set(ms(e,i.x,s.x,o.x,a.x),ms(e,i.y,s.y,o.y,a.y),ms(e,i.z,s.z,o.z,a.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}rc.prototype.isCubicBezierCurve3=!0;class Gs extends Qt{constructor(e=new se,t=new se){super();this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new se){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t){const n=t||new se;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}Gs.prototype.isLineCurve=!0;class Bd extends Qt{constructor(e=new P,t=new P){super();this.type="LineCurve3",this.isLineCurve3=!0,this.v1=e,this.v2=t}getPoint(e,t=new P){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class fa extends Qt{constructor(e=new se,t=new se,n=new se){super();this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new se){const n=t,i=this.v0,s=this.v1,o=this.v2;return n.set(ps(e,i.x,s.x,o.x),ps(e,i.y,s.y,o.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}fa.prototype.isQuadraticBezierCurve=!0;class pa extends Qt{constructor(e=new P,t=new P,n=new P){super();this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new P){const n=t,i=this.v0,s=this.v1,o=this.v2;return n.set(ps(e,i.x,s.x,o.x),ps(e,i.y,s.y,o.y),ps(e,i.z,s.z,o.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}pa.prototype.isQuadraticBezierCurve3=!0;class ma extends Qt{constructor(e=[]){super();this.type="SplineCurve",this.points=e}getPoint(e,t=new se){const n=t,i=this.points,s=(i.length-1)*e,o=Math.floor(s),a=s-o,c=i[o===0?o:o-1],h=i[o],u=i[o>i.length-2?i.length-1:o+1],f=i[o>i.length-3?i.length-1:o+2];return n.set(Fh(a,c.x,h.x,u.x,f.x),Fh(a,c.y,h.y,u.y,f.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new se().fromArray(i))}return this}}ma.prototype.isSplineCurve=!0;var sc=Object.freeze({__proto__:null,ArcCurve:tc,CatmullRomCurve3:ic,CubicBezierCurve:da,CubicBezierCurve3:rc,EllipseCurve:zs,LineCurve:Gs,LineCurve3:Bd,QuadraticBezierCurve:fa,QuadraticBezierCurve3:pa,SplineCurve:ma});class Hd extends Qt{constructor(){super();this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new Gs(t,e))}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let s=0;for(;s<i.length;){if(i[s]>=n){const o=i[s]-n,a=this.curves[s],c=a.getLength(),h=c===0?0:1-o/c;return a.getPointAt(h,t)}s++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,s=this.curves;i<s.length;i++){const o=s[i],a=o.isEllipseCurve?e*2:o.isLineCurve||o.isLineCurve3?1:o.isSplineCurve?e*o.points.length:e,c=o.getPoints(a);for(let h=0;h<c.length;h++){const u=c[h];n&&n.equals(u)||(t.push(u),n=u)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new sc[i.type]().fromJSON(i))}return this}}class Fr extends Hd{constructor(e){super();this.type="Path",this.currentPoint=new se,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new Gs(this.currentPoint.clone(),new se(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const s=new fa(this.currentPoint.clone(),new se(e,t),new se(n,i));return this.curves.push(s),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,s,o){const a=new da(this.currentPoint.clone(),new se(e,t),new se(n,i),new se(s,o));return this.curves.push(a),this.currentPoint.set(s,o),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new ma(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,s,o){const a=this.currentPoint.x,c=this.currentPoint.y;return this.absarc(e+a,t+c,n,i,s,o),this}absarc(e,t,n,i,s,o){return this.absellipse(e,t,n,n,i,s,o),this}ellipse(e,t,n,i,s,o,a,c){const h=this.currentPoint.x,u=this.currentPoint.y;return this.absellipse(e+h,t+u,n,i,s,o,a,c),this}absellipse(e,t,n,i,s,o,a,c){const h=new zs(e,t,n,i,s,o,a,c);if(this.curves.length>0){const f=h.getPoint(0);f.equals(this.currentPoint)||this.lineTo(f.x,f.y)}this.curves.push(h);const u=h.getPoint(1);return this.currentPoint.copy(u),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class ji extends Oe{constructor(e=[new se(0,.5),new se(.5,0),new se(0,-.5)],t=12,n=0,i=Math.PI*2){super();this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},t=Math.floor(t),i=yt(i,0,Math.PI*2);const s=[],o=[],a=[],c=[],h=[],u=1/t,f=new P,d=new se,p=new P,v=new P,m=new P;let g=0,b=0;for(let E=0;E<=e.length-1;E++)switch(E){case 0:g=e[E+1].x-e[E].x,b=e[E+1].y-e[E].y,p.x=b*1,p.y=-g,p.z=b*0,m.copy(p),p.normalize(),c.push(p.x,p.y,p.z);break;case e.length-1:c.push(m.x,m.y,m.z);break;default:g=e[E+1].x-e[E].x,b=e[E+1].y-e[E].y,p.x=b*1,p.y=-g,p.z=b*0,v.copy(p),p.x+=m.x,p.y+=m.y,p.z+=m.z,p.normalize(),c.push(p.x,p.y,p.z),m.copy(v)}for(let E=0;E<=t;E++){const A=n+E*u*i,S=Math.sin(A),C=Math.cos(A);for(let N=0;N<=e.length-1;N++){f.x=e[N].x*S,f.y=e[N].y,f.z=e[N].x*C,o.push(f.x,f.y,f.z),d.x=E/t,d.y=N/(e.length-1),a.push(d.x,d.y);const U=c[3*N+0]*S,D=c[3*N+1],K=c[3*N+0]*C;h.push(U,D,K)}}for(let E=0;E<t;E++)for(let A=0;A<e.length-1;A++){const S=A+E*e.length,C=S,N=S+e.length,U=S+e.length+1,D=S+1;s.push(C,N,D),s.push(U,D,N)}this.setIndex(s),this.setAttribute("position",new Te(o,3)),this.setAttribute("uv",new Te(a,2)),this.setAttribute("normal",new Te(h,3))}static fromJSON(e){return new ji(e.points,e.segments,e.phiStart,e.phiLength)}}class Or extends ji{constructor(e=1,t=1,n=4,i=8){const s=new Fr;s.absarc(0,-t/2,e,Math.PI*1.5,0),s.absarc(0,t/2,e,0,Math.PI*.5);super(s.getPoints(n),i);this.type="CapsuleGeometry",this.parameters={radius:e,height:t,capSegments:n,radialSegments:i}}static fromJSON(e){return new Or(e.radius,e.length,e.capSegments,e.radialSegments)}}class Nr extends Oe{constructor(e=1,t=8,n=0,i=Math.PI*2){super();this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},t=Math.max(3,t);const s=[],o=[],a=[],c=[],h=new P,u=new se;o.push(0,0,0),a.push(0,0,1),c.push(.5,.5);for(let f=0,d=3;f<=t;f++,d+=3){const p=n+f/t*i;h.x=e*Math.cos(p),h.y=e*Math.sin(p),o.push(h.x,h.y,h.z),a.push(0,0,1),u.x=(o[d]/e+1)/2,u.y=(o[d+1]/e+1)/2,c.push(u.x,u.y)}for(let f=1;f<=t;f++)s.push(f,f+1,0);this.setIndex(s),this.setAttribute("position",new Te(o,3)),this.setAttribute("normal",new Te(a,3)),this.setAttribute("uv",new Te(c,2))}static fromJSON(e){return new Nr(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class mi extends Oe{constructor(e=1,t=1,n=1,i=8,s=1,o=!1,a=0,c=Math.PI*2){super();this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:s,openEnded:o,thetaStart:a,thetaLength:c};const h=this;i=Math.floor(i),s=Math.floor(s);const u=[],f=[],d=[],p=[];let v=0;const m=[],g=n/2;let b=0;E(),o===!1&&(e>0&&A(!0),t>0&&A(!1)),this.setIndex(u),this.setAttribute("position",new Te(f,3)),this.setAttribute("normal",new Te(d,3)),this.setAttribute("uv",new Te(p,2));function E(){const S=new P,C=new P;let N=0;const U=(t-e)/n;for(let D=0;D<=s;D++){const K=[],G=D/s,R=G*(t-e)+e;for(let H=0;H<=i;H++){const ee=H/i,X=ee*c+a,k=Math.sin(X),Z=Math.cos(X);C.x=R*k,C.y=-G*n+g,C.z=R*Z,f.push(C.x,C.y,C.z),S.set(k,U,Z).normalize(),d.push(S.x,S.y,S.z),p.push(ee,1-G),K.push(v++)}m.push(K)}for(let D=0;D<i;D++)for(let K=0;K<s;K++){const G=m[K][D],R=m[K+1][D],H=m[K+1][D+1],ee=m[K][D+1];u.push(G,R,ee),u.push(R,H,ee),N+=6}h.addGroup(b,N,0),b+=N}function A(S){const C=v,N=new se,U=new P;let D=0;const K=S===!0?e:t,G=S===!0?1:-1;for(let H=1;H<=i;H++)f.push(0,g*G,0),d.push(0,G,0),p.push(.5,.5),v++;const R=v;for(let H=0;H<=i;H++){const X=H/i*c+a,k=Math.cos(X),Z=Math.sin(X);U.x=K*Z,U.y=g*G,U.z=K*k,f.push(U.x,U.y,U.z),d.push(0,G,0),N.x=k*.5+.5,N.y=Z*.5*G+.5,p.push(N.x,N.y),v++}for(let H=0;H<i;H++){const ee=C+H,X=R+H;S===!0?u.push(X,X+1,ee):u.push(X+1,X,ee),D+=3}h.addGroup(b,D,S===!0?1:2),b+=D}}static fromJSON(e){return new mi(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Ur extends mi{constructor(e=1,t=1,n=8,i=1,s=!1,o=0,a=Math.PI*2){super(0,e,t,n,i,s,o,a);this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:s,thetaStart:o,thetaLength:a}}static fromJSON(e){return new Ur(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Rn extends Oe{constructor(e=[],t=[],n=1,i=0){super();this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i};const s=[],o=[];a(i),h(n),u(),this.setAttribute("position",new Te(s,3)),this.setAttribute("normal",new Te(s.slice(),3)),this.setAttribute("uv",new Te(o,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function a(E){const A=new P,S=new P,C=new P;for(let N=0;N<t.length;N+=3)p(t[N+0],A),p(t[N+1],S),p(t[N+2],C),c(A,S,C,E)}function c(E,A,S,C){const N=C+1,U=[];for(let D=0;D<=N;D++){U[D]=[];const K=E.clone().lerp(S,D/N),G=A.clone().lerp(S,D/N),R=N-D;for(let H=0;H<=R;H++)H===0&&D===N?U[D][H]=K:U[D][H]=K.clone().lerp(G,H/R)}for(let D=0;D<N;D++)for(let K=0;K<2*(N-D)-1;K++){const G=Math.floor(K/2);K%2===0?(d(U[D][G+1]),d(U[D+1][G]),d(U[D][G])):(d(U[D][G+1]),d(U[D+1][G+1]),d(U[D+1][G]))}}function h(E){const A=new P;for(let S=0;S<s.length;S+=3)A.x=s[S+0],A.y=s[S+1],A.z=s[S+2],A.normalize().multiplyScalar(E),s[S+0]=A.x,s[S+1]=A.y,s[S+2]=A.z}function u(){const E=new P;for(let A=0;A<s.length;A+=3){E.x=s[A+0],E.y=s[A+1],E.z=s[A+2];const S=g(E)/2/Math.PI+.5,C=b(E)/Math.PI+.5;o.push(S,1-C)}v(),f()}function f(){for(let E=0;E<o.length;E+=6){const A=o[E+0],S=o[E+2],C=o[E+4],N=Math.max(A,S,C),U=Math.min(A,S,C);N>.9&&U<.1&&(A<.2&&(o[E+0]+=1),S<.2&&(o[E+2]+=1),C<.2&&(o[E+4]+=1))}}function d(E){s.push(E.x,E.y,E.z)}function p(E,A){const S=E*3;A.x=e[S+0],A.y=e[S+1],A.z=e[S+2]}function v(){const E=new P,A=new P,S=new P,C=new P,N=new se,U=new se,D=new se;for(let K=0,G=0;K<s.length;K+=9,G+=6){E.set(s[K+0],s[K+1],s[K+2]),A.set(s[K+3],s[K+4],s[K+5]),S.set(s[K+6],s[K+7],s[K+8]),N.set(o[G+0],o[G+1]),U.set(o[G+2],o[G+3]),D.set(o[G+4],o[G+5]),C.copy(E).add(A).add(S).divideScalar(3);const R=g(C);m(N,G+0,E,R),m(U,G+2,A,R),m(D,G+4,S,R)}}function m(E,A,S,C){C<0&&E.x===1&&(o[A]=E.x-1),S.x===0&&S.z===0&&(o[A]=C/2/Math.PI+.5)}function g(E){return Math.atan2(E.z,-E.x)}function b(E){return Math.atan2(-E.y,Math.sqrt(E.x*E.x+E.z*E.z))}}static fromJSON(e){return new Rn(e.vertices,e.indices,e.radius,e.details)}}class Br extends Rn{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=1/n,s=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],o=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(s,o,e,t);this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Br(e.radius,e.detail)}}const Eo=new P,To=new P,nl=new P,So=new xt;class oc extends Oe{constructor(e=null,t=1){super();if(this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const i=Math.pow(10,4),s=Math.cos(Vi*t),o=e.getIndex(),a=e.getAttribute("position"),c=o?o.count:a.count,h=[0,0,0],u=["a","b","c"],f=new Array(3),d={},p=[];for(let v=0;v<c;v+=3){o?(h[0]=o.getX(v),h[1]=o.getX(v+1),h[2]=o.getX(v+2)):(h[0]=v,h[1]=v+1,h[2]=v+2);const{a:m,b:g,c:b}=So;if(m.fromBufferAttribute(a,h[0]),g.fromBufferAttribute(a,h[1]),b.fromBufferAttribute(a,h[2]),So.getNormal(nl),f[0]=`${Math.round(m.x*i)},${Math.round(m.y*i)},${Math.round(m.z*i)}`,f[1]=`${Math.round(g.x*i)},${Math.round(g.y*i)},${Math.round(g.z*i)}`,f[2]=`${Math.round(b.x*i)},${Math.round(b.y*i)},${Math.round(b.z*i)}`,!(f[0]===f[1]||f[1]===f[2]||f[2]===f[0]))for(let E=0;E<3;E++){const A=(E+1)%3,S=f[E],C=f[A],N=So[u[E]],U=So[u[A]],D=`${S}_${C}`,K=`${C}_${S}`;K in d&&d[K]?(nl.dot(d[K].normal)<=s&&(p.push(N.x,N.y,N.z),p.push(U.x,U.y,U.z)),d[K]=null):D in d||(d[D]={index0:h[E],index1:h[A],normal:nl.clone()})}}for(const v in d)if(d[v]){const{index0:m,index1:g}=d[v];Eo.fromBufferAttribute(a,m),To.fromBufferAttribute(a,g),p.push(Eo.x,Eo.y,Eo.z),p.push(To.x,To.y,To.z)}this.setAttribute("position",new Te(p,3))}}}class Tn extends Fr{constructor(e){super(e);this.uuid=$t(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new Fr().fromJSON(i))}return this}}const T0={triangulate:function(r,e,t=2){const n=e&&e.length,i=n?e[0]*t:r.length;let s=zd(r,0,i,t,!0);const o=[];if(!s||s.next===s.prev)return o;let a,c,h,u,f,d,p;if(n&&(s=L0(r,e,s,t)),r.length>80*t){a=h=r[0],c=u=r[1];for(let v=t;v<i;v+=t)f=r[v],d=r[v+1],f<a&&(a=f),d<c&&(c=d),f>h&&(h=f),d>u&&(u=d);p=Math.max(h-a,u-c),p=p!==0?1/p:0}return Ts(s,o,t,a,c,p),o}};function zd(r,e,t,n,i){let s,o;if(i===G0(r,e,t,n)>0)for(s=e;s<t;s+=n)o=Oh(s,r[s],r[s+1],o);else for(s=t-n;s>=e;s-=n)o=Oh(s,r[s],r[s+1],o);return o&&ga(o,o.next)&&(As(o),o=o.next),o}function gi(r,e){if(!r)return r;e||(e=r);let t=r,n;do if(n=!1,!t.steiner&&(ga(t,t.next)||mt(t.prev,t,t.next)===0)){if(As(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function Ts(r,e,t,n,i,s,o){if(!r)return;!o&&s&&O0(r,n,i,s);let a=r,c,h;for(;r.prev!==r.next;){if(c=r.prev,h=r.next,s?A0(r,n,i,s):S0(r)){e.push(c.i/t),e.push(r.i/t),e.push(h.i/t),As(r),r=h.next,a=h.next;continue}if(r=h,r===a){o?o===1?(r=R0(gi(r),e,t),Ts(r,e,t,n,i,s,2)):o===2&&C0(r,e,t,n,i,s):Ts(gi(r),e,t,n,i,s,1);break}}}function S0(r){const e=r.prev,t=r,n=r.next;if(mt(e,t,n)>=0)return!1;let i=r.next.next;for(;i!==r.prev;){if(Cr(e.x,e.y,t.x,t.y,n.x,n.y,i.x,i.y)&&mt(i.prev,i,i.next)>=0)return!1;i=i.next}return!0}function A0(r,e,t,n){const i=r.prev,s=r,o=r.next;if(mt(i,s,o)>=0)return!1;const a=i.x<s.x?i.x<o.x?i.x:o.x:s.x<o.x?s.x:o.x,c=i.y<s.y?i.y<o.y?i.y:o.y:s.y<o.y?s.y:o.y,h=i.x>s.x?i.x>o.x?i.x:o.x:s.x>o.x?s.x:o.x,u=i.y>s.y?i.y>o.y?i.y:o.y:s.y>o.y?s.y:o.y,f=Bl(a,c,e,t,n),d=Bl(h,u,e,t,n);let p=r.prevZ,v=r.nextZ;for(;p&&p.z>=f&&v&&v.z<=d;){if(p!==r.prev&&p!==r.next&&Cr(i.x,i.y,s.x,s.y,o.x,o.y,p.x,p.y)&&mt(p.prev,p,p.next)>=0||(p=p.prevZ,v!==r.prev&&v!==r.next&&Cr(i.x,i.y,s.x,s.y,o.x,o.y,v.x,v.y)&&mt(v.prev,v,v.next)>=0))return!1;v=v.nextZ}for(;p&&p.z>=f;){if(p!==r.prev&&p!==r.next&&Cr(i.x,i.y,s.x,s.y,o.x,o.y,p.x,p.y)&&mt(p.prev,p,p.next)>=0)return!1;p=p.prevZ}for(;v&&v.z<=d;){if(v!==r.prev&&v!==r.next&&Cr(i.x,i.y,s.x,s.y,o.x,o.y,v.x,v.y)&&mt(v.prev,v,v.next)>=0)return!1;v=v.nextZ}return!0}function R0(r,e,t){let n=r;do{const i=n.prev,s=n.next.next;!ga(i,s)&&Gd(i,n,n.next,s)&&Ss(i,s)&&Ss(s,i)&&(e.push(i.i/t),e.push(n.i/t),e.push(s.i/t),As(n),As(n.next),n=r=s),n=n.next}while(n!==r);return gi(n)}function C0(r,e,t,n,i,s){let o=r;do{let a=o.next.next;for(;a!==o.prev;){if(o.i!==a.i&&B0(o,a)){let c=kd(o,a);o=gi(o,o.next),c=gi(c,c.next),Ts(o,e,t,n,i,s),Ts(c,e,t,n,i,s);return}a=a.next}o=o.next}while(o!==r)}function L0(r,e,t,n){const i=[];let s,o,a,c,h;for(s=0,o=e.length;s<o;s++)a=e[s]*n,c=s<o-1?e[s+1]*n:r.length,h=zd(r,a,c,n,!1),h===h.next&&(h.steiner=!0),i.push(U0(h));for(i.sort(P0),s=0;s<i.length;s++)I0(i[s],t),t=gi(t,t.next);return t}function P0(r,e){return r.x-e.x}function I0(r,e){if(e=D0(r,e),e){const t=kd(e,r);gi(e,e.next),gi(t,t.next)}}function D0(r,e){let t=e;const n=r.x,i=r.y;let s=-1/0,o;do{if(i<=t.y&&i>=t.next.y&&t.next.y!==t.y){const d=t.x+(i-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(d<=n&&d>s){if(s=d,d===n){if(i===t.y)return t;if(i===t.next.y)return t.next}o=t.x<t.next.x?t:t.next}}t=t.next}while(t!==e);if(!o)return null;if(n===s)return o;const a=o,c=o.x,h=o.y;let u=1/0,f;t=o;do n>=t.x&&t.x>=c&&n!==t.x&&Cr(i<h?n:s,i,c,h,i<h?s:n,i,t.x,t.y)&&(f=Math.abs(i-t.y)/(n-t.x),Ss(t,r)&&(f<u||f===u&&(t.x>o.x||t.x===o.x&&F0(o,t)))&&(o=t,u=f)),t=t.next;while(t!==a);return o}function F0(r,e){return mt(r.prev,r,e.prev)<0&&mt(e.next,r,r.next)<0}function O0(r,e,t,n){let i=r;do i.z===null&&(i.z=Bl(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==r);i.prevZ.nextZ=null,i.prevZ=null,N0(i)}function N0(r){let e,t,n,i,s,o,a,c,h=1;do{for(t=r,r=null,s=null,o=0;t;){for(o++,n=t,a=0,e=0;e<h&&(a++,n=n.nextZ,!!n);e++);for(c=h;a>0||c>0&&n;)a!==0&&(c===0||!n||t.z<=n.z)?(i=t,t=t.nextZ,a--):(i=n,n=n.nextZ,c--),s?s.nextZ=i:r=i,i.prevZ=s,s=i;t=n}s.nextZ=null,h*=2}while(o>1);return r}function Bl(r,e,t,n,i){return r=32767*(r-t)*i,e=32767*(e-n)*i,r=(r|r<<8)&16711935,r=(r|r<<4)&252645135,r=(r|r<<2)&858993459,r=(r|r<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,r|e<<1}function U0(r){let e=r,t=r;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==r);return t}function Cr(r,e,t,n,i,s,o,a){return(i-o)*(e-a)-(r-o)*(s-a)>=0&&(r-o)*(n-a)-(t-o)*(e-a)>=0&&(t-o)*(s-a)-(i-o)*(n-a)>=0}function B0(r,e){return r.next.i!==e.i&&r.prev.i!==e.i&&!H0(r,e)&&(Ss(r,e)&&Ss(e,r)&&z0(r,e)&&(mt(r.prev,r,e.prev)||mt(r,e.prev,e))||ga(r,e)&&mt(r.prev,r,r.next)>0&&mt(e.prev,e,e.next)>0)}function mt(r,e,t){return(e.y-r.y)*(t.x-e.x)-(e.x-r.x)*(t.y-e.y)}function ga(r,e){return r.x===e.x&&r.y===e.y}function Gd(r,e,t,n){const i=Ro(mt(r,e,t)),s=Ro(mt(r,e,n)),o=Ro(mt(t,n,r)),a=Ro(mt(t,n,e));return!!(i!==s&&o!==a||i===0&&Ao(r,t,e)||s===0&&Ao(r,n,e)||o===0&&Ao(t,r,n)||a===0&&Ao(t,e,n))}function Ao(r,e,t){return e.x<=Math.max(r.x,t.x)&&e.x>=Math.min(r.x,t.x)&&e.y<=Math.max(r.y,t.y)&&e.y>=Math.min(r.y,t.y)}function Ro(r){return r>0?1:r<0?-1:0}function H0(r,e){let t=r;do{if(t.i!==r.i&&t.next.i!==r.i&&t.i!==e.i&&t.next.i!==e.i&&Gd(t,t.next,r,e))return!0;t=t.next}while(t!==r);return!1}function Ss(r,e){return mt(r.prev,r,r.next)<0?mt(r,e,r.next)>=0&&mt(r,r.prev,e)>=0:mt(r,e,r.prev)<0||mt(r,r.next,e)<0}function z0(r,e){let t=r,n=!1;const i=(r.x+e.x)/2,s=(r.y+e.y)/2;do t.y>s!=t.next.y>s&&t.next.y!==t.y&&i<(t.next.x-t.x)*(s-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==r);return n}function kd(r,e){const t=new Hl(r.i,r.x,r.y),n=new Hl(e.i,e.x,e.y),i=r.next,s=e.prev;return r.next=e,e.prev=r,t.next=i,i.prev=t,n.next=t,t.prev=n,s.next=n,n.prev=s,n}function Oh(r,e,t,n){const i=new Hl(r,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function As(r){r.next.prev=r.prev,r.prev.next=r.next,r.prevZ&&(r.prevZ.nextZ=r.nextZ),r.nextZ&&(r.nextZ.prevZ=r.prevZ)}function Hl(r,e,t){this.i=r,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function G0(r,e,t,n){let i=0;for(let s=e,o=t-n;s<t;s+=n)i+=(r[o]-r[s])*(r[s+1]+r[o+1]),o=s;return i}class Sn{static area(e){const t=e.length;let n=0;for(let i=t-1,s=0;s<t;i=s++)n+=e[i].x*e[s].y-e[s].x*e[i].y;return n*.5}static isClockWise(e){return Sn.area(e)<0}static triangulateShape(e,t){const n=[],i=[],s=[];Nh(e),Uh(n,e);let o=e.length;t.forEach(Nh);for(let c=0;c<t.length;c++)i.push(o),o+=t[c].length,Uh(n,t[c]);const a=T0.triangulate(n,i);for(let c=0;c<a.length;c+=3)s.push(a.slice(c,c+3));return s}}function Nh(r){const e=r.length;e>2&&r[e-1].equals(r[0])&&r.pop()}function Uh(r,e){for(let t=0;t<e.length;t++)r.push(e[t].x),r.push(e[t].y)}class Cn extends Oe{constructor(e=new Tn([new se(.5,.5),new se(-.5,.5),new se(-.5,-.5),new se(.5,-.5)]),t={}){super();this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],s=[];for(let a=0,c=e.length;a<c;a++){const h=e[a];o(h)}this.setAttribute("position",new Te(i,3)),this.setAttribute("uv",new Te(s,2)),this.computeVertexNormals();function o(a){const c=[],h=t.curveSegments!==void 0?t.curveSegments:12,u=t.steps!==void 0?t.steps:1;let f=t.depth!==void 0?t.depth:1,d=t.bevelEnabled!==void 0?t.bevelEnabled:!0,p=t.bevelThickness!==void 0?t.bevelThickness:.2,v=t.bevelSize!==void 0?t.bevelSize:p-.1,m=t.bevelOffset!==void 0?t.bevelOffset:0,g=t.bevelSegments!==void 0?t.bevelSegments:3;const b=t.extrudePath,E=t.UVGenerator!==void 0?t.UVGenerator:k0;t.amount!==void 0&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),f=t.amount);let A,S=!1,C,N,U,D;b&&(A=b.getSpacedPoints(u),S=!0,d=!1,C=b.computeFrenetFrames(u,!1),N=new P,U=new P,D=new P),d||(g=0,p=0,v=0,m=0);const K=a.extractPoints(h);let G=K.shape;const R=K.holes;if(!Sn.isClockWise(G)){G=G.reverse();for(let te=0,ne=R.length;te<ne;te++){const he=R[te];Sn.isClockWise(he)&&(R[te]=he.reverse())}}const ee=Sn.triangulateShape(G,R),X=G;for(let te=0,ne=R.length;te<ne;te++){const he=R[te];G=G.concat(he)}function k(te,ne,he){return ne||console.error("THREE.ExtrudeGeometry: vec does not exist"),ne.clone().multiplyScalar(he).add(te)}const Z=G.length,$=ee.length;function V(te,ne,he){let be,_e,We;const Fe=te.x-ne.x,De=te.y-ne.y,ht=he.x-te.x,rt=he.y-te.y,O=Fe*Fe+De*De,L=Fe*rt-De*ht;if(Math.abs(L)>Number.EPSILON){const j=Math.sqrt(O),le=Math.sqrt(ht*ht+rt*rt),ye=ne.x-De/j,we=ne.y+Fe/j,Pe=he.x-rt/le,Q=he.y+ht/le,Re=((Pe-ye)*rt-(Q-we)*ht)/(Fe*rt-De*ht);be=ye+Fe*Re-te.x,_e=we+De*Re-te.y;const Xe=be*be+_e*_e;if(Xe<=2)return new se(be,_e);We=Math.sqrt(Xe/2)}else{let j=!1;Fe>Number.EPSILON?ht>Number.EPSILON&&(j=!0):Fe<-Number.EPSILON?ht<-Number.EPSILON&&(j=!0):Math.sign(De)===Math.sign(rt)&&(j=!0),j?(be=-De,_e=Fe,We=Math.sqrt(O)):(be=Fe,_e=De,We=Math.sqrt(O/2))}return new se(be/We,_e/We)}const ie=[];for(let te=0,ne=X.length,he=ne-1,be=te+1;te<ne;te++,he++,be++)he===ne&&(he=0),be===ne&&(be=0),ie[te]=V(X[te],X[he],X[be]);const oe=[];let ue,ae=ie.concat();for(let te=0,ne=R.length;te<ne;te++){const he=R[te];ue=[];for(let be=0,_e=he.length,We=_e-1,Fe=be+1;be<_e;be++,We++,Fe++)We===_e&&(We=0),Fe===_e&&(Fe=0),ue[be]=V(he[be],he[We],he[Fe]);oe.push(ue),ae=ae.concat(ue)}for(let te=0;te<g;te++){const ne=te/g,he=p*Math.cos(ne*Math.PI/2),be=v*Math.sin(ne*Math.PI/2)+m;for(let _e=0,We=X.length;_e<We;_e++){const Fe=k(X[_e],ie[_e],be);nt(Fe.x,Fe.y,-he)}for(let _e=0,We=R.length;_e<We;_e++){const Fe=R[_e];ue=oe[_e];for(let De=0,ht=Fe.length;De<ht;De++){const rt=k(Fe[De],ue[De],be);nt(rt.x,rt.y,-he)}}}const Le=v+m;for(let te=0;te<Z;te++){const ne=d?k(G[te],ae[te],Le):G[te];S?(U.copy(C.normals[0]).multiplyScalar(ne.x),N.copy(C.binormals[0]).multiplyScalar(ne.y),D.copy(A[0]).add(U).add(N),nt(D.x,D.y,D.z)):nt(ne.x,ne.y,0)}for(let te=1;te<=u;te++)for(let ne=0;ne<Z;ne++){const he=d?k(G[ne],ae[ne],Le):G[ne];S?(U.copy(C.normals[te]).multiplyScalar(he.x),N.copy(C.binormals[te]).multiplyScalar(he.y),D.copy(A[te]).add(U).add(N),nt(D.x,D.y,D.z)):nt(he.x,he.y,f/u*te)}for(let te=g-1;te>=0;te--){const ne=te/g,he=p*Math.cos(ne*Math.PI/2),be=v*Math.sin(ne*Math.PI/2)+m;for(let _e=0,We=X.length;_e<We;_e++){const Fe=k(X[_e],ie[_e],be);nt(Fe.x,Fe.y,f+he)}for(let _e=0,We=R.length;_e<We;_e++){const Fe=R[_e];ue=oe[_e];for(let De=0,ht=Fe.length;De<ht;De++){const rt=k(Fe[De],ue[De],be);S?nt(rt.x,rt.y+A[u-1].y,A[u-1].x+he):nt(rt.x,rt.y,f+he)}}}ke(),Ne();function ke(){const te=i.length/3;if(d){let ne=0,he=Z*ne;for(let be=0;be<$;be++){const _e=ee[be];He(_e[2]+he,_e[1]+he,_e[0]+he)}ne=u+g*2,he=Z*ne;for(let be=0;be<$;be++){const _e=ee[be];He(_e[0]+he,_e[1]+he,_e[2]+he)}}else{for(let ne=0;ne<$;ne++){const he=ee[ne];He(he[2],he[1],he[0])}for(let ne=0;ne<$;ne++){const he=ee[ne];He(he[0]+Z*u,he[1]+Z*u,he[2]+Z*u)}}n.addGroup(te,i.length/3-te,0)}function Ne(){const te=i.length/3;let ne=0;W(X,ne),ne+=X.length;for(let he=0,be=R.length;he<be;he++){const _e=R[he];W(_e,ne),ne+=_e.length}n.addGroup(te,i.length/3-te,1)}function W(te,ne){let he=te.length;for(;--he>=0;){const be=he;let _e=he-1;_e<0&&(_e=te.length-1);for(let We=0,Fe=u+g*2;We<Fe;We++){const De=Z*We,ht=Z*(We+1),rt=ne+be+De,O=ne+_e+De,L=ne+_e+ht,j=ne+be+ht;Ve(rt,O,L,j)}}}function nt(te,ne,he){c.push(te),c.push(ne),c.push(he)}function He(te,ne,he){de(te),de(ne),de(he);const be=i.length/3,_e=E.generateTopUV(n,i,be-3,be-2,be-1);qe(_e[0]),qe(_e[1]),qe(_e[2])}function Ve(te,ne,he,be){de(te),de(ne),de(be),de(ne),de(he),de(be);const _e=i.length/3,We=E.generateSideWallUV(n,i,_e-6,_e-3,_e-2,_e-1);qe(We[0]),qe(We[1]),qe(We[3]),qe(We[1]),qe(We[2]),qe(We[3])}function de(te){i.push(c[te*3+0]),i.push(c[te*3+1]),i.push(c[te*3+2])}function qe(te){s.push(te.x),s.push(te.y)}}}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return V0(t,n,e)}static fromJSON(e,t){const n=[];for(let s=0,o=e.shapes.length;s<o;s++){const a=t[e.shapes[s]];n.push(a)}const i=e.options.extrudePath;return i!==void 0&&(e.options.extrudePath=new sc[i.type]().fromJSON(i)),new Cn(n,e.options)}}const k0={generateTopUV:function(r,e,t,n,i){const s=e[t*3],o=e[t*3+1],a=e[n*3],c=e[n*3+1],h=e[i*3],u=e[i*3+1];return[new se(s,o),new se(a,c),new se(h,u)]},generateSideWallUV:function(r,e,t,n,i,s){const o=e[t*3],a=e[t*3+1],c=e[t*3+2],h=e[n*3],u=e[n*3+1],f=e[n*3+2],d=e[i*3],p=e[i*3+1],v=e[i*3+2],m=e[s*3],g=e[s*3+1],b=e[s*3+2];return Math.abs(a-u)<Math.abs(o-h)?[new se(o,1-c),new se(h,1-f),new se(d,1-v),new se(m,1-b)]:[new se(a,1-c),new se(u,1-f),new se(p,1-v),new se(g,1-b)]}};function V0(r,e,t){if(t.shapes=[],Array.isArray(r))for(let n=0,i=r.length;n<i;n++){const s=r[n];t.shapes.push(s.uuid)}else t.shapes.push(r.uuid);return e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class Hr extends Rn{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,s,e,t);this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Hr(e.radius,e.detail)}}class $i extends Rn{constructor(e=1,t=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,e,t);this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new $i(e.radius,e.detail)}}class zr extends Oe{constructor(e=.5,t=1,n=8,i=1,s=0,o=Math.PI*2){super();this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:s,thetaLength:o},n=Math.max(3,n),i=Math.max(1,i);const a=[],c=[],h=[],u=[];let f=e;const d=(t-e)/i,p=new P,v=new se;for(let m=0;m<=i;m++){for(let g=0;g<=n;g++){const b=s+g/n*o;p.x=f*Math.cos(b),p.y=f*Math.sin(b),c.push(p.x,p.y,p.z),h.push(0,0,1),v.x=(p.x/t+1)/2,v.y=(p.y/t+1)/2,u.push(v.x,v.y)}f+=d}for(let m=0;m<i;m++){const g=m*(n+1);for(let b=0;b<n;b++){const E=b+g,A=E,S=E+n+1,C=E+n+2,N=E+1;a.push(A,S,N),a.push(S,C,N)}}this.setIndex(a),this.setAttribute("position",new Te(c,3)),this.setAttribute("normal",new Te(h,3)),this.setAttribute("uv",new Te(u,2))}static fromJSON(e){return new zr(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class Qi extends Oe{constructor(e=new Tn([new se(0,.5),new se(-.5,-.5),new se(.5,-.5)]),t=12){super();this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],s=[],o=[];let a=0,c=0;if(Array.isArray(e)===!1)h(e);else for(let u=0;u<e.length;u++)h(e[u]),this.addGroup(a,c,u),a+=c,c=0;this.setIndex(n),this.setAttribute("position",new Te(i,3)),this.setAttribute("normal",new Te(s,3)),this.setAttribute("uv",new Te(o,2));function h(u){const f=i.length/3,d=u.extractPoints(t);let p=d.shape;const v=d.holes;Sn.isClockWise(p)===!1&&(p=p.reverse());for(let g=0,b=v.length;g<b;g++){const E=v[g];Sn.isClockWise(E)===!0&&(v[g]=E.reverse())}const m=Sn.triangulateShape(p,v);for(let g=0,b=v.length;g<b;g++){const E=v[g];p=p.concat(E)}for(let g=0,b=p.length;g<b;g++){const E=p[g];i.push(E.x,E.y,0),s.push(0,0,1),o.push(E.x,E.y)}for(let g=0,b=m.length;g<b;g++){const E=m[g],A=E[0]+f,S=E[1]+f,C=E[2]+f;n.push(A,S,C),c+=3}}}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return W0(t,e)}static fromJSON(e,t){const n=[];for(let i=0,s=e.shapes.length;i<s;i++){const o=t[e.shapes[i]];n.push(o)}return new Qi(n,e.curveSegments)}}function W0(r,e){if(e.shapes=[],Array.isArray(r))for(let t=0,n=r.length;t<n;t++){const i=r[t];e.shapes.push(i.uuid)}else e.shapes.push(r.uuid);return e}class er extends Oe{constructor(e=1,t=32,n=16,i=0,s=Math.PI*2,o=0,a=Math.PI){super();this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:s,thetaStart:o,thetaLength:a},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const c=Math.min(o+a,Math.PI);let h=0;const u=[],f=new P,d=new P,p=[],v=[],m=[],g=[];for(let b=0;b<=n;b++){const E=[],A=b/n;let S=0;b==0&&o==0?S=.5/t:b==n&&c==Math.PI&&(S=-.5/t);for(let C=0;C<=t;C++){const N=C/t;f.x=-e*Math.cos(i+N*s)*Math.sin(o+A*a),f.y=e*Math.cos(o+A*a),f.z=e*Math.sin(i+N*s)*Math.sin(o+A*a),v.push(f.x,f.y,f.z),d.copy(f).normalize(),m.push(d.x,d.y,d.z),g.push(N+S,1-A),E.push(h++)}u.push(E)}for(let b=0;b<n;b++)for(let E=0;E<t;E++){const A=u[b][E+1],S=u[b][E],C=u[b+1][E],N=u[b+1][E+1];(b!==0||o>0)&&p.push(A,S,N),(b!==n-1||c<Math.PI)&&p.push(S,C,N)}this.setIndex(p),this.setAttribute("position",new Te(v,3)),this.setAttribute("normal",new Te(m,3)),this.setAttribute("uv",new Te(g,2))}static fromJSON(e){return new er(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class Gr extends Rn{constructor(e=1,t=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,e,t);this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Gr(e.radius,e.detail)}}class kr extends Oe{constructor(e=1,t=.4,n=8,i=6,s=Math.PI*2){super();this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:s},n=Math.floor(n),i=Math.floor(i);const o=[],a=[],c=[],h=[],u=new P,f=new P,d=new P;for(let p=0;p<=n;p++)for(let v=0;v<=i;v++){const m=v/i*s,g=p/n*Math.PI*2;f.x=(e+t*Math.cos(g))*Math.cos(m),f.y=(e+t*Math.cos(g))*Math.sin(m),f.z=t*Math.sin(g),a.push(f.x,f.y,f.z),u.x=e*Math.cos(m),u.y=e*Math.sin(m),d.subVectors(f,u).normalize(),c.push(d.x,d.y,d.z),h.push(v/i),h.push(p/n)}for(let p=1;p<=n;p++)for(let v=1;v<=i;v++){const m=(i+1)*p+v-1,g=(i+1)*(p-1)+v-1,b=(i+1)*(p-1)+v,E=(i+1)*p+v;o.push(m,g,E),o.push(g,b,E)}this.setIndex(o),this.setAttribute("position",new Te(a,3)),this.setAttribute("normal",new Te(c,3)),this.setAttribute("uv",new Te(h,2))}static fromJSON(e){return new kr(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class Vr extends Oe{constructor(e=1,t=.4,n=64,i=8,s=2,o=3){super();this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:s,q:o},n=Math.floor(n),i=Math.floor(i);const a=[],c=[],h=[],u=[],f=new P,d=new P,p=new P,v=new P,m=new P,g=new P,b=new P;for(let A=0;A<=n;++A){const S=A/n*s*Math.PI*2;E(S,s,o,e,p),E(S+.01,s,o,e,v),g.subVectors(v,p),b.addVectors(v,p),m.crossVectors(g,b),b.crossVectors(m,g),m.normalize(),b.normalize();for(let C=0;C<=i;++C){const N=C/i*Math.PI*2,U=-t*Math.cos(N),D=t*Math.sin(N);f.x=p.x+(U*b.x+D*m.x),f.y=p.y+(U*b.y+D*m.y),f.z=p.z+(U*b.z+D*m.z),c.push(f.x,f.y,f.z),d.subVectors(f,p).normalize(),h.push(d.x,d.y,d.z),u.push(A/n),u.push(C/i)}}for(let A=1;A<=n;A++)for(let S=1;S<=i;S++){const C=(i+1)*(A-1)+(S-1),N=(i+1)*A+(S-1),U=(i+1)*A+S,D=(i+1)*(A-1)+S;a.push(C,N,D),a.push(N,U,D)}this.setIndex(a),this.setAttribute("position",new Te(c,3)),this.setAttribute("normal",new Te(h,3)),this.setAttribute("uv",new Te(u,2));function E(A,S,C,N,U){const D=Math.cos(A),K=Math.sin(A),G=C/S*A,R=Math.cos(G);U.x=N*(2+R)*.5*D,U.y=N*(2+R)*K*.5,U.z=N*Math.sin(G)*.5}}static fromJSON(e){return new Vr(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class Wr extends Oe{constructor(e=new pa(new P(-1,-1,0),new P(-1,1,0),new P(1,1,0)),t=64,n=1,i=8,s=!1){super();this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:s};const o=e.computeFrenetFrames(t,s);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals;const a=new P,c=new P,h=new se;let u=new P;const f=[],d=[],p=[],v=[];m(),this.setIndex(v),this.setAttribute("position",new Te(f,3)),this.setAttribute("normal",new Te(d,3)),this.setAttribute("uv",new Te(p,2));function m(){for(let A=0;A<t;A++)g(A);g(s===!1?t:0),E(),b()}function g(A){u=e.getPointAt(A/t,u);const S=o.normals[A],C=o.binormals[A];for(let N=0;N<=i;N++){const U=N/i*Math.PI*2,D=Math.sin(U),K=-Math.cos(U);c.x=K*S.x+D*C.x,c.y=K*S.y+D*C.y,c.z=K*S.z+D*C.z,c.normalize(),d.push(c.x,c.y,c.z),a.x=u.x+n*c.x,a.y=u.y+n*c.y,a.z=u.z+n*c.z,f.push(a.x,a.y,a.z)}}function b(){for(let A=1;A<=t;A++)for(let S=1;S<=i;S++){const C=(i+1)*(A-1)+(S-1),N=(i+1)*A+(S-1),U=(i+1)*A+S,D=(i+1)*(A-1)+S;v.push(C,N,D),v.push(N,U,D)}}function E(){for(let A=0;A<=t;A++)for(let S=0;S<=i;S++)h.x=A/t,h.y=S/i,p.push(h.x,h.y)}}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new Wr(new sc[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class ac extends Oe{constructor(e=null){super();if(this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],n=new Set,i=new P,s=new P;if(e.index!==null){const o=e.attributes.position,a=e.index;let c=e.groups;c.length===0&&(c=[{start:0,count:a.count,materialIndex:0}]);for(let h=0,u=c.length;h<u;++h){const f=c[h],d=f.start,p=f.count;for(let v=d,m=d+p;v<m;v+=3)for(let g=0;g<3;g++){const b=a.getX(v+g),E=a.getX(v+(g+1)%3);i.fromBufferAttribute(o,b),s.fromBufferAttribute(o,E),Bh(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}}else{const o=e.attributes.position;for(let a=0,c=o.count/3;a<c;a++)for(let h=0;h<3;h++){const u=3*a+h,f=3*a+(h+1)%3;i.fromBufferAttribute(o,u),s.fromBufferAttribute(o,f),Bh(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}this.setAttribute("position",new Te(t,3))}}}function Bh(r,e,t){const n=`${r.x},${r.y},${r.z}-${e.x},${e.y},${e.z}`,i=`${e.x},${e.y},${e.z}-${r.x},${r.y},${r.z}`;return t.has(n)===!0||t.has(i)===!0?!1:(t.add(n),t.add(i),!0)}var Hh=Object.freeze({__proto__:null,BoxGeometry:qn,BoxBufferGeometry:qn,CapsuleGeometry:Or,CapsuleBufferGeometry:Or,CircleGeometry:Nr,CircleBufferGeometry:Nr,ConeGeometry:Ur,ConeBufferGeometry:Ur,CylinderGeometry:mi,CylinderBufferGeometry:mi,DodecahedronGeometry:Br,DodecahedronBufferGeometry:Br,EdgesGeometry:oc,ExtrudeGeometry:Cn,ExtrudeBufferGeometry:Cn,IcosahedronGeometry:Hr,IcosahedronBufferGeometry:Hr,LatheGeometry:ji,LatheBufferGeometry:ji,OctahedronGeometry:$i,OctahedronBufferGeometry:$i,PlaneGeometry:Ji,PlaneBufferGeometry:Ji,PolyhedronGeometry:Rn,PolyhedronBufferGeometry:Rn,RingGeometry:zr,RingBufferGeometry:zr,ShapeGeometry:Qi,ShapeBufferGeometry:Qi,SphereGeometry:er,SphereBufferGeometry:er,TetrahedronGeometry:Gr,TetrahedronBufferGeometry:Gr,TorusGeometry:kr,TorusBufferGeometry:kr,TorusKnotGeometry:Vr,TorusKnotBufferGeometry:Vr,TubeGeometry:Wr,TubeBufferGeometry:Wr,WireframeGeometry:ac});class lc extends Mt{constructor(e){super();this.type="ShadowMaterial",this.color=new xe(0),this.transparent=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this}}lc.prototype.isShadowMaterial=!0;class cc extends ln{constructor(e){super(e);this.type="RawShaderMaterial"}}cc.prototype.isRawShaderMaterial=!0;class va extends Mt{constructor(e){super();this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new xe(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new xe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ir,this.normalScale=new se(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this}}va.prototype.isMeshStandardMaterial=!0;class hc extends va{constructor(e){super();this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new se(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return yt(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.sheenColor=new xe(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationColor=new xe(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new xe(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._transmission=0,this.setValues(e)}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}hc.prototype.isMeshPhysicalMaterial=!0;class uc extends Mt{constructor(e){super();this.type="MeshPhongMaterial",this.color=new xe(16777215),this.specular=new xe(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new xe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ir,this.normalScale=new se(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Is,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this}}uc.prototype.isMeshPhongMaterial=!0;class dc extends Mt{constructor(e){super();this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new xe(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new xe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ir,this.normalScale=new se(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}dc.prototype.isMeshToonMaterial=!0;class fc extends Mt{constructor(e){super();this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ir,this.normalScale=new se(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}fc.prototype.isMeshNormalMaterial=!0;class pc extends Mt{constructor(e){super();this.type="MeshLambertMaterial",this.color=new xe(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new xe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Is,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}pc.prototype.isMeshLambertMaterial=!0;class mc extends Mt{constructor(e){super();this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new xe(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ir,this.normalScale=new se(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this}}mc.prototype.isMeshMatcapMaterial=!0;class gc extends Dt{constructor(e){super();this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}gc.prototype.isLineDashedMaterial=!0;const X0={ShadowMaterial:lc,SpriteMaterial:aa,RawShaderMaterial:cc,ShaderMaterial:ln,PointsMaterial:sr,MeshPhysicalMaterial:hc,MeshStandardMaterial:va,MeshPhongMaterial:uc,MeshToonMaterial:dc,MeshNormalMaterial:fc,MeshLambertMaterial:pc,MeshDepthMaterial:ra,MeshDistanceMaterial:sa,MeshBasicMaterial:Jn,MeshMatcapMaterial:mc,LineDashedMaterial:gc,LineBasicMaterial:Dt,Material:Mt};Mt.fromType=function(r){return new X0[r]};const ft={arraySlice:function(r,e,t){return ft.isTypedArray(r)?new r.constructor(r.subarray(e,t!==void 0?t:r.length)):r.slice(e,t)},convertArray:function(r,e,t){return!r||!t&&r.constructor===e?r:typeof e.BYTES_PER_ELEMENT=="number"?new e(r):Array.prototype.slice.call(r)},isTypedArray:function(r){return ArrayBuffer.isView(r)&&!(r instanceof DataView)},getKeyframeOrder:function(r){function e(i,s){return r[i]-r[s]}const t=r.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(e),n},sortedArray:function(r,e,t){const n=r.length,i=new r.constructor(n);for(let s=0,o=0;o!==n;++s){const a=t[s]*e;for(let c=0;c!==e;++c)i[o++]=r[a+c]}return i},flattenJSON:function(r,e,t,n){let i=1,s=r[0];for(;s!==void 0&&s[n]===void 0;)s=r[i++];if(s===void 0)return;let o=s[n];if(o!==void 0)if(Array.isArray(o))do o=s[n],o!==void 0&&(e.push(s.time),t.push.apply(t,o)),s=r[i++];while(s!==void 0);else if(o.toArray!==void 0)do o=s[n],o!==void 0&&(e.push(s.time),o.toArray(t,t.length)),s=r[i++];while(s!==void 0);else do o=s[n],o!==void 0&&(e.push(s.time),t.push(o)),s=r[i++];while(s!==void 0)},subclip:function(r,e,t,n,i=30){const s=r.clone();s.name=e;const o=[];for(let c=0;c<s.tracks.length;++c){const h=s.tracks[c],u=h.getValueSize(),f=[],d=[];for(let p=0;p<h.times.length;++p){const v=h.times[p]*i;if(!(v<t||v>=n)){f.push(h.times[p]);for(let m=0;m<u;++m)d.push(h.values[p*u+m])}}f.length!==0&&(h.times=ft.convertArray(f,h.times.constructor),h.values=ft.convertArray(d,h.values.constructor),o.push(h))}s.tracks=o;let a=1/0;for(let c=0;c<s.tracks.length;++c)a>s.tracks[c].times[0]&&(a=s.tracks[c].times[0]);for(let c=0;c<s.tracks.length;++c)s.tracks[c].shift(-1*a);return s.resetDuration(),s},makeClipAdditive:function(r,e=0,t=r,n=30){n<=0&&(n=30);const i=t.tracks.length,s=e/n;for(let o=0;o<i;++o){const a=t.tracks[o],c=a.ValueTypeName;if(c==="bool"||c==="string")continue;const h=r.tracks.find(function(b){return b.name===a.name&&b.ValueTypeName===c});if(h===void 0)continue;let u=0;const f=a.getValueSize();a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(u=f/3);let d=0;const p=h.getValueSize();h.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(d=p/3);const v=a.times.length-1;let m;if(s<=a.times[0]){const b=u,E=f-u;m=ft.arraySlice(a.values,b,E)}else if(s>=a.times[v]){const b=v*f+u,E=b+f-u;m=ft.arraySlice(a.values,b,E)}else{const b=a.createInterpolant(),E=u,A=f-u;b.evaluate(s),m=ft.arraySlice(b.resultBuffer,E,A)}c==="quaternion"&&new Ot().fromArray(m).normalize().conjugate().toArray(m);const g=h.times.length;for(let b=0;b<g;++b){const E=b*p+d;if(c==="quaternion")Ot.multiplyQuaternionsFlat(h.values,E,m,0,h.values,E);else{const A=p-d*2;for(let S=0;S<A;++S)h.values[E+S]-=m[S]}}}return r.blendMode=Yl,r}};class Zn{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],s=t[n-1];e:{t:{let o;n:{i:if(!(e<i)){for(let a=n+2;;){if(i===void 0){if(e<s)break i;return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,e,s)}if(n===a)break;if(s=i,i=t[++n],e<i)break t}o=t.length;break n}if(!(e>=s)){const a=t[1];e<a&&(n=2,s=a);for(let c=n-2;;){if(s===void 0)return this._cachedIndex=0,this.beforeStart_(0,e,i);if(n===c)break;if(i=s,s=t[--n-1],e>=s)break t}o=n,n=0;break n}break e}for(;n<o;){const a=n+o>>>1;e<t[a]?o=a:n=a+1}if(i=t[n],s=t[n-1],s===void 0)return this._cachedIndex=0,this.beforeStart_(0,e,i);if(i===void 0)return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,s,e)}this._cachedIndex=n,this.intervalChanged_(n,s,i)}return this.interpolate_(n,s,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,s=e*i;for(let o=0;o!==i;++o)t[o]=n[s+o];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}Zn.prototype.beforeStart_=Zn.prototype.copySampleValue_;Zn.prototype.afterEnd_=Zn.prototype.copySampleValue_;class Vd extends Zn{constructor(e,t,n,i){super(e,t,n,i);this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:Ni,endingEnd:Ni}}intervalChanged_(e,t,n){const i=this.parameterPositions;let s=e-2,o=e+1,a=i[s],c=i[o];if(a===void 0)switch(this.getSettings_().endingStart){case Ui:s=e,a=2*t-n;break;case ws:s=i.length-2,a=t+i[s]-i[s+1];break;default:s=e,a=n}if(c===void 0)switch(this.getSettings_().endingEnd){case Ui:o=e,c=2*n-t;break;case ws:o=1,c=n+i[1]-i[0];break;default:o=e-1,c=t}const h=(n-t)*.5,u=this.valueSize;this._weightPrev=h/(t-a),this._weightNext=h/(c-n),this._offsetPrev=s*u,this._offsetNext=o*u}interpolate_(e,t,n,i){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,c=e*a,h=c-a,u=this._offsetPrev,f=this._offsetNext,d=this._weightPrev,p=this._weightNext,v=(n-t)/(i-t),m=v*v,g=m*v,b=-d*g+2*d*m-d*v,E=(1+d)*g+(-1.5-2*d)*m+(-.5+d)*v+1,A=(-1-p)*g+(1.5+p)*m+.5*v,S=p*g-p*m;for(let C=0;C!==a;++C)s[C]=b*o[u+C]+E*o[h+C]+A*o[c+C]+S*o[f+C];return s}}class vc extends Zn{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,c=e*a,h=c-a,u=(n-t)/(i-t),f=1-u;for(let d=0;d!==a;++d)s[d]=o[h+d]*f+o[c+d]*u;return s}}class Wd extends Zn{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class yn{constructor(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=ft.convertArray(t,this.TimeBufferType),this.values=ft.convertArray(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:ft.convertArray(e.times,Array),values:ft.convertArray(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new Wd(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new vc(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new Vd(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case xs:t=this.InterpolantFactoryMethodDiscrete;break;case Ms:t=this.InterpolantFactoryMethodLinear;break;case zo:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return xs;case this.InterpolantFactoryMethodLinear:return Ms;case this.InterpolantFactoryMethodSmooth:return zo}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let s=0,o=i-1;for(;s!==i&&n[s]<e;)++s;for(;o!==-1&&n[o]>t;)--o;if(++o,s!==0||o!==i){s>=o&&(o=Math.max(o,1),s=o-1);const a=this.getValueSize();this.times=ft.arraySlice(n,s,o),this.values=ft.arraySlice(this.values,s*a,o*a)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,s=n.length;s===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let o=null;for(let a=0;a!==s;a++){const c=n[a];if(typeof c=="number"&&isNaN(c)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,a,c),e=!1;break}if(o!==null&&o>c){console.error("THREE.KeyframeTrack: Out of order keys.",this,a,c,o),e=!1;break}o=c}if(i!==void 0&&ft.isTypedArray(i))for(let a=0,c=i.length;a!==c;++a){const h=i[a];if(isNaN(h)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,a,h),e=!1;break}}return e}optimize(){const e=ft.arraySlice(this.times),t=ft.arraySlice(this.values),n=this.getValueSize(),i=this.getInterpolation()===zo,s=e.length-1;let o=1;for(let a=1;a<s;++a){let c=!1;const h=e[a],u=e[a+1];if(h!==u&&(a!==1||h!==e[0]))if(i)c=!0;else{const f=a*n,d=f-n,p=f+n;for(let v=0;v!==n;++v){const m=t[f+v];if(m!==t[d+v]||m!==t[p+v]){c=!0;break}}}if(c){if(a!==o){e[o]=e[a];const f=a*n,d=o*n;for(let p=0;p!==n;++p)t[d+p]=t[f+p]}++o}}if(s>0){e[o]=e[s];for(let a=s*n,c=o*n,h=0;h!==n;++h)t[c+h]=t[a+h];++o}return o!==e.length?(this.times=ft.arraySlice(e,0,o),this.values=ft.arraySlice(t,0,o*n)):(this.times=e,this.values=t),this}clone(){const e=ft.arraySlice(this.times,0),t=ft.arraySlice(this.values,0),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}yn.prototype.TimeBufferType=Float32Array;yn.prototype.ValueBufferType=Float32Array;yn.prototype.DefaultInterpolation=Ms;class or extends yn{}or.prototype.ValueTypeName="bool";or.prototype.ValueBufferType=Array;or.prototype.DefaultInterpolation=xs;or.prototype.InterpolantFactoryMethodLinear=void 0;or.prototype.InterpolantFactoryMethodSmooth=void 0;class _c extends yn{}_c.prototype.ValueTypeName="color";class Rs extends yn{}Rs.prototype.ValueTypeName="number";class Xd extends Zn{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,c=(n-t)/(i-t);let h=e*a;for(let u=h+a;h!==u;h+=4)Ot.slerpFlat(s,0,o,h-a,o,h,c);return s}}class Jr extends yn{InterpolantFactoryMethodLinear(e){return new Xd(this.times,this.values,this.getValueSize(),e)}}Jr.prototype.ValueTypeName="quaternion";Jr.prototype.DefaultInterpolation=Ms;Jr.prototype.InterpolantFactoryMethodSmooth=void 0;class ar extends yn{}ar.prototype.ValueTypeName="string";ar.prototype.ValueBufferType=Array;ar.prototype.DefaultInterpolation=xs;ar.prototype.InterpolantFactoryMethodLinear=void 0;ar.prototype.InterpolantFactoryMethodSmooth=void 0;class Cs extends yn{}Cs.prototype.ValueTypeName="vector";class Ls{constructor(e,t=-1,n,i=jo){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=$t(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let o=0,a=n.length;o!==a;++o)t.push(Y0(n[o]).scale(i));const s=new this(e.name,e.duration,t,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let s=0,o=n.length;s!==o;++s)t.push(yn.toJSON(n[s]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const s=t.length,o=[];for(let a=0;a<s;a++){let c=[],h=[];c.push((a+s-1)%s,a,(a+1)%s),h.push(0,1,0);const u=ft.getKeyframeOrder(c);c=ft.sortedArray(c,1,u),h=ft.sortedArray(h,1,u),!i&&c[0]===0&&(c.push(s),h.push(h[0])),o.push(new Rs(".morphTargetInfluences["+t[a].name+"]",c,h).scale(1/n))}return new this(e,-1,o)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},s=/^([\w-]*?)([\d]+)$/;for(let a=0,c=e.length;a<c;a++){const h=e[a],u=h.name.match(s);if(u&&u.length>1){const f=u[1];let d=i[f];d||(i[f]=d=[]),d.push(h)}}const o=[];for(const a in i)o.push(this.CreateFromMorphTargetSequence(a,i[a],t,n));return o}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(f,d,p,v,m){if(p.length!==0){const g=[],b=[];ft.flattenJSON(p,g,b,v),g.length!==0&&m.push(new f(d,g,b))}},i=[],s=e.name||"default",o=e.fps||30,a=e.blendMode;let c=e.length||-1;const h=e.hierarchy||[];for(let f=0;f<h.length;f++){const d=h[f].keys;if(!(!d||d.length===0))if(d[0].morphTargets){const p={};let v;for(v=0;v<d.length;v++)if(d[v].morphTargets)for(let m=0;m<d[v].morphTargets.length;m++)p[d[v].morphTargets[m]]=-1;for(const m in p){const g=[],b=[];for(let E=0;E!==d[v].morphTargets.length;++E){const A=d[v];g.push(A.time),b.push(A.morphTarget===m?1:0)}i.push(new Rs(".morphTargetInfluence["+m+"]",g,b))}c=p.length*o}else{const p=".bones["+t[f].name+"]";n(Cs,p+".position",d,"pos",i),n(Jr,p+".quaternion",d,"rot",i),n(Cs,p+".scale",d,"scl",i)}}return i.length===0?null:new this(s,c,i,a)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const s=this.tracks[n];t=Math.max(t,s.times[s.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function q0(r){switch(r.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Rs;case"vector":case"vector2":case"vector3":case"vector4":return Cs;case"color":return _c;case"quaternion":return Jr;case"bool":case"boolean":return or;case"string":return ar}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+r)}function Y0(r){if(r.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=q0(r.type);if(r.times===void 0){const t=[],n=[];ft.flattenJSON(r.keys,t,n,"value"),r.times=t,r.values=n}return e.parse!==void 0?e.parse(r):new e(r.name,r.times,r.values,r.interpolation)}const tr={enabled:!1,files:{},add:function(r,e){this.enabled!==!1&&(this.files[r]=e)},get:function(r){if(this.enabled!==!1)return this.files[r]},remove:function(r){delete this.files[r]},clear:function(){this.files={}}};class yc{constructor(e,t,n){const i=this;let s=!1,o=0,a=0,c;const h=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(u){a++,s===!1&&i.onStart!==void 0&&i.onStart(u,o,a),s=!0},this.itemEnd=function(u){o++,i.onProgress!==void 0&&i.onProgress(u,o,a),o===a&&(s=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(u){i.onError!==void 0&&i.onError(u)},this.resolveURL=function(u){return c?c(u):u},this.setURLModifier=function(u){return c=u,this},this.addHandler=function(u,f){return h.push(u,f),this},this.removeHandler=function(u){const f=h.indexOf(u);return f!==-1&&h.splice(f,2),this},this.getHandler=function(u){for(let f=0,d=h.length;f<d;f+=2){const p=h[f],v=h[f+1];if(p.global&&(p.lastIndex=0),p.test(u))return v}return null}}}const qd=new yc;class Vt{constructor(e){this.manager=e!==void 0?e:qd,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,s){n.load(e,i,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}const Vn={};class Ln extends Vt{constructor(e){super(e)}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=tr.get(e);if(s!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(s),this.manager.itemEnd(e)},0),s;if(Vn[e]!==void 0){Vn[e].push({onLoad:t,onProgress:n,onError:i});return}Vn[e]=[],Vn[e].push({onLoad:t,onProgress:n,onError:i});const o=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),a=this.mimeType,c=this.responseType;fetch(o).then(h=>{if(h.status===200||h.status===0){if(h.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream=="undefined"||h.body===void 0||h.body.getReader===void 0)return h;const u=Vn[e],f=h.body.getReader(),d=h.headers.get("Content-Length"),p=d?parseInt(d):0,v=p!==0;let m=0;const g=new ReadableStream({start(b){E();function E(){f.read().then(({done:A,value:S})=>{if(A)b.close();else{m+=S.byteLength;const C=new ProgressEvent("progress",{lengthComputable:v,loaded:m,total:p});for(let N=0,U=u.length;N<U;N++){const D=u[N];D.onProgress&&D.onProgress(C)}b.enqueue(S),E()}})}}});return new Response(g)}else throw Error(`fetch for "${h.url}" responded with ${h.status}: ${h.statusText}`)}).then(h=>{switch(c){case"arraybuffer":return h.arrayBuffer();case"blob":return h.blob();case"document":return h.text().then(u=>new DOMParser().parseFromString(u,a));case"json":return h.json();default:if(a===void 0)return h.text();{const f=/charset="?([^;"\s]*)"?/i.exec(a),d=f&&f[1]?f[1].toLowerCase():void 0,p=new TextDecoder(d);return h.arrayBuffer().then(v=>p.decode(v))}}}).then(h=>{tr.add(e,h);const u=Vn[e];delete Vn[e];for(let f=0,d=u.length;f<d;f++){const p=u[f];p.onLoad&&p.onLoad(h)}}).catch(h=>{const u=Vn[e];if(u===void 0)throw this.manager.itemError(e),h;delete Vn[e];for(let f=0,d=u.length;f<d;f++){const p=u[f];p.onError&&p.onError(h)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class Z0 extends Vt{constructor(e){super(e)}load(e,t,n,i){const s=this,o=new Ln(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(a){try{t(s.parse(JSON.parse(a)))}catch(c){i?i(c):console.error(c),s.manager.itemError(e)}},n,i)}parse(e){const t=[];for(let n=0;n<e.length;n++){const i=Ls.parse(e[n]);t.push(i)}return t}}class J0 extends Vt{constructor(e){super(e)}load(e,t,n,i){const s=this,o=[],a=new ec,c=new Ln(this.manager);c.setPath(this.path),c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),c.setWithCredentials(s.withCredentials);let h=0;function u(f){c.load(e[f],function(d){const p=s.parse(d,!0);o[f]={width:p.width,height:p.height,format:p.format,mipmaps:p.mipmaps},h+=1,h===6&&(p.mipmapCount===1&&(a.minFilter=_t),a.image=o,a.format=p.format,a.needsUpdate=!0,t&&t(a))},n,i)}if(Array.isArray(e))for(let f=0,d=e.length;f<d;++f)u(f);else c.load(e,function(f){const d=s.parse(f,!0);if(d.isCubemap){const p=d.mipmaps.length/d.mipmapCount;for(let v=0;v<p;v++){o[v]={mipmaps:[]};for(let m=0;m<d.mipmapCount;m++)o[v].mipmaps.push(d.mipmaps[v*d.mipmapCount+m]),o[v].format=d.format,o[v].width=d.width,o[v].height=d.height}a.image=o}else a.image.width=d.width,a.image.height=d.height,a.mipmaps=d.mipmaps;d.mipmapCount===1&&(a.minFilter=_t),a.format=d.format,a.needsUpdate=!0,t&&t(a)},n,i);return a}}class Ps extends Vt{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,o=tr.get(e);if(o!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(o),s.manager.itemEnd(e)},0),o;const a=Es("img");function c(){u(),tr.add(e,this),t&&t(this),s.manager.itemEnd(e)}function h(f){u(),i&&i(f),s.manager.itemError(e),s.manager.itemEnd(e)}function u(){a.removeEventListener("load",c,!1),a.removeEventListener("error",h,!1)}return a.addEventListener("load",c,!1),a.addEventListener("error",h,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(a.crossOrigin=this.crossOrigin),s.manager.itemStart(e),a.src=e,a}}class Yd extends Vt{constructor(e){super(e)}load(e,t,n,i){const s=new Yr,o=new Ps(this.manager);o.setCrossOrigin(this.crossOrigin),o.setPath(this.path);let a=0;function c(h){o.load(e[h],function(u){s.images[h]=u,a++,a===6&&(s.needsUpdate=!0,t&&t(s))},void 0,i)}for(let h=0;h<e.length;++h)c(h);return s}}class Zd extends Vt{constructor(e){super(e)}load(e,t,n,i){const s=this,o=new Xi,a=new Ln(this.manager);return a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setPath(this.path),a.setWithCredentials(s.withCredentials),a.load(e,function(c){const h=s.parse(c);!h||(h.image!==void 0?o.image=h.image:h.data!==void 0&&(o.image.width=h.width,o.image.height=h.height,o.image.data=h.data),o.wrapS=h.wrapS!==void 0?h.wrapS:zt,o.wrapT=h.wrapT!==void 0?h.wrapT:zt,o.magFilter=h.magFilter!==void 0?h.magFilter:_t,o.minFilter=h.minFilter!==void 0?h.minFilter:_t,o.anisotropy=h.anisotropy!==void 0?h.anisotropy:1,h.encoding!==void 0&&(o.encoding=h.encoding),h.flipY!==void 0&&(o.flipY=h.flipY),h.format!==void 0&&(o.format=h.format),h.type!==void 0&&(o.type=h.type),h.mipmaps!==void 0&&(o.mipmaps=h.mipmaps,o.minFilter=nr),h.mipmapCount===1&&(o.minFilter=_t),h.generateMipmaps!==void 0&&(o.generateMipmaps=h.generateMipmaps),o.needsUpdate=!0,t&&t(o,h))},n,i),o}}class Jd extends Vt{constructor(e){super(e)}load(e,t,n,i){const s=new At,o=new Ps(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(e,function(a){s.image=a,s.needsUpdate=!0,t!==void 0&&t(s)},n,i),s}}class _n extends $e{constructor(e,t=1){super();this.type="Light",this.color=new xe(e),this.intensity=t}dispose(){}copy(e){return super.copy(e),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}_n.prototype.isLight=!0;class xc extends _n{constructor(e,t,n){super(e,n);this.type="HemisphereLight",this.position.copy($e.DefaultUp),this.updateMatrix(),this.groundColor=new xe(t)}copy(e){return _n.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}}xc.prototype.isHemisphereLight=!0;const zh=new Se,Gh=new P,kh=new P;class Mc{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new se(512,512),this.map=null,this.mapPass=null,this.matrix=new Se,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Os,this._frameExtents=new se(1,1),this._viewportCount=1,this._viewports=[new st(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;Gh.setFromMatrixPosition(e.matrixWorld),t.position.copy(Gh),kh.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(kh),t.updateMatrixWorld(),zh.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(zh),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(t.projectionMatrix),n.multiply(t.matrixWorldInverse)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class Kd extends Mc{constructor(){super(new It(50,1,.5,500));this.focus=1}updateMatrices(e){const t=this.camera,n=bs*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,s=e.distance||t.far;(n!==t.fov||i!==t.aspect||s!==t.far)&&(t.fov=n,t.aspect=i,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}Kd.prototype.isSpotLightShadow=!0;class wc extends _n{constructor(e,t,n=0,i=Math.PI/3,s=0,o=1){super(e,t);this.type="SpotLight",this.position.copy($e.DefaultUp),this.updateMatrix(),this.target=new $e,this.distance=n,this.angle=i,this.penumbra=s,this.decay=o,this.shadow=new Kd}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}wc.prototype.isSpotLight=!0;const Vh=new Se,hs=new P,il=new P;class jd extends Mc{constructor(){super(new It(90,1,.5,500));this._frameExtents=new se(4,2),this._viewportCount=6,this._viewports=[new st(2,1,1,1),new st(0,1,1,1),new st(3,1,1,1),new st(1,1,1,1),new st(3,0,1,1),new st(1,0,1,1)],this._cubeDirections=[new P(1,0,0),new P(-1,0,0),new P(0,0,1),new P(0,0,-1),new P(0,1,0),new P(0,-1,0)],this._cubeUps=[new P(0,1,0),new P(0,1,0),new P(0,1,0),new P(0,1,0),new P(0,0,1),new P(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,s=e.distance||n.far;s!==n.far&&(n.far=s,n.updateProjectionMatrix()),hs.setFromMatrixPosition(e.matrixWorld),n.position.copy(hs),il.copy(n.position),il.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(il),n.updateMatrixWorld(),i.makeTranslation(-hs.x,-hs.y,-hs.z),Vh.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Vh)}}jd.prototype.isPointLightShadow=!0;class bc extends _n{constructor(e,t,n=0,i=1){super(e,t);this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new jd}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}bc.prototype.isPointLight=!0;class $d extends Mc{constructor(){super(new Ns(-5,5,5,-5,.5,500))}}$d.prototype.isDirectionalLightShadow=!0;class Ec extends _n{constructor(e,t){super(e,t);this.type="DirectionalLight",this.position.copy($e.DefaultUp),this.updateMatrix(),this.target=new $e,this.shadow=new $d}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}Ec.prototype.isDirectionalLight=!0;class Tc extends _n{constructor(e,t){super(e,t);this.type="AmbientLight"}}Tc.prototype.isAmbientLight=!0;class Sc extends _n{constructor(e,t,n=10,i=10){super(e,t);this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}Sc.prototype.isRectAreaLight=!0;class Ac{constructor(){this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new P)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,s=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.282095),t.addScaledVector(o[1],.488603*i),t.addScaledVector(o[2],.488603*s),t.addScaledVector(o[3],.488603*n),t.addScaledVector(o[4],1.092548*(n*i)),t.addScaledVector(o[5],1.092548*(i*s)),t.addScaledVector(o[6],.315392*(3*s*s-1)),t.addScaledVector(o[7],1.092548*(n*s)),t.addScaledVector(o[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,s=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.886227),t.addScaledVector(o[1],2*.511664*i),t.addScaledVector(o[2],2*.511664*s),t.addScaledVector(o[3],2*.511664*n),t.addScaledVector(o[4],2*.429043*n*i),t.addScaledVector(o[5],2*.429043*i*s),t.addScaledVector(o[6],.743125*s*s-.247708),t.addScaledVector(o[7],2*.429043*n*s),t.addScaledVector(o[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,s=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*s,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*s,t[6]=.315392*(3*s*s-1),t[7]=1.092548*n*s,t[8]=.546274*(n*n-i*i)}}Ac.prototype.isSphericalHarmonics3=!0;class ks extends _n{constructor(e=new Ac,t=1){super(void 0,t);this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}ks.prototype.isLightProbe=!0;class Qd extends Vt{constructor(e){super(e);this.textures={}}load(e,t,n,i){const s=this,o=new Ln(s.manager);o.setPath(s.path),o.setRequestHeader(s.requestHeader),o.setWithCredentials(s.withCredentials),o.load(e,function(a){try{t(s.parse(JSON.parse(a)))}catch(c){i?i(c):console.error(c),s.manager.itemError(e)}},n,i)}parse(e){const t=this.textures;function n(s){return t[s]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",s),t[s]}const i=Mt.fromType(e.type);if(e.uuid!==void 0&&(i.uuid=e.uuid),e.name!==void 0&&(i.name=e.name),e.color!==void 0&&i.color!==void 0&&i.color.setHex(e.color),e.roughness!==void 0&&(i.roughness=e.roughness),e.metalness!==void 0&&(i.metalness=e.metalness),e.sheen!==void 0&&(i.sheen=e.sheen),e.sheenColor!==void 0&&(i.sheenColor=new xe().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(i.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(e.emissive),e.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(e.specular),e.specularIntensity!==void 0&&(i.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(i.shininess=e.shininess),e.clearcoat!==void 0&&(i.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=e.clearcoatRoughness),e.transmission!==void 0&&(i.transmission=e.transmission),e.thickness!==void 0&&(i.thickness=e.thickness),e.attenuationDistance!==void 0&&(i.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(e.attenuationColor),e.fog!==void 0&&(i.fog=e.fog),e.flatShading!==void 0&&(i.flatShading=e.flatShading),e.blending!==void 0&&(i.blending=e.blending),e.combine!==void 0&&(i.combine=e.combine),e.side!==void 0&&(i.side=e.side),e.shadowSide!==void 0&&(i.shadowSide=e.shadowSide),e.opacity!==void 0&&(i.opacity=e.opacity),e.transparent!==void 0&&(i.transparent=e.transparent),e.alphaTest!==void 0&&(i.alphaTest=e.alphaTest),e.depthTest!==void 0&&(i.depthTest=e.depthTest),e.depthWrite!==void 0&&(i.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(i.colorWrite=e.colorWrite),e.stencilWrite!==void 0&&(i.stencilWrite=e.stencilWrite),e.stencilWriteMask!==void 0&&(i.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(i.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(i.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(i.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(i.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(i.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(i.stencilZPass=e.stencilZPass),e.wireframe!==void 0&&(i.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(i.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(i.rotation=e.rotation),e.linewidth!==1&&(i.linewidth=e.linewidth),e.dashSize!==void 0&&(i.dashSize=e.dashSize),e.gapSize!==void 0&&(i.gapSize=e.gapSize),e.scale!==void 0&&(i.scale=e.scale),e.polygonOffset!==void 0&&(i.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(i.dithering=e.dithering),e.alphaToCoverage!==void 0&&(i.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=e.premultipliedAlpha),e.visible!==void 0&&(i.visible=e.visible),e.toneMapped!==void 0&&(i.toneMapped=e.toneMapped),e.userData!==void 0&&(i.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?i.vertexColors=e.vertexColors>0:i.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const s in e.uniforms){const o=e.uniforms[s];switch(i.uniforms[s]={},o.type){case"t":i.uniforms[s].value=n(o.value);break;case"c":i.uniforms[s].value=new xe().setHex(o.value);break;case"v2":i.uniforms[s].value=new se().fromArray(o.value);break;case"v3":i.uniforms[s].value=new P().fromArray(o.value);break;case"v4":i.uniforms[s].value=new st().fromArray(o.value);break;case"m3":i.uniforms[s].value=new Lt().fromArray(o.value);break;case"m4":i.uniforms[s].value=new Se().fromArray(o.value);break;default:i.uniforms[s].value=o.value}}if(e.defines!==void 0&&(i.defines=e.defines),e.vertexShader!==void 0&&(i.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(i.fragmentShader=e.fragmentShader),e.extensions!==void 0)for(const s in e.extensions)i.extensions[s]=e.extensions[s];if(e.shading!==void 0&&(i.flatShading=e.shading===1),e.size!==void 0&&(i.size=e.size),e.sizeAttenuation!==void 0&&(i.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(i.map=n(e.map)),e.matcap!==void 0&&(i.matcap=n(e.matcap)),e.alphaMap!==void 0&&(i.alphaMap=n(e.alphaMap)),e.bumpMap!==void 0&&(i.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(i.bumpScale=e.bumpScale),e.normalMap!==void 0&&(i.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(i.normalMapType=e.normalMapType),e.normalScale!==void 0){let s=e.normalScale;Array.isArray(s)===!1&&(s=[s,s]),i.normalScale=new se().fromArray(s)}return e.displacementMap!==void 0&&(i.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(i.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(i.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(i.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(i.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(i.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(i.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(i.specularMap=n(e.specularMap)),e.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(e.specularIntensityMap)),e.specularColorMap!==void 0&&(i.specularColorMap=n(e.specularColorMap)),e.envMap!==void 0&&(i.envMap=n(e.envMap)),e.envMapIntensity!==void 0&&(i.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(i.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(i.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(i.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(i.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(i.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(i.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(i.gradientMap=n(e.gradientMap)),e.clearcoatMap!==void 0&&(i.clearcoatMap=n(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new se().fromArray(e.clearcoatNormalScale)),e.transmissionMap!==void 0&&(i.transmissionMap=n(e.transmissionMap)),e.thicknessMap!==void 0&&(i.thicknessMap=n(e.thicknessMap)),e.sheenColorMap!==void 0&&(i.sheenColorMap=n(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(e.sheenRoughnessMap)),i}setTextures(e){return this.textures=e,this}}class Zo{static decodeText(e){if(typeof TextDecoder!="undefined")return new TextDecoder().decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class Rc extends Oe{constructor(){super();this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}clone(){return new this.constructor().copy(this)}toJSON(){const e=super.toJSON(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}Rc.prototype.isInstancedBufferGeometry=!0;class ef extends Vt{constructor(e){super(e)}load(e,t,n,i){const s=this,o=new Ln(s.manager);o.setPath(s.path),o.setRequestHeader(s.requestHeader),o.setWithCredentials(s.withCredentials),o.load(e,function(a){try{t(s.parse(JSON.parse(a)))}catch(c){i?i(c):console.error(c),s.manager.itemError(e)}},n,i)}parse(e){const t={},n={};function i(p,v){if(t[v]!==void 0)return t[v];const g=p.interleavedBuffers[v],b=s(p,g.buffer),E=Ar(g.type,b),A=new rr(E,g.stride);return A.uuid=g.uuid,t[v]=A,A}function s(p,v){if(n[v]!==void 0)return n[v];const g=p.arrayBuffers[v],b=new Uint32Array(g).buffer;return n[v]=b,b}const o=e.isInstancedBufferGeometry?new Rc:new Oe,a=e.data.index;if(a!==void 0){const p=Ar(a.type,a.array);o.setIndex(new et(p,1))}const c=e.data.attributes;for(const p in c){const v=c[p];let m;if(v.isInterleavedBufferAttribute){const g=i(e.data,v.data);m=new pi(g,v.itemSize,v.offset,v.normalized)}else{const g=Ar(v.type,v.array),b=v.isInstancedBufferAttribute?Ki:et;m=new b(g,v.itemSize,v.normalized)}v.name!==void 0&&(m.name=v.name),v.usage!==void 0&&m.setUsage(v.usage),v.updateRange!==void 0&&(m.updateRange.offset=v.updateRange.offset,m.updateRange.count=v.updateRange.count),o.setAttribute(p,m)}const h=e.data.morphAttributes;if(h)for(const p in h){const v=h[p],m=[];for(let g=0,b=v.length;g<b;g++){const E=v[g];let A;if(E.isInterleavedBufferAttribute){const S=i(e.data,E.data);A=new pi(S,E.itemSize,E.offset,E.normalized)}else{const S=Ar(E.type,E.array);A=new et(S,E.itemSize,E.normalized)}E.name!==void 0&&(A.name=E.name),m.push(A)}o.morphAttributes[p]=m}e.data.morphTargetsRelative&&(o.morphTargetsRelative=!0);const f=e.data.groups||e.data.drawcalls||e.data.offsets;if(f!==void 0)for(let p=0,v=f.length;p!==v;++p){const m=f[p];o.addGroup(m.start,m.count,m.materialIndex)}const d=e.data.boundingSphere;if(d!==void 0){const p=new P;d.center!==void 0&&p.fromArray(d.center),o.boundingSphere=new yi(p,d.radius)}return e.name&&(o.name=e.name),e.userData&&(o.userData=e.userData),o}}class K0 extends Vt{constructor(e){super(e)}load(e,t,n,i){const s=this,o=this.path===""?Zo.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||o;const a=new Ln(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(c){let h=null;try{h=JSON.parse(c)}catch(f){i!==void 0&&i(f),console.error("THREE:ObjectLoader: Can't parse "+e+".",f.message);return}const u=h.metadata;if(u===void 0||u.type===void 0||u.type.toLowerCase()==="geometry"){console.error("THREE.ObjectLoader: Can't load "+e);return}s.parse(h,t)},n,i)}async loadAsync(e,t){const n=this,i=this.path===""?Zo.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||i;const s=new Ln(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials);const o=await s.loadAsync(e,t),a=JSON.parse(o),c=a.metadata;if(c===void 0||c.type===void 0||c.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await n.parseAsync(a)}parse(e,t){const n=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),s=this.parseGeometries(e.geometries,i),o=this.parseImages(e.images,function(){t!==void 0&&t(h)}),a=this.parseTextures(e.textures,o),c=this.parseMaterials(e.materials,a),h=this.parseObject(e.object,s,c,a,n),u=this.parseSkeletons(e.skeletons,h);if(this.bindSkeletons(h,u),t!==void 0){let f=!1;for(const d in o)if(o[d]instanceof HTMLImageElement){f=!0;break}f===!1&&t(h)}return h}async parseAsync(e){const t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,n),s=await this.parseImagesAsync(e.images),o=this.parseTextures(e.textures,s),a=this.parseMaterials(e.materials,o),c=this.parseObject(e.object,i,a,o,t),h=this.parseSkeletons(e.skeletons,c);return this.bindSkeletons(c,h),c}parseShapes(e){const t={};if(e!==void 0)for(let n=0,i=e.length;n<i;n++){const s=new Tn().fromJSON(e[n]);t[s.uuid]=s}return t}parseSkeletons(e,t){const n={},i={};if(t.traverse(function(s){s.isBone&&(i[s.uuid]=s)}),e!==void 0)for(let s=0,o=e.length;s<o;s++){const a=new ua().fromJSON(e[s],i);n[a.uuid]=a}return n}parseGeometries(e,t){const n={};if(e!==void 0){const i=new ef;for(let s=0,o=e.length;s<o;s++){let a;const c=e[s];switch(c.type){case"BufferGeometry":case"InstancedBufferGeometry":a=i.parse(c);break;case"Geometry":console.error("THREE.ObjectLoader: The legacy Geometry type is no longer supported.");break;default:c.type in Hh?a=Hh[c.type].fromJSON(c,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${c.type}"`)}a.uuid=c.uuid,c.name!==void 0&&(a.name=c.name),a.isBufferGeometry===!0&&c.userData!==void 0&&(a.userData=c.userData),n[c.uuid]=a}}return n}parseMaterials(e,t){const n={},i={};if(e!==void 0){const s=new Qd;s.setTextures(t);for(let o=0,a=e.length;o<a;o++){const c=e[o];if(c.type==="MultiMaterial"){const h=[];for(let u=0;u<c.materials.length;u++){const f=c.materials[u];n[f.uuid]===void 0&&(n[f.uuid]=s.parse(f)),h.push(n[f.uuid])}i[c.uuid]=h}else n[c.uuid]===void 0&&(n[c.uuid]=s.parse(c)),i[c.uuid]=n[c.uuid]}}return i}parseAnimations(e){const t={};if(e!==void 0)for(let n=0;n<e.length;n++){const i=e[n],s=Ls.parse(i);t[s.uuid]=s}return t}parseImages(e,t){const n=this,i={};let s;function o(c){return n.manager.itemStart(c),s.load(c,function(){n.manager.itemEnd(c)},void 0,function(){n.manager.itemError(c),n.manager.itemEnd(c)})}function a(c){if(typeof c=="string"){const h=c,u=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(h)?h:n.resourcePath+h;return o(u)}else return c.data?{data:Ar(c.type,c.data),width:c.width,height:c.height}:null}if(e!==void 0&&e.length>0){const c=new yc(t);s=new Ps(c),s.setCrossOrigin(this.crossOrigin);for(let h=0,u=e.length;h<u;h++){const f=e[h],d=f.url;if(Array.isArray(d)){const p=[];for(let v=0,m=d.length;v<m;v++){const g=d[v],b=a(g);b!==null&&(b instanceof HTMLImageElement?p.push(b):p.push(new Xi(b.data,b.width,b.height)))}i[f.uuid]=new Bi(p)}else{const p=a(f.url);i[f.uuid]=new Bi(p)}}}return i}async parseImagesAsync(e){const t=this,n={};let i;async function s(o){if(typeof o=="string"){const a=o,c=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(a)?a:t.resourcePath+a;return await i.loadAsync(c)}else return o.data?{data:Ar(o.type,o.data),width:o.width,height:o.height}:null}if(e!==void 0&&e.length>0){i=new Ps(this.manager),i.setCrossOrigin(this.crossOrigin);for(let o=0,a=e.length;o<a;o++){const c=e[o],h=c.url;if(Array.isArray(h)){const u=[];for(let f=0,d=h.length;f<d;f++){const p=h[f],v=await s(p);v!==null&&(v instanceof HTMLImageElement?u.push(v):u.push(new Xi(v.data,v.width,v.height)))}n[c.uuid]=new Bi(u)}else{const u=await s(c.url);n[c.uuid]=new Bi(u)}}}return n}parseTextures(e,t){function n(s,o){return typeof s=="number"?s:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",s),o[s])}const i={};if(e!==void 0)for(let s=0,o=e.length;s<o;s++){const a=e[s];a.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',a.uuid),t[a.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",a.image);const c=t[a.image],h=c.data;let u;Array.isArray(h)?(u=new Yr,h.length===6&&(u.needsUpdate=!0)):(h&&h.data?u=new Xi:u=new At,h&&(u.needsUpdate=!0)),u.source=c,u.uuid=a.uuid,a.name!==void 0&&(u.name=a.name),a.mapping!==void 0&&(u.mapping=n(a.mapping,j0)),a.offset!==void 0&&u.offset.fromArray(a.offset),a.repeat!==void 0&&u.repeat.fromArray(a.repeat),a.center!==void 0&&u.center.fromArray(a.center),a.rotation!==void 0&&(u.rotation=a.rotation),a.wrap!==void 0&&(u.wrapS=n(a.wrap[0],Wh),u.wrapT=n(a.wrap[1],Wh)),a.format!==void 0&&(u.format=a.format),a.type!==void 0&&(u.type=a.type),a.encoding!==void 0&&(u.encoding=a.encoding),a.minFilter!==void 0&&(u.minFilter=n(a.minFilter,Xh)),a.magFilter!==void 0&&(u.magFilter=n(a.magFilter,Xh)),a.anisotropy!==void 0&&(u.anisotropy=a.anisotropy),a.flipY!==void 0&&(u.flipY=a.flipY),a.premultiplyAlpha!==void 0&&(u.premultiplyAlpha=a.premultiplyAlpha),a.unpackAlignment!==void 0&&(u.unpackAlignment=a.unpackAlignment),a.userData!==void 0&&(u.userData=a.userData),i[a.uuid]=u}return i}parseObject(e,t,n,i,s){let o;function a(d){return t[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",d),t[d]}function c(d){if(d!==void 0){if(Array.isArray(d)){const p=[];for(let v=0,m=d.length;v<m;v++){const g=d[v];n[g]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",g),p.push(n[g])}return p}return n[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",d),n[d]}}function h(d){return i[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",d),i[d]}let u,f;switch(e.type){case"Scene":o=new oa,e.background!==void 0&&(Number.isInteger(e.background)?o.background=new xe(e.background):o.background=h(e.background)),e.environment!==void 0&&(o.environment=h(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?o.fog=new Bs(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(o.fog=new Us(e.fog.color,e.fog.density)));break;case"PerspectiveCamera":o=new It(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(o.focus=e.focus),e.zoom!==void 0&&(o.zoom=e.zoom),e.filmGauge!==void 0&&(o.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(o.filmOffset=e.filmOffset),e.view!==void 0&&(o.view=Object.assign({},e.view));break;case"OrthographicCamera":o=new Ns(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(o.zoom=e.zoom),e.view!==void 0&&(o.view=Object.assign({},e.view));break;case"AmbientLight":o=new Tc(e.color,e.intensity);break;case"DirectionalLight":o=new Ec(e.color,e.intensity);break;case"PointLight":o=new bc(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":o=new Sc(e.color,e.intensity,e.width,e.height);break;case"SpotLight":o=new wc(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":o=new xc(e.color,e.groundColor,e.intensity);break;case"LightProbe":o=new ks().fromJSON(e);break;case"SkinnedMesh":u=a(e.geometry),f=c(e.material),o=new ca(u,f),e.bindMode!==void 0&&(o.bindMode=e.bindMode),e.bindMatrix!==void 0&&o.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(o.skeleton=e.skeleton);break;case"Mesh":u=a(e.geometry),f=c(e.material),o=new St(u,f);break;case"InstancedMesh":u=a(e.geometry),f=c(e.material);const d=e.count,p=e.instanceMatrix,v=e.instanceColor;o=new $l(u,f,d),o.instanceMatrix=new Ki(new Float32Array(p.array),16),v!==void 0&&(o.instanceColor=new Ki(new Float32Array(v.array),v.itemSize));break;case"LOD":o=new Fd;break;case"Line":o=new Yn(a(e.geometry),c(e.material));break;case"LineLoop":o=new Ql(a(e.geometry),c(e.material));break;case"LineSegments":o=new qt(a(e.geometry),c(e.material));break;case"PointCloud":case"Points":o=new Hs(a(e.geometry),c(e.material));break;case"Sprite":o=new la(c(e.material));break;case"Group":o=new Hi;break;case"Bone":o=new ha;break;default:o=new $e}if(o.uuid=e.uuid,e.name!==void 0&&(o.name=e.name),e.matrix!==void 0?(o.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(o.matrixAutoUpdate=e.matrixAutoUpdate),o.matrixAutoUpdate&&o.matrix.decompose(o.position,o.quaternion,o.scale)):(e.position!==void 0&&o.position.fromArray(e.position),e.rotation!==void 0&&o.rotation.fromArray(e.rotation),e.quaternion!==void 0&&o.quaternion.fromArray(e.quaternion),e.scale!==void 0&&o.scale.fromArray(e.scale)),e.castShadow!==void 0&&(o.castShadow=e.castShadow),e.receiveShadow!==void 0&&(o.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.bias!==void 0&&(o.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(o.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(o.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&o.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(o.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(o.visible=e.visible),e.frustumCulled!==void 0&&(o.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(o.renderOrder=e.renderOrder),e.userData!==void 0&&(o.userData=e.userData),e.layers!==void 0&&(o.layers.mask=e.layers),e.children!==void 0){const d=e.children;for(let p=0;p<d.length;p++)o.add(this.parseObject(d[p],t,n,i,s))}if(e.animations!==void 0){const d=e.animations;for(let p=0;p<d.length;p++){const v=d[p];o.animations.push(s[v])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(o.autoUpdate=e.autoUpdate);const d=e.levels;for(let p=0;p<d.length;p++){const v=d[p],m=o.getObjectByProperty("uuid",v.object);m!==void 0&&o.addLevel(m,v.distance)}}return o}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=t[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}setTexturePath(e){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(e)}}const j0={UVMapping:Ko,CubeReflectionMapping:ui,CubeRefractionMapping:di,EquirectangularReflectionMapping:gs,EquirectangularRefractionMapping:vs,CubeUVReflectionMapping:Xr},Wh={RepeatWrapping:_s,ClampToEdgeWrapping:zt,MirroredRepeatWrapping:ys},Xh={NearestFilter:Tt,NearestMipmapNearestFilter:Wo,NearestMipmapLinearFilter:Xo,LinearFilter:_t,LinearMipmapNearestFilter:ql,LinearMipmapLinearFilter:nr};class tf extends Vt{constructor(e){super(e);typeof createImageBitmap=="undefined"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch=="undefined"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,o=tr.get(e);if(o!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(o),s.manager.itemEnd(e)},0),o;const a={};a.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",a.headers=this.requestHeader,fetch(e,a).then(function(c){return c.blob()}).then(function(c){return createImageBitmap(c,Object.assign(s.options,{colorSpaceConversion:"none"}))}).then(function(c){tr.add(e,c),t&&t(c),s.manager.itemEnd(e)}).catch(function(c){i&&i(c),s.manager.itemError(e),s.manager.itemEnd(e)}),s.manager.itemStart(e)}}tf.prototype.isImageBitmapLoader=!0;let Co;const Cc={getContext:function(){return Co===void 0&&(Co=new(window.AudioContext||window.webkitAudioContext)),Co},setContext:function(r){Co=r}};class nf extends Vt{constructor(e){super(e)}load(e,t,n,i){const s=this,o=new Ln(this.manager);o.setResponseType("arraybuffer"),o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(a){try{const c=a.slice(0);Cc.getContext().decodeAudioData(c,function(u){t(u)})}catch(c){i?i(c):console.error(c),s.manager.itemError(e)}},n,i)}}class rf extends ks{constructor(e,t,n=1){super(void 0,n);const i=new xe().set(e),s=new xe().set(t),o=new P(i.r,i.g,i.b),a=new P(s.r,s.g,s.b),c=Math.sqrt(Math.PI),h=c*Math.sqrt(.75);this.sh.coefficients[0].copy(o).add(a).multiplyScalar(c),this.sh.coefficients[1].copy(o).sub(a).multiplyScalar(h)}}rf.prototype.isHemisphereLightProbe=!0;class sf extends ks{constructor(e,t=1){super(void 0,t);const n=new xe().set(e);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}}sf.prototype.isAmbientLightProbe=!0;const qh=new Se,Yh=new Se,Ri=new Se;class $0{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new It,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new It,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,Ri.copy(e.projectionMatrix);const i=t.eyeSep/2,s=i*t.near/t.focus,o=t.near*Math.tan(Vi*t.fov*.5)/t.zoom;let a,c;Yh.elements[12]=-i,qh.elements[12]=i,a=-o*t.aspect+s,c=o*t.aspect+s,Ri.elements[0]=2*t.near/(c-a),Ri.elements[8]=(c+a)/(c-a),this.cameraL.projectionMatrix.copy(Ri),a=-o*t.aspect-s,c=o*t.aspect-s,Ri.elements[0]=2*t.near/(c-a),Ri.elements[8]=(c+a)/(c-a),this.cameraR.projectionMatrix.copy(Ri)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(Yh),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(qh)}}class of{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=Zh(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=Zh();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function Zh(){return(typeof performance=="undefined"?Date:performance).now()}const Ci=new P,Jh=new Ot,Q0=new P,Li=new P;class ey extends $e{constructor(){super();this.type="AudioListener",this.context=Cc.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new of}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(Ci,Jh,Q0),Li.set(0,0,-1).applyQuaternion(Jh),t.positionX){const i=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(Ci.x,i),t.positionY.linearRampToValueAtTime(Ci.y,i),t.positionZ.linearRampToValueAtTime(Ci.z,i),t.forwardX.linearRampToValueAtTime(Li.x,i),t.forwardY.linearRampToValueAtTime(Li.y,i),t.forwardZ.linearRampToValueAtTime(Li.z,i),t.upX.linearRampToValueAtTime(n.x,i),t.upY.linearRampToValueAtTime(n.y,i),t.upZ.linearRampToValueAtTime(n.z,i)}else t.setPosition(Ci.x,Ci.y,Ci.z),t.setOrientation(Li.x,Li.y,Li.z,n.x,n.y,n.z)}}class Lc extends $e{constructor(e){super();this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const Pi=new P,Kh=new Ot,ty=new P,Ii=new P;class ny extends Lc{constructor(e){super(e);this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(Pi,Kh,ty),Ii.set(0,0,1).applyQuaternion(Kh);const t=this.panner;if(t.positionX){const n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(Pi.x,n),t.positionY.linearRampToValueAtTime(Pi.y,n),t.positionZ.linearRampToValueAtTime(Pi.z,n),t.orientationX.linearRampToValueAtTime(Ii.x,n),t.orientationY.linearRampToValueAtTime(Ii.y,n),t.orientationZ.linearRampToValueAtTime(Ii.z,n)}else t.setPosition(Pi.x,Pi.y,Pi.z),t.setOrientation(Ii.x,Ii.y,Ii.z)}}class af{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}class lf{constructor(e,t,n){this.binding=e,this.valueSize=n;let i,s,o;switch(t){case"quaternion":i=this._slerp,s=this._slerpAdditive,o=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,s=this._select,o=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,s=this._lerpAdditive,o=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=s,this._setIdentity=o,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,s=e*i+i;let o=this.cumulativeWeight;if(o===0){for(let a=0;a!==i;++a)n[s+a]=n[a];o=t}else{o+=t;const a=t/o;this._mixBufferRegion(n,s,0,a,i)}this.cumulativeWeight=o}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,s=this.cumulativeWeight,o=this.cumulativeWeightAdditive,a=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const c=t*this._origIndex;this._mixBufferRegion(n,i,c,1-s,t)}o>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let c=t,h=t+t;c!==h;++c)if(n[c]!==n[c+t]){a.setValue(n,i);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let s=n,o=i;s!==o;++s)t[s]=t[i+s%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,s){if(i>=.5)for(let o=0;o!==s;++o)e[t+o]=e[n+o]}_slerp(e,t,n,i){Ot.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,s){const o=this._workIndex*s;Ot.multiplyQuaternionsFlat(e,o,e,t,e,n),Ot.slerpFlat(e,t,e,t,e,o,i)}_lerp(e,t,n,i,s){const o=1-i;for(let a=0;a!==s;++a){const c=t+a;e[c]=e[c]*o+e[n+a]*i}}_lerpAdditive(e,t,n,i,s){for(let o=0;o!==s;++o){const a=t+o;e[a]=e[a]+e[n+o]*i}}}const Pc="\\[\\]\\.:\\/",iy=new RegExp("["+Pc+"]","g"),Ic="[^"+Pc+"]",ry="[^"+Pc.replace("\\.","")+"]",sy=/((?:WC+[\/:])*)/.source.replace("WC",Ic),oy=/(WCOD+)?/.source.replace("WCOD",ry),ay=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Ic),ly=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Ic),cy=new RegExp("^"+sy+oy+ay+ly+"$"),hy=["material","materials","bones"];class uy{constructor(e,t,n){const i=n||tt.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,s=n.length;i!==s;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class tt{constructor(e,t,n){this.path=t,this.parsedPath=n||tt.parseTrackName(t),this.node=tt.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new tt.Composite(e,t,n):new tt(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(iy,"")}static parseTrackName(e){const t=cy.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const s=n.nodeName.substring(i+1);hy.indexOf(s)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=s)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(s){for(let o=0;o<s.length;o++){const a=s[o];if(a.name===t||a.uuid===t)return a;const c=n(a.children);if(c)return c}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let s=t.propertyIndex;if(e||(e=tt.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(n){let h=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let u=0;u<e.length;u++)if(e[u].name===h){h=u;break}break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(h!==void 0){if(e[h]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[h]}}const o=e[i];if(o===void 0){const h=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+h+"."+i+" but it wasn't found.",e);return}let a=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?a=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(a=this.Versioning.MatrixWorldNeedsUpdate);let c=this.BindingType.Direct;if(s!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(e.geometry.isBufferGeometry){if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[s]!==void 0&&(s=e.morphTargetDictionary[s])}else{console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);return}}c=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=s}else o.fromArray!==void 0&&o.toArray!==void 0?(c=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(c=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=i;this.getValue=this.GetterByBindingType[c],this.setValue=this.SetterByBindingTypeAndVersioning[c][a]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}tt.Composite=uy;tt.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};tt.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};tt.prototype.GetterByBindingType=[tt.prototype._getValue_direct,tt.prototype._getValue_array,tt.prototype._getValue_arrayElement,tt.prototype._getValue_toArray];tt.prototype.SetterByBindingTypeAndVersioning=[[tt.prototype._setValue_direct,tt.prototype._setValue_direct_setNeedsUpdate,tt.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[tt.prototype._setValue_array,tt.prototype._setValue_array_setNeedsUpdate,tt.prototype._setValue_array_setMatrixWorldNeedsUpdate],[tt.prototype._setValue_arrayElement,tt.prototype._setValue_arrayElement_setNeedsUpdate,tt.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[tt.prototype._setValue_fromArray,tt.prototype._setValue_fromArray_setNeedsUpdate,tt.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class cf{constructor(){this.uuid=$t(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,i=arguments.length;n!==i;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,s=this._bindings,o=s.length;let a,c=e.length,h=this.nCachedObjects_;for(let u=0,f=arguments.length;u!==f;++u){const d=arguments[u],p=d.uuid;let v=t[p];if(v===void 0){v=c++,t[p]=v,e.push(d);for(let m=0,g=o;m!==g;++m)s[m].push(new tt(d,n[m],i[m]))}else if(v<h){a=e[v];const m=--h,g=e[m];t[g.uuid]=v,e[v]=g,t[p]=m,e[m]=d;for(let b=0,E=o;b!==E;++b){const A=s[b],S=A[m];let C=A[v];A[v]=S,C===void 0&&(C=new tt(d,n[b],i[b])),A[m]=C}}else e[v]!==a&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=h}remove(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_;for(let o=0,a=arguments.length;o!==a;++o){const c=arguments[o],h=c.uuid,u=t[h];if(u!==void 0&&u>=s){const f=s++,d=e[f];t[d.uuid]=u,e[u]=d,t[h]=f,e[f]=c;for(let p=0,v=i;p!==v;++p){const m=n[p],g=m[f],b=m[u];m[u]=g,m[f]=b}}}this.nCachedObjects_=s}uncache(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_,o=e.length;for(let a=0,c=arguments.length;a!==c;++a){const h=arguments[a],u=h.uuid,f=t[u];if(f!==void 0)if(delete t[u],f<s){const d=--s,p=e[d],v=--o,m=e[v];t[p.uuid]=f,e[f]=p,t[m.uuid]=d,e[d]=m,e.pop();for(let g=0,b=i;g!==b;++g){const E=n[g],A=E[d],S=E[v];E[f]=A,E[d]=S,E.pop()}}else{const d=--o,p=e[d];d>0&&(t[p.uuid]=f),e[f]=p,e.pop();for(let v=0,m=i;v!==m;++v){const g=n[v];g[f]=g[d],g.pop()}}}this.nCachedObjects_=s}subscribe_(e,t){const n=this._bindingsIndicesByPath;let i=n[e];const s=this._bindings;if(i!==void 0)return s[i];const o=this._paths,a=this._parsedPaths,c=this._objects,h=c.length,u=this.nCachedObjects_,f=new Array(h);i=s.length,n[e]=i,o.push(e),a.push(t),s.push(f);for(let d=u,p=c.length;d!==p;++d){const v=c[d];f[d]=new tt(v,e,t)}return f}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){const i=this._paths,s=this._parsedPaths,o=this._bindings,a=o.length-1,c=o[a],h=e[a];t[h]=n,o[n]=c,o.pop(),s[n]=s[a],s.pop(),i[n]=i[a],i.pop()}}}cf.prototype.isAnimationObjectGroup=!0;class dy{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const s=t.tracks,o=s.length,a=new Array(o),c={endingStart:Ni,endingEnd:Ni};for(let h=0;h!==o;++h){const u=s[h].createInterpolant(null);a[h]=u,u.settings=c}this._interpolantSettings=c,this._interpolants=a,this._propertyBindings=new Array(o),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=ed,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const i=this._clip.duration,s=e._clip.duration,o=s/i,a=i/s;e.warp(1,o,t),this.warp(a,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,s=i.time,o=this.timeScale;let a=this._timeScaleInterpolant;a===null&&(a=i._lendControlInterpolant(),this._timeScaleInterpolant=a);const c=a.parameterPositions,h=a.sampleValues;return c[0]=s,c[1]=s+n,h[0]=e/o,h[1]=t/o,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const s=this._startTime;if(s!==null){const c=(e-s)*n;if(c<0||n===0)return;this._startTime=null,t=n*c}t*=this._updateTimeScale(e);const o=this._updateTime(t),a=this._updateWeight(e);if(a>0){const c=this._interpolants,h=this._propertyBindings;switch(this.blendMode){case Yl:for(let u=0,f=c.length;u!==f;++u)c[u].evaluate(o),h[u].accumulateAdditive(a);break;case jo:default:for(let u=0,f=c.length;u!==f;++u)c[u].evaluate(o),h[u].accumulate(i,a)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;n!==null&&(t*=n.evaluate(e)[0],e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t))}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,s=this._loopCount;const o=n===td;if(e===0)return s===-1?i:o&&(s&1)===1?t-i:i;if(n===Qu){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(s===-1&&(e>=0?(s=0,this._setEndings(!0,this.repetitions===0,o)):this._setEndings(this.repetitions===0,!0,o)),i>=t||i<0){const a=Math.floor(i/t);i-=t*a,s+=Math.abs(a);const c=this.repetitions-s;if(c<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(c===1){const h=e<0;this._setEndings(h,!h,o)}else this._setEndings(!1,!1,o);this._loopCount=s,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:a})}}else this.time=i;if(o&&(s&1)===1)return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=Ui,i.endingEnd=Ui):(e?i.endingStart=this.zeroSlopeAtStart?Ui:Ni:i.endingStart=ws,t?i.endingEnd=this.zeroSlopeAtEnd?Ui:Ni:i.endingEnd=ws)}_scheduleFading(e,t,n){const i=this._mixer,s=i.time;let o=this._weightInterpolant;o===null&&(o=i._lendControlInterpolant(),this._weightInterpolant=o);const a=o.parameterPositions,c=o.sampleValues;return a[0]=s,c[0]=t,a[1]=s+e,c[1]=n,this}}class hf extends vi{constructor(e){super();this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,s=i.length,o=e._propertyBindings,a=e._interpolants,c=n.uuid,h=this._bindingsByRootAndName;let u=h[c];u===void 0&&(u={},h[c]=u);for(let f=0;f!==s;++f){const d=i[f],p=d.name;let v=u[p];if(v!==void 0)++v.referenceCount,o[f]=v;else{if(v=o[f],v!==void 0){v._cacheIndex===null&&(++v.referenceCount,this._addInactiveBinding(v,c,p));continue}const m=t&&t._propertyBindings[f].binding.parsedPath;v=new lf(tt.create(n,p,m),d.ValueTypeName,d.getValueSize()),++v.referenceCount,this._addInactiveBinding(v,c,p),o[f]=v}a[f].resultBuffer=v.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,s=this._actionsByClip[i];this._bindAction(e,s&&s.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];s.useCount++===0&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.useCount===0&&(s.restoreOriginalState(),this._takeBackBinding(s))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,s=this._actionsByClip;let o=s[t];if(o===void 0)o={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,s[t]=o;else{const a=o.knownActions;e._byClipCacheIndex=a.length,a.push(e)}e._cacheIndex=i.length,i.push(e),o.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const s=e._clip.uuid,o=this._actionsByClip,a=o[s],c=a.knownActions,h=c[c.length-1],u=e._byClipCacheIndex;h._byClipCacheIndex=u,c[u]=h,c.pop(),e._byClipCacheIndex=null;const f=a.actionByRoot,d=(e._localRoot||this._root).uuid;delete f[d],c.length===0&&delete o[s],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.referenceCount===0&&this._removeInactiveBinding(s)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,s=this._bindings;let o=i[t];o===void 0&&(o={},i[t]=o),o[n]=e,e._cacheIndex=s.length,s.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,s=n.path,o=this._bindingsByRootAndName,a=o[i],c=t[t.length-1],h=e._cacheIndex;c._cacheIndex=h,t[h]=c,t.pop(),delete a[s],Object.keys(a).length===0&&delete o[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new vc(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,s=t[i];e.__cacheIndex=i,t[i]=e,s.__cacheIndex=n,t[n]=s}clipAction(e,t,n){const i=t||this._root,s=i.uuid;let o=typeof e=="string"?Ls.findByName(i,e):e;const a=o!==null?o.uuid:e,c=this._actionsByClip[a];let h=null;if(n===void 0&&(o!==null?n=o.blendMode:n=jo),c!==void 0){const f=c.actionByRoot[s];if(f!==void 0&&f.blendMode===n)return f;h=c.knownActions[0],o===null&&(o=h._clip)}if(o===null)return null;const u=new dy(this,o,t,n);return this._bindAction(u,h),this._addInactiveAction(u,a,s),u}existingAction(e,t){const n=t||this._root,i=n.uuid,s=typeof e=="string"?Ls.findByName(n,e):e,o=s?s.uuid:e,a=this._actionsByClip[o];return a!==void 0&&a.actionByRoot[i]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,s=Math.sign(e),o=this._accuIndex^=1;for(let h=0;h!==n;++h)t[h]._update(i,e,s,o);const a=this._bindings,c=this._nActiveBindings;for(let h=0;h!==c;++h)a[h].apply(o);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,s=i[n];if(s!==void 0){const o=s.knownActions;for(let a=0,c=o.length;a!==c;++a){const h=o[a];this._deactivateAction(h);const u=h._cacheIndex,f=t[t.length-1];h._cacheIndex=null,h._byClipCacheIndex=null,f._cacheIndex=u,t[u]=f,t.pop(),this._removeInactiveBindingsForAction(h)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const o in n){const a=n[o].actionByRoot,c=a[t];c!==void 0&&(this._deactivateAction(c),this._removeInactiveAction(c))}const i=this._bindingsByRootAndName,s=i[t];if(s!==void 0)for(const o in s){const a=s[o];a.restoreOriginalState(),this._removeInactiveBinding(a)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}hf.prototype._controlInterpolantsResultBuffer=new Float32Array(1);class _a{constructor(e){typeof e=="string"&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),e=arguments[1]),this.value=e}clone(){return new _a(this.value.clone===void 0?this.value:this.value.clone())}}class uf extends rr{constructor(e,t,n=1){super(e,t);this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}uf.prototype.isInstancedInterleavedBuffer=!0;class df{constructor(e,t,n,i,s){this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=i,this.count=s,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}df.prototype.isGLBufferAttribute=!0;class fy{constructor(e,t,n=0,i=1/0){this.ray=new xi(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new $o,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,n=[]){return zl(e,this,n,t),n.sort(jh),n}intersectObjects(e,t=!0,n=[]){for(let i=0,s=e.length;i<s;i++)zl(e[i],this,n,t);return n.sort(jh),n}}function jh(r,e){return r.distance-e.distance}function zl(r,e,t,n){if(r.layers.test(e.layers)&&r.raycast(e,t),n===!0){const i=r.children;for(let s=0,o=i.length;s<o;s++)zl(i[s],e,t,!0)}}class py{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(yt(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class my{constructor(e=1,t=0,n=0){return this.radius=e,this.theta=t,this.y=n,this}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return new this.constructor().copy(this)}}const $h=new se;class Kr{constructor(e=new se(1/0,1/0),t=new se(-1/0,-1/0)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=$h.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return $h.copy(e).clamp(this.min,this.max).sub(e).length()}intersect(e){return this.min.max(e.min),this.max.min(e.max),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}Kr.prototype.isBox2=!0;const Qh=new P,Lo=new P;class ff{constructor(e=new P,t=new P){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){Qh.subVectors(e,this.start),Lo.subVectors(this.end,this.start);const n=Lo.dot(Lo);let s=Lo.dot(Qh)/n;return t&&(s=yt(s,0,1)),s}closestPointToPoint(e,t,n){const i=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const eu=new P;class gy extends $e{constructor(e,t){super();this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t;const n=new Oe,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let o=0,a=1,c=32;o<c;o++,a++){const h=o/c*Math.PI*2,u=a/c*Math.PI*2;i.push(Math.cos(h),Math.sin(h),1,Math.cos(u),Math.sin(u),1)}n.setAttribute("position",new Te(i,3));const s=new Dt({fog:!1,toneMapped:!1});this.cone=new qt(n,s),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateMatrixWorld();const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),eu.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(eu),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const ai=new P,Po=new Se,rl=new Se;class pf extends qt{constructor(e){const t=mf(e),n=new Oe,i=[],s=[],o=new xe(0,0,1),a=new xe(0,1,0);for(let h=0;h<t.length;h++){const u=t[h];u.parent&&u.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),s.push(o.r,o.g,o.b),s.push(a.r,a.g,a.b))}n.setAttribute("position",new Te(i,3)),n.setAttribute("color",new Te(s,3));const c=new Dt({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,c);this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");rl.copy(this.root.matrixWorld).invert();for(let s=0,o=0;s<t.length;s++){const a=t[s];a.parent&&a.parent.isBone&&(Po.multiplyMatrices(rl,a.matrixWorld),ai.setFromMatrixPosition(Po),i.setXYZ(o,ai.x,ai.y,ai.z),Po.multiplyMatrices(rl,a.parent.matrixWorld),ai.setFromMatrixPosition(Po),i.setXYZ(o+1,ai.x,ai.y,ai.z),o+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}}function mf(r){const e=[];r.isBone===!0&&e.push(r);for(let t=0;t<r.children.length;t++)e.push.apply(e,mf(r.children[t]));return e}class vy extends St{constructor(e,t,n){const i=new er(t,4,2),s=new Jn({wireframe:!0,fog:!1,toneMapped:!1});super(i,s);this.light=e,this.light.updateMatrixWorld(),this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const _y=new P,tu=new xe,nu=new xe;class yy extends $e{constructor(e,t,n){super();this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n;const i=new $i(t);i.rotateY(Math.PI*.5),this.material=new Jn({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const s=i.getAttribute("position"),o=new Float32Array(s.count*3);i.setAttribute("color",new et(o,3)),this.add(new St(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");tu.copy(this.light.color),nu.copy(this.light.groundColor);for(let n=0,i=t.count;n<i;n++){const s=n<i/2?tu:nu;t.setXYZ(n,s.r,s.g,s.b)}t.needsUpdate=!0}e.lookAt(_y.setFromMatrixPosition(this.light.matrixWorld).negate())}}class gf extends qt{constructor(e=10,t=10,n=4473924,i=8947848){n=new xe(n),i=new xe(i);const s=t/2,o=e/t,a=e/2,c=[],h=[];for(let d=0,p=0,v=-a;d<=t;d++,v+=o){c.push(-a,0,v,a,0,v),c.push(v,0,-a,v,0,a);const m=d===s?n:i;m.toArray(h,p),p+=3,m.toArray(h,p),p+=3,m.toArray(h,p),p+=3,m.toArray(h,p),p+=3}const u=new Oe;u.setAttribute("position",new Te(c,3)),u.setAttribute("color",new Te(h,3));const f=new Dt({vertexColors:!0,toneMapped:!1});super(u,f);this.type="GridHelper"}}class xy extends qt{constructor(e=10,t=16,n=8,i=64,s=4473924,o=8947848){s=new xe(s),o=new xe(o);const a=[],c=[];for(let f=0;f<=t;f++){const d=f/t*(Math.PI*2),p=Math.sin(d)*e,v=Math.cos(d)*e;a.push(0,0,0),a.push(p,0,v);const m=f&1?s:o;c.push(m.r,m.g,m.b),c.push(m.r,m.g,m.b)}for(let f=0;f<=n;f++){const d=f&1?s:o,p=e-e/n*f;for(let v=0;v<i;v++){let m=v/i*(Math.PI*2),g=Math.sin(m)*p,b=Math.cos(m)*p;a.push(g,0,b),c.push(d.r,d.g,d.b),m=(v+1)/i*(Math.PI*2),g=Math.sin(m)*p,b=Math.cos(m)*p,a.push(g,0,b),c.push(d.r,d.g,d.b)}}const h=new Oe;h.setAttribute("position",new Te(a,3)),h.setAttribute("color",new Te(c,3));const u=new Dt({vertexColors:!0,toneMapped:!1});super(h,u);this.type="PolarGridHelper"}}const iu=new P,Io=new P,ru=new P;class My extends $e{constructor(e,t,n){super();this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,t===void 0&&(t=1);let i=new Oe;i.setAttribute("position",new Te([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const s=new Dt({fog:!1,toneMapped:!1});this.lightPlane=new Yn(i,s),this.add(this.lightPlane),i=new Oe,i.setAttribute("position",new Te([0,0,0,0,0,1],3)),this.targetLine=new Yn(i,s),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){iu.setFromMatrixPosition(this.light.matrixWorld),Io.setFromMatrixPosition(this.light.target.matrixWorld),ru.subVectors(Io,iu),this.lightPlane.lookAt(Io),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Io),this.targetLine.scale.z=ru.length()}}const Do=new P,gt=new Fs;class wy extends qt{constructor(e){const t=new Oe,n=new Dt({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],s=[],o={},a=new xe(16755200),c=new xe(16711680),h=new xe(43775),u=new xe(16777215),f=new xe(3355443);d("n1","n2",a),d("n2","n4",a),d("n4","n3",a),d("n3","n1",a),d("f1","f2",a),d("f2","f4",a),d("f4","f3",a),d("f3","f1",a),d("n1","f1",a),d("n2","f2",a),d("n3","f3",a),d("n4","f4",a),d("p","n1",c),d("p","n2",c),d("p","n3",c),d("p","n4",c),d("u1","u2",h),d("u2","u3",h),d("u3","u1",h),d("c","t",u),d("p","c",f),d("cn1","cn2",f),d("cn3","cn4",f),d("cf1","cf2",f),d("cf3","cf4",f);function d(v,m,g){p(v,g),p(m,g)}function p(v,m){i.push(0,0,0),s.push(m.r,m.g,m.b),o[v]===void 0&&(o[v]=[]),o[v].push(i.length/3-1)}t.setAttribute("position",new Te(i,3)),t.setAttribute("color",new Te(s,3));super(t,n);this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=o,this.update()}update(){const e=this.geometry,t=this.pointMap,n=1,i=1;gt.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),vt("c",t,e,gt,0,0,-1),vt("t",t,e,gt,0,0,1),vt("n1",t,e,gt,-n,-i,-1),vt("n2",t,e,gt,n,-i,-1),vt("n3",t,e,gt,-n,i,-1),vt("n4",t,e,gt,n,i,-1),vt("f1",t,e,gt,-n,-i,1),vt("f2",t,e,gt,n,-i,1),vt("f3",t,e,gt,-n,i,1),vt("f4",t,e,gt,n,i,1),vt("u1",t,e,gt,n*.7,i*1.1,-1),vt("u2",t,e,gt,-n*.7,i*1.1,-1),vt("u3",t,e,gt,0,i*2,-1),vt("cf1",t,e,gt,-n,0,1),vt("cf2",t,e,gt,n,0,1),vt("cf3",t,e,gt,0,-i,1),vt("cf4",t,e,gt,0,i,1),vt("cn1",t,e,gt,-n,0,-1),vt("cn2",t,e,gt,n,0,-1),vt("cn3",t,e,gt,0,-i,-1),vt("cn4",t,e,gt,0,i,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function vt(r,e,t,n,i,s,o){Do.set(i,s,o).unproject(n);const a=e[r];if(a!==void 0){const c=t.getAttribute("position");for(let h=0,u=a.length;h<u;h++)c.setXYZ(a[h],Do.x,Do.y,Do.z)}}const Fo=new en;class vf extends qt{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(8*3),s=new Oe;s.setIndex(new et(n,1)),s.setAttribute("position",new et(i,3));super(s,new Dt({color:t,toneMapped:!1}));this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(e!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&Fo.setFromObject(this.object),Fo.isEmpty())return;const t=Fo.min,n=Fo.max,i=this.geometry.attributes.position,s=i.array;s[0]=n.x,s[1]=n.y,s[2]=n.z,s[3]=t.x,s[4]=n.y,s[5]=n.z,s[6]=t.x,s[7]=t.y,s[8]=n.z,s[9]=n.x,s[10]=t.y,s[11]=n.z,s[12]=n.x,s[13]=n.y,s[14]=t.z,s[15]=t.x,s[16]=n.y,s[17]=t.z,s[18]=t.x,s[19]=t.y,s[20]=t.z,s[21]=n.x,s[22]=t.y,s[23]=t.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e){return qt.prototype.copy.call(this,e),this.object=e.object,this}}class by extends qt{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],s=new Oe;s.setIndex(new et(n,1)),s.setAttribute("position",new Te(i,3));super(s,new Dt({color:t,toneMapped:!1}));this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}}class Ey extends Yn{constructor(e,t=1,n=16776960){const i=n,s=[1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],o=new Oe;o.setAttribute("position",new Te(s,3)),o.computeBoundingSphere();super(o,new Dt({color:i,toneMapped:!1}));this.type="PlaneHelper",this.plane=e,this.size=t;const a=[1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],c=new Oe;c.setAttribute("position",new Te(a,3)),c.computeBoundingSphere(),this.add(new St(c,new Jn({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){let t=-this.plane.constant;Math.abs(t)<1e-8&&(t=1e-8),this.scale.set(.5*this.size,.5*this.size,t),this.children[0].material.side=t<0?jt:qi,this.lookAt(this.plane.normal),super.updateMatrixWorld(e)}}const su=new P;let Oo,sl;class Ty extends $e{constructor(e=new P(0,0,1),t=new P(0,0,0),n=1,i=16776960,s=n*.2,o=s*.2){super();this.type="ArrowHelper",Oo===void 0&&(Oo=new Oe,Oo.setAttribute("position",new Te([0,0,0,0,1,0],3)),sl=new mi(0,.5,1,5,1),sl.translate(0,-.5,0)),this.position.copy(t),this.line=new Yn(Oo,new Dt({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new St(sl,new Jn({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,s,o)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{su.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(su,t)}}setLength(e,t=e*.2,n=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}}class _f extends qt{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new Oe;i.setAttribute("position",new Te(t,3)),i.setAttribute("color",new Te(n,3));const s=new Dt({vertexColors:!0,toneMapped:!1});super(i,s);this.type="AxesHelper"}setColors(e,t,n){const i=new xe,s=this.geometry.attributes.color.array;return i.set(e),i.toArray(s,0),i.toArray(s,3),i.set(t),i.toArray(s,6),i.toArray(s,9),i.set(n),i.toArray(s,12),i.toArray(s,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class Sy{constructor(){this.type="ShapePath",this.color=new xe,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new Fr,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this}bezierCurveTo(e,t,n,i,s,o){return this.currentPath.bezierCurveTo(e,t,n,i,s,o),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e,t){function n(E){const A=[];for(let S=0,C=E.length;S<C;S++){const N=E[S],U=new Tn;U.curves=N.curves,A.push(U)}return A}function i(E,A){const S=A.length;let C=!1;for(let N=S-1,U=0;U<S;N=U++){let D=A[N],K=A[U],G=K.x-D.x,R=K.y-D.y;if(Math.abs(R)>Number.EPSILON){if(R<0&&(D=A[U],G=-G,K=A[N],R=-R),E.y<D.y||E.y>K.y)continue;if(E.y===D.y){if(E.x===D.x)return!0}else{const H=R*(E.x-D.x)-G*(E.y-D.y);if(H===0)return!0;if(H<0)continue;C=!C}}else{if(E.y!==D.y)continue;if(K.x<=E.x&&E.x<=D.x||D.x<=E.x&&E.x<=K.x)return!0}}return C}const s=Sn.isClockWise,o=this.subPaths;if(o.length===0)return[];if(t===!0)return n(o);let a,c,h;const u=[];if(o.length===1)return c=o[0],h=new Tn,h.curves=c.curves,u.push(h),u;let f=!s(o[0].getPoints());f=e?!f:f;const d=[],p=[];let v=[],m=0,g;p[m]=void 0,v[m]=[];for(let E=0,A=o.length;E<A;E++)c=o[E],g=c.getPoints(),a=s(g),a=e?!a:a,a?(!f&&p[m]&&m++,p[m]={s:new Tn,p:g},p[m].s.curves=c.curves,f&&m++,v[m]=[]):v[m].push({h:c,p:g[0]});if(!p[0])return n(o);if(p.length>1){let E=!1,A=0;for(let S=0,C=p.length;S<C;S++)d[S]=[];for(let S=0,C=p.length;S<C;S++){const N=v[S];for(let U=0;U<N.length;U++){const D=N[U];let K=!0;for(let G=0;G<p.length;G++)i(D.p,p[G].p)&&(S!==G&&A++,K?(K=!1,d[G].push(D)):E=!0);K&&d[S].push(D)}}A>0&&E===!1&&(v=d)}let b;for(let E=0,A=p.length;E<A;E++){h=p[E].s,u.push(h),b=v[E];for(let S=0,C=b.length;S<C;S++)h.holes.push(b[S].h)}return u}}class Ay{static toHalfFloat(e){Math.abs(e)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),e=yt(e,-65504,65504),ou[0]=e;const t=au[0],n=t>>23&511;return mn[n]+((t&8388607)>>gn[n])}static fromHalfFloat(e){const t=e>>10;return au[0]=Dc[xf[t]+(e&1023)]+jr[t],ou[0]}}const yf=new ArrayBuffer(4),ou=new Float32Array(yf),au=new Uint32Array(yf),mn=new Uint32Array(512),gn=new Uint32Array(512);for(let r=0;r<256;++r){const e=r-127;e<-27?(mn[r]=0,mn[r|256]=32768,gn[r]=24,gn[r|256]=24):e<-14?(mn[r]=1024>>-e-14,mn[r|256]=1024>>-e-14|32768,gn[r]=-e-1,gn[r|256]=-e-1):e<=15?(mn[r]=e+15<<10,mn[r|256]=e+15<<10|32768,gn[r]=13,gn[r|256]=13):e<128?(mn[r]=31744,mn[r|256]=64512,gn[r]=24,gn[r|256]=24):(mn[r]=31744,mn[r|256]=64512,gn[r]=13,gn[r|256]=13)}const Dc=new Uint32Array(2048),jr=new Uint32Array(64),xf=new Uint32Array(64);for(let r=1;r<1024;++r){let e=r<<13,t=0;for(;(e&8388608)===0;)e<<=1,t-=8388608;e&=-8388609,t+=947912704,Dc[r]=e|t}for(let r=1024;r<2048;++r)Dc[r]=939524096+(r-1024<<13);for(let r=1;r<31;++r)jr[r]=r<<23;jr[31]=1199570944;jr[32]=2147483648;for(let r=33;r<63;++r)jr[r]=2147483648+(r-32<<23);jr[63]=3347054592;for(let r=1;r<64;++r)r!==32&&(xf[r]=1024);const Ry=0,Cy=1,Ly=0,Py=1,Iy=2;function Dy(r){return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."),r}function Fy(r=[]){return console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),r.isMultiMaterial=!0,r.materials=r,r.clone=function(){return r.slice()},r}class Oy extends Hs{constructor(e,t){console.warn("THREE.PointCloud has been renamed to THREE.Points.");super(e,t)}}class Ny extends la{constructor(e){console.warn("THREE.Particle has been renamed to THREE.Sprite.");super(e)}}class Uy extends Hs{constructor(e,t){console.warn("THREE.ParticleSystem has been renamed to THREE.Points.");super(e,t)}}class By extends sr{constructor(e){console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.");super(e)}}class Hy extends sr{constructor(e){console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.");super(e)}}class zy extends sr{constructor(e){console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.");super(e)}}class Gy extends P{constructor(e,t,n){console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead.");super(e,t,n)}}class ky extends et{constructor(e,t){console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead.");super(e,t);this.setUsage(Ir)}}class Vy extends pd{constructor(e,t){console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.");super(e,t)}}class Wy extends md{constructor(e,t){console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.");super(e,t)}}class Xy extends gd{constructor(e,t){console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.");super(e,t)}}class qy extends vd{constructor(e,t){console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.");super(e,t)}}class Yy extends Qo{constructor(e,t){console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.");super(e,t)}}class Zy extends _d{constructor(e,t){console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.");super(e,t)}}class Jy extends ea{constructor(e,t){console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.");super(e,t)}}class Ky extends Te{constructor(e,t){console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.");super(e,t)}}class jy extends xd{constructor(e,t){console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.");super(e,t)}}Qt.create=function(r,e){return console.log("THREE.Curve.create() has been deprecated"),r.prototype=Object.create(Qt.prototype),r.prototype.constructor=r,r.prototype.getPoint=e,r};Fr.prototype.fromPoints=function(r){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(r)};class $y extends _f{constructor(e){console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper.");super(e)}}class Qy extends vf{constructor(e,t){console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.");super(e,t)}}class ex extends qt{constructor(e,t){console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.");super(new oc(e.geometry),new Dt({color:t!==void 0?t:16777215}))}}gf.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")};pf.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")};class tx extends qt{constructor(e,t){console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.");super(new ac(e.geometry),new Dt({color:t!==void 0?t:16777215}))}}Vt.prototype.extractUrlBase=function(r){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),Zo.extractUrlBase(r)};Vt.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}};class nx extends Ln{constructor(e){console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader.");super(e)}}class ix extends Zd{constructor(e){console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.");super(e)}}Kr.prototype.center=function(r){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(r)};Kr.prototype.empty=function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()};Kr.prototype.isIntersectionBox=function(r){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(r)};Kr.prototype.size=function(r){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(r)};en.prototype.center=function(r){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(r)};en.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()};en.prototype.isIntersectionBox=function(r){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(r)};en.prototype.isIntersectionSphere=function(r){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(r)};en.prototype.size=function(r){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(r)};Mi.prototype.toVector3=function(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")};yi.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()};Os.prototype.setFromMatrix=function(r){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(r)};ff.prototype.center=function(r){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(r)};Lt.prototype.flattenToArrayOffset=function(r,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(r,e)};Lt.prototype.multiplyVector3=function(r){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),r.applyMatrix3(this)};Lt.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")};Lt.prototype.applyToBufferAttribute=function(r){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),r.applyMatrix3(this)};Lt.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")};Lt.prototype.getInverse=function(r){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(r).invert()};Se.prototype.extractPosition=function(r){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(r)};Se.prototype.flattenToArrayOffset=function(r,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(r,e)};Se.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),new P().setFromMatrixColumn(this,3)};Se.prototype.setRotationFromQuaternion=function(r){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(r)};Se.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")};Se.prototype.multiplyVector3=function(r){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),r.applyMatrix4(this)};Se.prototype.multiplyVector4=function(r){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),r.applyMatrix4(this)};Se.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")};Se.prototype.rotateAxis=function(r){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),r.transformDirection(this)};Se.prototype.crossVector=function(r){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),r.applyMatrix4(this)};Se.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")};Se.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")};Se.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")};Se.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")};Se.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")};Se.prototype.applyToBufferAttribute=function(r){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),r.applyMatrix4(this)};Se.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")};Se.prototype.makeFrustum=function(r,e,t,n,i,s){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(r,e,n,t,i,s)};Se.prototype.getInverse=function(r){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(r).invert()};bn.prototype.isIntersectionLine=function(r){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(r)};Ot.prototype.multiplyVector3=function(r){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),r.applyQuaternion(this)};Ot.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()};xi.prototype.isIntersectionBox=function(r){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(r)};xi.prototype.isIntersectionPlane=function(r){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(r)};xi.prototype.isIntersectionSphere=function(r){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(r)};xt.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()};xt.prototype.barycoordFromPoint=function(r,e){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(r,e)};xt.prototype.midpoint=function(r){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(r)};xt.prototypenormal=function(r){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(r)};xt.prototype.plane=function(r){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(r)};xt.barycoordFromPoint=function(r,e,t,n,i){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),xt.getBarycoord(r,e,t,n,i)};xt.normal=function(r,e,t,n){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),xt.getNormal(r,e,t,n)};Tn.prototype.extractAllPoints=function(r){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(r)};Tn.prototype.extrude=function(r){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new Cn(this,r)};Tn.prototype.makeGeometry=function(r){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new Qi(this,r)};se.prototype.fromAttribute=function(r,e,t){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(r,e,t)};se.prototype.distanceToManhattan=function(r){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(r)};se.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()};P.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")};P.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")};P.prototype.getPositionFromMatrix=function(r){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(r)};P.prototype.getScaleFromMatrix=function(r){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(r)};P.prototype.getColumnFromMatrix=function(r,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,r)};P.prototype.applyProjection=function(r){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(r)};P.prototype.fromAttribute=function(r,e,t){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(r,e,t)};P.prototype.distanceToManhattan=function(r){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(r)};P.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()};st.prototype.fromAttribute=function(r,e,t){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(r,e,t)};st.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()};$e.prototype.getChildByName=function(r){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(r)};$e.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")};$e.prototype.translate=function(r,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,r)};$e.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")};$e.prototype.applyMatrix=function(r){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(r)};Object.defineProperties($e.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(r){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=r}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}});St.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")};Object.defineProperties(St.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),nd},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}});ca.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")};It.prototype.setLens=function(r,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),e!==void 0&&(this.filmGauge=e),this.setFocalLength(r)};Object.defineProperties(_n.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(r){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=r}},shadowCameraLeft:{set:function(r){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=r}},shadowCameraRight:{set:function(r){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=r}},shadowCameraTop:{set:function(r){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=r}},shadowCameraBottom:{set:function(r){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=r}},shadowCameraNear:{set:function(r){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=r}},shadowCameraFar:{set:function(r){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=r}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(r){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=r}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(r){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=r}},shadowMapHeight:{set:function(r){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=r}}});Object.defineProperties(et.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===Ir},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(Ir)}}});et.prototype.setDynamic=function(r){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(r===!0?Ir:Pr),this};et.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},et.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")};Oe.prototype.addIndex=function(r){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(r)};Oe.prototype.addAttribute=function(r,e){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),!(e&&e.isBufferAttribute)&&!(e&&e.isInterleavedBufferAttribute)?(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(r,new et(arguments[1],arguments[2]))):r==="index"?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(e),this):this.setAttribute(r,e)};Oe.prototype.addDrawCall=function(r,e,t){t!==void 0&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(r,e)};Oe.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()};Oe.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")};Oe.prototype.removeAttribute=function(r){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(r)};Oe.prototype.applyMatrix=function(r){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(r)};Object.defineProperties(Oe.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}});rr.prototype.setDynamic=function(r){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(r===!0?Ir:Pr),this};rr.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")};Cn.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")};Cn.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")};Cn.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")};oa.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")};_a.prototype.onUpdate=function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this};Object.defineProperties(Mt.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new xe}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(r){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=r===Vl}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(r){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=r}},vertexTangents:{get:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")},set:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")}}});Object.defineProperties(ln.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(r){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=r}}});at.prototype.clearTarget=function(r,e,t,n){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(r),this.clear(e,t,n)};at.prototype.animate=function(r){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(r)};at.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()};at.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()};at.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision};at.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()};at.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")};at.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")};at.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")};at.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")};at.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")};at.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")};at.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures};at.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")};at.prototype.enableScissorTest=function(r){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(r)};at.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")};at.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")};at.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")};at.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")};at.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")};at.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")};at.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")};at.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")};at.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")};at.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()};Object.defineProperties(at.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(r){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=r}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(r){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=r}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(r){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=r===!0?dt:An}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}},gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}});Object.defineProperties(Ld.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}});class rx extends na{constructor(e,t,n){console.warn("THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options ).");super(e,n)}}Object.defineProperties(Gt.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(r){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=r}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(r){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=r}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(r){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=r}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(r){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=r}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(r){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=r}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(r){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=r}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(r){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=r}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(r){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=r}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(r){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=r}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(r){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=r}}});Lc.prototype.load=function(r){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const e=this;return new nf().load(r,function(n){e.setBuffer(n)}),this};af.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()};ta.prototype.updateCubeMap=function(r,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(r,e)};ta.prototype.clear=function(r,e,t,n){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(r,e,t,n)};_i.crossOrigin=void 0;_i.loadTexture=function(r,e,t,n){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const i=new Jd;i.setCrossOrigin(this.crossOrigin);const s=i.load(r,t,void 0,n);return e&&(s.mapping=e),s};_i.loadTextureCube=function(r,e,t,n){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const i=new Yd;i.setCrossOrigin(this.crossOrigin);const s=i.load(r,t,void 0,n);return e&&(s.mapping=e),s};_i.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")};_i.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};function sx(){console.error("THREE.CanvasRenderer has been removed")}function ox(){console.error("THREE.JSONLoader has been removed.")}const ax={createMultiMaterialObject:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},detach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},attach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")}};function lx(){console.error("THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js")}class cx extends Oe{constructor(){console.error("THREE.ParametricGeometry has been moved to /examples/jsm/geometries/ParametricGeometry.js");super()}}class hx extends Oe{constructor(){console.error("THREE.TextGeometry has been moved to /examples/jsm/geometries/TextGeometry.js");super()}}function ux(){console.error("THREE.FontLoader has been moved to /examples/jsm/loaders/FontLoader.js")}function dx(){console.error("THREE.Font has been moved to /examples/jsm/loaders/FontLoader.js")}function fx(){console.error("THREE.ImmediateRenderObject has been removed.")}class px extends Gt{constructor(e,t,n){console.error('THREE.WebGLMultisampleRenderTarget has been removed. Use a normal render target and set the "samples" property to greater 0 to enable multisampling.');super(e,t,n);this.samples=4}}class mx extends qr{constructor(e,t,n,i){console.warn("THREE.DataTexture2DArray has been renamed to DataArrayTexture.");super(e,t,n,i)}}class gx extends Ds{constructor(e,t,n,i){console.warn("THREE.DataTexture3D has been renamed to Data3DTexture.");super(e,t,n,i)}}typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Jo}}));typeof window!="undefined"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Jo);w.ACESFilmicToneMapping=Nu;w.AddEquation=Fi;w.AddOperation=Iu;w.AdditiveAnimationBlendMode=Yl;w.AdditiveBlending=al;w.AlphaFormat=Vu;w.AlwaysDepth=Tu;w.AlwaysStencilFunc=od;w.AmbientLight=Tc;w.AmbientLightProbe=sf;w.AnimationClip=Ls;w.AnimationLoader=Z0;w.AnimationMixer=hf;w.AnimationObjectGroup=cf;w.AnimationUtils=ft;w.ArcCurve=tc;w.ArrayCamera=Kl;w.ArrowHelper=Ty;w.Audio=Lc;w.AudioAnalyser=af;w.AudioContext=Cc;w.AudioListener=ey;w.AudioLoader=nf;w.AxesHelper=_f;w.AxisHelper=$y;w.BackSide=jt;w.BasicDepthPacking=id;w.BasicShadowMap=Vf;w.BinaryTextureLoader=ix;w.Bone=ha;w.BooleanKeyframeTrack=or;w.BoundingBoxHelper=Qy;w.Box2=Kr;w.Box3=en;w.Box3Helper=by;w.BoxBufferGeometry=qn;w.BoxGeometry=qn;w.BoxHelper=vf;w.BufferAttribute=et;w.BufferGeometry=Oe;w.BufferGeometryLoader=ef;w.ByteType=Bu;w.Cache=tr;w.Camera=Fs;w.CameraHelper=wy;w.CanvasRenderer=sx;w.CanvasTexture=Ud;w.CapsuleBufferGeometry=Or;w.CapsuleGeometry=Or;w.CatmullRomCurve3=ic;w.CineonToneMapping=Ou;w.CircleBufferGeometry=Nr;w.CircleGeometry=Nr;w.ClampToEdgeWrapping=zt;w.Clock=of;w.Color=xe;w.ColorKeyframeTrack=_c;w.ColorManagement=an;w.CompressedTexture=ec;w.CompressedTextureLoader=J0;w.ConeBufferGeometry=Ur;w.ConeGeometry=Ur;w.CubeCamera=ta;w.CubeReflectionMapping=ui;w.CubeRefractionMapping=di;w.CubeTexture=Yr;w.CubeTextureLoader=Yd;w.CubeUVReflectionMapping=Xr;w.CubicBezierCurve=da;w.CubicBezierCurve3=rc;w.CubicInterpolant=Vd;w.CullFaceBack=ol;w.CullFaceFront=hu;w.CullFaceFrontBack=kf;w.CullFaceNone=cu;w.Curve=Qt;w.CurvePath=Hd;w.CustomBlending=du;w.CustomToneMapping=Uu;w.CylinderBufferGeometry=mi;w.CylinderGeometry=mi;w.Cylindrical=my;w.Data3DTexture=Ds;w.DataArrayTexture=qr;w.DataTexture=Xi;w.DataTexture2DArray=mx;w.DataTexture3D=gx;w.DataTextureLoader=Zd;w.DataUtils=Ay;w.DecrementStencilOp=tp;w.DecrementWrapStencilOp=ip;w.DefaultLoadingManager=qd;w.DepthFormat=ci;w.DepthStencilFormat=Zi;w.DepthTexture=jl;w.DirectionalLight=Ec;w.DirectionalLightHelper=My;w.DiscreteInterpolant=Wd;w.DodecahedronBufferGeometry=Br;w.DodecahedronGeometry=Br;w.DoubleSide=Yi;w.DstAlphaFactor=yu;w.DstColorFactor=Mu;w.DynamicBufferAttribute=ky;w.DynamicCopyUsage=vp;w.DynamicDrawUsage=Ir;w.DynamicReadUsage=pp;w.EdgesGeometry=oc;w.EdgesHelper=ex;w.EllipseCurve=zs;w.EqualDepth=Au;w.EqualStencilFunc=ap;w.EquirectangularReflectionMapping=gs;w.EquirectangularRefractionMapping=vs;w.Euler=Mi;w.EventDispatcher=vi;w.ExtrudeBufferGeometry=Cn;w.ExtrudeGeometry=Cn;w.FaceColors=Py;w.FileLoader=Ln;w.FlatShading=Vl;w.Float16BufferAttribute=yd;w.Float32Attribute=Ky;w.Float32BufferAttribute=Te;w.Float64Attribute=jy;w.Float64BufferAttribute=xd;w.FloatType=Wn;w.Fog=Bs;w.FogExp2=Us;w.Font=dx;w.FontLoader=ux;w.FramebufferTexture=Nd;w.FrontSide=qi;w.Frustum=Os;w.GLBufferAttribute=df;w.GLSL1=yp;w.GLSL3=Dl;w.GreaterDepth=Cu;w.GreaterEqualDepth=Ru;w.GreaterEqualStencilFunc=up;w.GreaterStencilFunc=cp;w.GridHelper=gf;w.Group=Hi;w.HalfFloatType=Gi;w.HemisphereLight=xc;w.HemisphereLightHelper=yy;w.HemisphereLightProbe=rf;w.IcosahedronBufferGeometry=Hr;w.IcosahedronGeometry=Hr;w.ImageBitmapLoader=tf;w.ImageLoader=Ps;w.ImageUtils=_i;w.ImmediateRenderObject=fx;w.IncrementStencilOp=ep;w.IncrementWrapStencilOp=np;w.InstancedBufferAttribute=Ki;w.InstancedBufferGeometry=Rc;w.InstancedInterleavedBuffer=uf;w.InstancedMesh=$l;w.Int16Attribute=qy;w.Int16BufferAttribute=vd;w.Int32Attribute=Zy;w.Int32BufferAttribute=_d;w.Int8Attribute=Vy;w.Int8BufferAttribute=pd;w.IntType=zu;w.InterleavedBuffer=rr;w.InterleavedBufferAttribute=pi;w.Interpolant=Zn;w.InterpolateDiscrete=xs;w.InterpolateLinear=Ms;w.InterpolateSmooth=zo;w.InvertStencilOp=rp;w.JSONLoader=ox;w.KeepStencilOp=Go;w.KeyframeTrack=yn;w.LOD=Fd;w.LatheBufferGeometry=ji;w.LatheGeometry=ji;w.Layers=$o;w.LensFlare=lx;w.LessDepth=Su;w.LessEqualDepth=Vo;w.LessEqualStencilFunc=lp;w.LessStencilFunc=op;w.Light=_n;w.LightProbe=ks;w.Line=Yn;w.Line3=ff;w.LineBasicMaterial=Dt;w.LineCurve=Gs;w.LineCurve3=Bd;w.LineDashedMaterial=gc;w.LineLoop=Ql;w.LinePieces=Cy;w.LineSegments=qt;w.LineStrip=Ry;w.LinearEncoding=An;w.LinearFilter=_t;w.LinearInterpolant=vc;w.LinearMipMapLinearFilter=Zf;w.LinearMipMapNearestFilter=Yf;w.LinearMipmapLinearFilter=nr;w.LinearMipmapNearestFilter=ql;w.LinearSRGBColorSpace=li;w.LinearToneMapping=Du;w.Loader=Vt;w.LoaderUtils=Zo;w.LoadingManager=yc;w.LoopOnce=Qu;w.LoopPingPong=td;w.LoopRepeat=ed;w.LuminanceAlphaFormat=qu;w.LuminanceFormat=Xu;w.MOUSE=zf;w.Material=Mt;w.MaterialLoader=Qd;w.Math=ld;w.MathUtils=ld;w.Matrix3=Lt;w.Matrix4=Se;w.MaxEquation=ul;w.Mesh=St;w.MeshBasicMaterial=Jn;w.MeshDepthMaterial=ra;w.MeshDistanceMaterial=sa;w.MeshFaceMaterial=Dy;w.MeshLambertMaterial=pc;w.MeshMatcapMaterial=mc;w.MeshNormalMaterial=fc;w.MeshPhongMaterial=uc;w.MeshPhysicalMaterial=hc;w.MeshStandardMaterial=va;w.MeshToonMaterial=dc;w.MinEquation=hl;w.MirroredRepeatWrapping=ys;w.MixOperation=Pu;w.MultiMaterial=Fy;w.MultiplyBlending=cl;w.MultiplyOperation=Is;w.NearestFilter=Tt;w.NearestMipMapLinearFilter=qf;w.NearestMipMapNearestFilter=Xf;w.NearestMipmapLinearFilter=Xo;w.NearestMipmapNearestFilter=Wo;w.NeverDepth=Eu;w.NeverStencilFunc=sp;w.NoBlending=Xn;w.NoColorSpace=jf;w.NoColors=Ly;w.NoToneMapping=En;w.NormalAnimationBlendMode=jo;w.NormalBlending=zi;w.NotEqualDepth=Lu;w.NotEqualStencilFunc=hp;w.NumberKeyframeTrack=Rs;w.Object3D=$e;w.ObjectLoader=K0;w.ObjectSpaceNormalMap=sd;w.OctahedronBufferGeometry=$i;w.OctahedronGeometry=$i;w.OneFactor=gu;w.OneMinusDstAlphaFactor=xu;w.OneMinusDstColorFactor=wu;w.OneMinusSrcAlphaFactor=Xl;w.OneMinusSrcColorFactor=_u;w.OrthographicCamera=Ns;w.PCFShadowMap=kl;w.PCFSoftShadowMap=uu;w.PMREMGenerator=Ol;w.ParametricGeometry=cx;w.Particle=Ny;w.ParticleBasicMaterial=Hy;w.ParticleSystem=Uy;w.ParticleSystemMaterial=zy;w.Path=Fr;w.PerspectiveCamera=It;w.Plane=bn;w.PlaneBufferGeometry=Ji;w.PlaneGeometry=Ji;w.PlaneHelper=Ey;w.PointCloud=Oy;w.PointCloudMaterial=By;w.PointLight=bc;w.PointLightHelper=vy;w.Points=Hs;w.PointsMaterial=sr;w.PolarGridHelper=xy;w.PolyhedronBufferGeometry=Rn;w.PolyhedronGeometry=Rn;w.PositionalAudio=ny;w.PropertyBinding=tt;w.PropertyMixer=lf;w.QuadraticBezierCurve=fa;w.QuadraticBezierCurve3=pa;w.Quaternion=Ot;w.QuaternionKeyframeTrack=Jr;w.QuaternionLinearInterpolant=Xd;w.REVISION=Jo;w.RGBADepthPacking=rd;w.RGBAFormat=Kt;w.RGBAIntegerFormat=ju;w.RGBA_ASTC_10x10_Format=Cl;w.RGBA_ASTC_10x5_Format=Sl;w.RGBA_ASTC_10x6_Format=Al;w.RGBA_ASTC_10x8_Format=Rl;w.RGBA_ASTC_12x10_Format=Ll;w.RGBA_ASTC_12x12_Format=Pl;w.RGBA_ASTC_4x4_Format=_l;w.RGBA_ASTC_5x4_Format=yl;w.RGBA_ASTC_5x5_Format=xl;w.RGBA_ASTC_6x5_Format=Ml;w.RGBA_ASTC_6x6_Format=wl;w.RGBA_ASTC_8x5_Format=bl;w.RGBA_ASTC_8x6_Format=El;w.RGBA_ASTC_8x8_Format=Tl;w.RGBA_BPTC_Format=Il;w.RGBA_ETC2_EAC_Format=vl;w.RGBA_PVRTC_2BPPV1_Format=ml;w.RGBA_PVRTC_4BPPV1_Format=pl;w.RGBA_S3TC_DXT1_Format=Uo;w.RGBA_S3TC_DXT3_Format=Bo;w.RGBA_S3TC_DXT5_Format=Ho;w.RGBFormat=Wu;w.RGB_ETC1_Format=$u;w.RGB_ETC2_Format=gl;w.RGB_PVRTC_2BPPV1_Format=fl;w.RGB_PVRTC_4BPPV1_Format=dl;w.RGB_S3TC_DXT1_Format=No;w.RGFormat=Ju;w.RGIntegerFormat=Ku;w.RawShaderMaterial=cc;w.Ray=xi;w.Raycaster=fy;w.RectAreaLight=Sc;w.RedFormat=Yu;w.RedIntegerFormat=Zu;w.ReinhardToneMapping=Fu;w.RepeatWrapping=_s;w.ReplaceStencilOp=Qf;w.ReverseSubtractEquation=pu;w.RingBufferGeometry=zr;w.RingGeometry=zr;w.SRGBColorSpace=wn;w.Scene=oa;w.SceneUtils=ax;w.ShaderChunk=Je;w.ShaderLib=vn;w.ShaderMaterial=ln;w.ShadowMaterial=lc;w.Shape=Tn;w.ShapeBufferGeometry=Qi;w.ShapeGeometry=Qi;w.ShapePath=Sy;w.ShapeUtils=Sn;w.ShortType=Hu;w.Skeleton=ua;w.SkeletonHelper=pf;w.SkinnedMesh=ca;w.SmoothShading=Wf;w.Source=Bi;w.Sphere=yi;w.SphereBufferGeometry=er;w.SphereGeometry=er;w.Spherical=py;w.SphericalHarmonics3=Ac;w.SplineCurve=ma;w.SpotLight=wc;w.SpotLightHelper=gy;w.Sprite=la;w.SpriteMaterial=aa;w.SrcAlphaFactor=Wl;w.SrcAlphaSaturateFactor=bu;w.SrcColorFactor=vu;w.StaticCopyUsage=gp;w.StaticDrawUsage=Pr;w.StaticReadUsage=fp;w.StereoCamera=$0;w.StreamCopyUsage=_p;w.StreamDrawUsage=dp;w.StreamReadUsage=mp;w.StringKeyframeTrack=ar;w.SubtractEquation=fu;w.SubtractiveBlending=ll;w.TOUCH=Gf;w.TangentSpaceNormalMap=ir;w.TetrahedronBufferGeometry=Gr;w.TetrahedronGeometry=Gr;w.TextGeometry=hx;w.Texture=At;w.TextureLoader=Jd;w.TorusBufferGeometry=kr;w.TorusGeometry=kr;w.TorusKnotBufferGeometry=Vr;w.TorusKnotGeometry=Vr;w.Triangle=xt;w.TriangleFanDrawMode=Kf;w.TriangleStripDrawMode=Jf;w.TrianglesDrawMode=nd;w.TubeBufferGeometry=Wr;w.TubeGeometry=Wr;w.UVMapping=Ko;w.Uint16Attribute=Yy;w.Uint16BufferAttribute=Qo;w.Uint32Attribute=Jy;w.Uint32BufferAttribute=ea;w.Uint8Attribute=Wy;w.Uint8BufferAttribute=md;w.Uint8ClampedAttribute=Xy;w.Uint8ClampedBufferAttribute=gd;w.Uniform=_a;w.UniformsLib=ve;w.UniformsUtils=Md;w.UnsignedByteType=fi;w.UnsignedInt248Type=ki;w.UnsignedIntType=ds;w.UnsignedShort4444Type=Gu;w.UnsignedShort5551Type=ku;w.UnsignedShortType=Lr;w.VSMShadowMap=Sr;w.Vector2=se;w.Vector3=P;w.Vector4=st;w.VectorKeyframeTrack=Cs;w.Vertex=Gy;w.VertexColors=Iy;w.VideoTexture=Od;w.WebGL1Renderer=Id;w.WebGL3DRenderTarget=dd;w.WebGLArrayRenderTarget=ud;w.WebGLCubeRenderTarget=na;w.WebGLMultipleRenderTargets=fd;w.WebGLMultisampleRenderTarget=px;w.WebGLRenderTarget=Gt;w.WebGLRenderTargetCube=rx;w.WebGLRenderer=at;w.WebGLUtils=Pd;w.WireframeGeometry=ac;w.WireframeHelper=tx;w.WrapAroundEnding=ws;w.XHRLoader=nx;w.ZeroCurvatureEnding=Ni;w.ZeroFactor=mu;w.ZeroSlopeEnding=Ui;w.ZeroStencilOp=$f;w._SRGBAFormat=qo;w.sRGBEncoding=dt;var Gl={exports:{}};/*!
 * uevent (v2.1.1)
 * @copyright 2015-2022 Damien "Mistic" Sorel <contact@git.strangeplanet.fr>
 * @licence MIT
 */(function(r,e){(function(t,n){n(e)})(lu,function(t){var n=function(){return!0},i=function(){return!1},s=function(){function v(g,b,E){Object.defineProperties(this,{target:{get:function(){return g},set:function(){},enumerable:!0},type:{get:function(){return b},set:function(){},enumerable:!0},args:{get:function(){return E},set:function(){},enumerable:!0}}),this.isDefaultPrevented=i,this.isPropagationStopped=i}var m=v.prototype;return m.preventDefault=function(){this.isDefaultPrevented=n},m.stopPropagation=function(){this.isPropagationStopped=n},v}(),o=s,a=function(){function v(){}var m=v.prototype;return m.on=function(b,E){var A=this;if(this.__events=this.__events||{},typeof b=="object")for(var S in b)b.hasOwnProperty(S)&&(this.__events[S]=this.__events[S]||[],this.__events[S].push(b[S]));else b.split(" ").forEach(function(C){A.__events[C]=A.__events[C]||[],A.__events[C].push(E)});return this},m.off=function(b,E){var A=this;if(this.__events=this.__events||{},typeof b=="object"){for(var S in b)if(b.hasOwnProperty(S)&&S in this.__events){var C=this.__events[S].indexOf(b[S]);C!==-1&&this.__events[S].splice(C,1)}}else b?b.split(" ").forEach(function(N){if(N in A.__events)if(E){var U=A.__events[N].indexOf(E);U!==-1&&A.__events[N].splice(U,1)}else A.__events[N].length=0}):this.__events={};return this},m.once=function(b,E){var A=this;if(this.__once=this.__once||{},typeof b=="object")for(var S in b)b.hasOwnProperty(S)&&(this.__once[S]=this.__once[S]||[],this.__once[S].push(b[S]));else b.split(" ").forEach(function(C){A.__once[C]=A.__once[C]||[],A.__once[C].push(E)});return this},m.trigger=function(b){var E=Array.prototype.slice.call(arguments,1),A=new o(this,b,E);if(this.__events&&b in this.__events)for(var S=0,C=this.__events[b].length;S<C;S++){var N=this.__events[b][S];if(typeof N=="object"?N.handleEvent(A):N.call.apply(N,[this,A].concat(E)),A.isPropagationStopped())break}if(this.__once&&b in this.__once){for(var U=0,D=this.__once[b].length;U<D;U++){var K=this.__once[b][U];if(typeof K=="object"?K.handleEvent(A):K.call.apply(K,[this,A].concat(E)),A.isPropagationStopped())break}delete this.__once[b]}return A},m.change=function(b,E){var A=Array.prototype.slice.call(arguments,2),S=new o(this,b,A);if(S.value=E,this.__events&&b in this.__events)for(var C=0,N=this.__events[b].length;C<N;C++){var U=this.__events[b][C];if(typeof U=="object"?S.value=U.handleEvent(S):S.value=U.call.apply(U,[this,S,S.value].concat(A)),S.isPropagationStopped())break}return S.value},v}(),c=a;function h(v){return v=typeof v=="function"?v.prototype:v,["on","off","once","trigger","change"].forEach(function(m){v[m]=c.prototype[m]}),v}var u={EventEmitter:c,Event:o,mixin:h},f=u.EventEmitter,d=u.Event,p=u.mixin;t.Event=d,t.EventEmitter=f,t.default=u,t.mixin=p,Object.defineProperty(t,"__esModule",{value:!0})})})(Gl,Gl.exports);/*!
* Photo Sphere Viewer 4.6.1
* @copyright 2014-2015 Jérémy Heleine
* @copyright 2015-2022 Damien "Mistic" Sorel
* @licence MIT (https://opensource.org/licenses/MIT)
*/(function(r,e){(function(t,n){n(e,w,Gl.exports)})(lu,function(t,n,i){function s(T){this.message=T,"captureStackTrace"in Error?Error.captureStackTrace(this,s):this.stack=new Error().stack}s.prototype=Object.create(Error.prototype),s.prototype.name="PSVError",s.prototype.constructor=s;var o=function(){function T(x){this.psv=x}var y=T.prototype;return y.destroy=function(){delete this.psv},y.supportsTransition=function(M){return!1},y.supportsPreload=function(M){return!1},y.loadTexture=function(M,l){throw new s("loadTexture not implemented")},y.createMesh=function(M){throw new s("createMesh not implemented")},y.setTexture=function(M,l,_){throw new s("setTexture not implemented")},y.setTextureOpacity=function(M,l){throw new s("setTextureOpacity not implemented")},y.disposeTexture=function(M){throw new s("disposeTexture not implemented")},T}();o.id=null,o.supportsDownload=!1;function a(T,y){for(var x=0;x<y.length;x++){var M=y[x];M.enumerable=M.enumerable||!1,M.configurable=!0,"value"in M&&(M.writable=!0),Object.defineProperty(T,M.key,M)}}function c(T,y,x){return y&&a(T.prototype,y),x&&a(T,x),Object.defineProperty(T,"prototype",{writable:!1}),T}function h(){return h=Object.assign||function(T){for(var y=1;y<arguments.length;y++){var x=arguments[y];for(var M in x)Object.prototype.hasOwnProperty.call(x,M)&&(T[M]=x[M])}return T},h.apply(this,arguments)}function u(T,y){T.prototype=Object.create(y.prototype),T.prototype.constructor=T,f(T,y)}function f(T,y){return f=Object.setPrototypeOf||function(M,l){return M.__proto__=l,M},f(T,y)}function d(T){if(T===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return T}var p=1500,v=4,m=300,g=500,b=100,E=2e3,A=300,S=10,C="photoSphereViewer",N="psvSphere",U={ROTATE_LAT_UP:"rotateLatitudeUp",ROTATE_LAT_DOWN:"rotateLatitudeDown",ROTATE_LONG_RIGHT:"rotateLongitudeRight",ROTATE_LONG_LEFT:"rotateLongitudeLeft",ZOOM_IN:"zoomIn",ZOOM_OUT:"zoomOut",TOGGLE_AUTOROTATE:"toggleAutorotate"},D={AUTOROTATE:"autorotate",BEFORE_RENDER:"before-render",BEFORE_ROTATE:"before-rotate",CLICK:"click",CLOSE_PANEL:"close-panel",CONFIG_CHANGED:"config-changed",DOUBLE_CLICK:"dblclick",FULLSCREEN_UPDATED:"fullscreen-updated",HIDE_NOTIFICATION:"hide-notification",HIDE_OVERLAY:"hide-overlay",HIDE_TOOLTIP:"hide-tooltip",KEY_PRESS:"key-press",LOAD_PROGRESS:"load-progress",OPEN_PANEL:"open-panel",PANORAMA_LOADED:"panorama-loaded",POSITION_UPDATED:"position-updated",READY:"ready",RENDER:"render",SHOW_NOTIFICATION:"show-notification",SHOW_OVERLAY:"show-overlay",SHOW_TOOLTIP:"show-tooltip",SIZE_UPDATED:"size-updated",STOP_ALL:"stop-all",ZOOM_UPDATED:"zoom-updated"},K={GET_ANIMATE_POSITION:"get-animate-position",GET_ROTATE_POSITION:"get-rotate-position"},G={ENTER_OBJECT:"enter-object",HOVER_OBJECT:"hover-object",LEAVE_OBJECT:"leave-object"},R={MENU:"menu",TWO_FINGERS:"twoFingers",CTRL_ZOOM:"ctrlZoom",ERROR:"error",DESCRIPTION:"description"},H={linear:function(y){return y},inQuad:function(y){return y*y},outQuad:function(y){return y*(2-y)},inOutQuad:function(y){return y<.5?2*y*y:-1+(4-2*y)*y},inCubic:function(y){return y*y*y},outCubic:function(y){return--y*y*y+1},inOutCubic:function(y){return y<.5?4*y*y*y:(y-1)*(2*y-2)*(2*y-2)+1},inQuart:function(y){return y*y*y*y},outQuart:function(y){return 1- --y*y*y*y},inOutQuart:function(y){return y<.5?8*y*y*y*y:1-8*--y*y*y*y},inQuint:function(y){return y*y*y*y*y},outQuint:function(y){return 1+--y*y*y*y*y},inOutQuint:function(y){return y<.5?16*y*y*y*y*y:1+16*--y*y*y*y*y},inSine:function(y){return 1-Math.cos(y*(Math.PI/2))},outSine:function(y){return Math.sin(y*(Math.PI/2))},inOutSine:function(y){return .5-.5*Math.cos(Math.PI*y)},inExpo:function(y){return Math.pow(2,10*(y-1))},outExpo:function(y){return 1-Math.pow(2,-10*y)},inOutExpo:function(y){return(y=y*2-1)<0?.5*Math.pow(2,10*y):1-.5*Math.pow(2,-10*y)},inCirc:function(y){return 1-Math.sqrt(1-y*y)},outCirc:function(y){return Math.sqrt(1-(y-1)*(y-1))},inOutCirc:function(y){return(y*=2)<1?.5-.5*Math.sqrt(1-y*y):.5+.5*Math.sqrt(1-(y-=2)*y)}},ee={Enter:"Enter",Control:"Control",Escape:"Escape",Space:" ",PageUp:"PageUp",PageDown:"PageDown",ArrowLeft:"ArrowLeft",ArrowUp:"ArrowUp",ArrowRight:"ArrowRight",ArrowDown:"ArrowDown",Delete:"Delete",Plus:"+",Minus:"-"},X=Object.freeze({__proto__:null,DEFAULT_TRANSITION:p,MOVE_THRESHOLD:v,DBLCLICK_DELAY:m,LONGTOUCH_DELAY:g,TWOFINGERSOVERLAY_DELAY:b,CTRLZOOM_TIMEOUT:E,INERTIA_WINDOW:A,SPHERE_RADIUS:S,VIEWER_DATA:C,MESH_USER_DATA:N,ACTIONS:U,EVENTS:D,CHANGE_EVENTS:K,OBJECT_EVENTS:G,IDS:R,EASINGS:H,KEY_CODES:ee}),k={loaded:!1,pixelRatio:1,isWebGLSupported:!1,isTouchEnabled:null,maxTextureWidth:0,mouseWheelEvent:null,fullscreenEvent:null};k.load=function(){if(!k.loaded){var T=$();k.loaded=!0,k.pixelRatio=window.devicePixelRatio||1,k.isWebGLSupported=T!=null,k.isTouchEnabled=V(),k.maxTextureWidth=ie(T),k.mouseWheelEvent=ue(),k.fullscreenEvent=Le()}};var Z=null;k.getMaxCanvasWidth=function(){return Z===null&&(Z=oe(k.maxTextureWidth)),Z};function $(){var T=document.createElement("canvas"),y=["webgl","experimental-webgl","moz-webgl","webkit-3d"],x=null;return T.getContext&&y.some(function(M){try{return x=T.getContext(M),x!==null}catch{return!1}})?x:null}function V(){return new Promise(function(T){var y=function x(M){T(!!M),window.removeEventListener("touchstart",x)};window.addEventListener("touchstart",y,!1),setTimeout(y,1e4)})}function ie(T){return T!==null?T.getParameter(T.MAX_TEXTURE_SIZE):0}function oe(T){var y=document.createElement("canvas"),x=y.getContext("2d");for(y.width=T,y.height=T/2;y.width>1024;){x.fillStyle="white",x.fillRect(0,0,1,1);try{if(x.getImageData(0,0,1,1).data[0]===255)return y.width}catch{}y.width/=2,y.height/=2}throw new s("Unable to detect system capabilities")}function ue(){return"onwheel"in document.createElement("div")?"wheel":document.onmousewheel!==void 0?"mousewheel":"DOMMouseScroll"}var ae={exitFullscreen:"fullscreenchange",webkitExitFullscreen:"webkitfullscreenchange",mozCancelFullScreen:"mozfullscreenchange",msExitFullscreen:"MSFullscreenChange"};function Le(){var T=Object.keys(ae).filter(function(y){return y in document});return T.length?ae[T[0]]:null}function ke(T,y,x){x===void 0?T.classList.toggle(y):x&&!T.classList.contains(y)?T.classList.add(y):x||T.classList.remove(y)}function Ne(T,y){y&&y.split(" ").forEach(function(x){ke(T,x,!0)})}function W(T,y){y&&y.split(" ").forEach(function(x){ke(T,x,!1)})}function nt(T,y){var x=T;do{if(x===y)return!0;x=x.parentNode}while(x);return!1}function He(T,y){if(!T.matches)return null;var x=T;do{if(x.matches(y))return x;x=x instanceof SVGElement?x.parentNode:x.parentElement}while(x);return null}function Ve(T){for(var y=0,x=0,M=T;M;)y+=M.offsetLeft-M.scrollLeft+M.clientLeft,x+=M.offsetTop-M.scrollTop+M.clientTop,M=M.offsetParent;return{left:y,top:x}}function de(T){return(document.fullscreenElement||document.webkitFullscreenElement)===T}function qe(T){(T.requestFullscreen||T.webkitRequestFullscreen).call(T)}function te(){(document.exitFullscreen||document.webkitExitFullscreen).call(document)}function ne(T,y){return window.getComputedStyle(T,null)[y]}function he(T){var y=10,x=40,M=800,l=0,_=0,F=0,B=0;return"detail"in T&&(_=T.detail),"wheelDelta"in T&&(_=-T.wheelDelta/120),"wheelDeltaY"in T&&(_=-T.wheelDeltaY/120),"wheelDeltaX"in T&&(l=-T.wheelDeltaX/120),"axis"in T&&T.axis===T.HORIZONTAL_AXIS&&(l=_,_=0),F=l*y,B=_*y,"deltaY"in T&&(B=T.deltaY),"deltaX"in T&&(F=T.deltaX),(F||B)&&T.deltaMode&&(T.deltaMode===1?(F*=x,B*=x):(F*=M,B*=M)),F&&!l&&(l=F<1?-1:1),B&&!_&&(_=B<1?-1:1),{spinX:l,spinY:_,pixelX:F,pixelY:B}}function be(T,y,x){return Math.max(y,Math.min(x,T))}function _e(T,y){var x=T%y;return x<0&&(x+=y),x}function We(T){return Number.isInteger?Number.isInteger(T):typeof T=="number"&&Number.isFinite(T)&&Math.floor(T)===T}function Fe(T){return Math.log(T)/Math.log(2)%1===0}function De(T){return T.reduce(function(y,x){return y+x},0)}function ht(T,y){return Math.sqrt(Math.pow(T.x-y.x,2)+Math.pow(T.y-y.y,2))}function rt(T,y){var x=[0,Math.PI*2,-Math.PI*2];return x.reduce(function(M,l){var _=y-T+l;return Math.abs(_)<Math.abs(M)?_:M},1/0)}function O(T,y){return Math.acos(Math.cos(T.latitude)*Math.cos(y.latitude)*Math.cos(T.longitude-y.longitude)+Math.sin(T.latitude)*Math.sin(y.latitude))}function L(T,y){var x=T[0],M=T[1],l=y[0],_=y[1],F=(l-x)*Math.cos((M+_)/2),B=_-M;return Math.sqrt(F*F+B*B)}function j(T){return T.replace(/[A-Z](?:(?=[^A-Z])|[A-Z]*(?=[A-Z][^A-Z]|$))/g,function(y,x){return(x>0?"-":"")+y.toLowerCase()})}function le(T,y){var x,M,l,_,F=0,B=function(){F=Date.now(),_=void 0,l=T.apply(x,M),_||(x=M=null)};return function(){var ce=Date.now();F||(F=ce);var ge=y-(ce-F);return x=this,M=arguments,ge<=0||ge>y?(_&&(clearTimeout(_),_=void 0),F=ce,l=T.apply(x,M),_||(x=M=null)):_||(_=setTimeout(B,ge)),l}}function ye(T){if(typeof T=="object"&&T!==null){if(typeof Object.getPrototypeOf=="function"){var y=Object.getPrototypeOf(T);return y===Object.prototype||y===null}return Object.prototype.toString.call(T)==="[object Object]"}return!1}function we(T,y){var x=y;return function M(l,_){return Array.isArray(_)?(!l||!Array.isArray(l)?l=[]:l.length=0,_.forEach(function(F,B){l[B]=M(null,F)})):typeof _=="object"?((!l||Array.isArray(l))&&(l={}),Object.keys(_).forEach(function(F){typeof _[F]!="object"||!_[F]||!ye(_[F])?l[F]=_[F]:_[F]!=x&&(l[F]?M(l[F],_[F]):l[F]=M(null,_[F]))})):l=_,l}(T,y)}function Pe(T){return we(null,T)}function Q(T){return!T||Object.keys(T).length===0&&T.constructor===Object}function Re(T,y){Object.keys(T).forEach(function(x){y(T[x],x)})}function Xe(T){return T==null}function Me(){for(var T=arguments.length,y=new Array(T),x=0;x<T;x++)y[x]=arguments[x];for(var M=0,l=y;M<l.length;M++){var _=l[M];if(!Xe(_))return _}}function z(T,y){if(T)for(var x=0,M=[["_",T]].concat(Object.entries(T));x<M.length;x++){var l=M[x],_=l[1];if(_.prototype instanceof y)return _}return null}function me(){var T=new Error("Loading was aborted.");return T.name="AbortError",T}function pe(T){return(T==null?void 0:T.name)==="AbortError"}function Ae(T){console.warn("PhotoSphereViewer: "+T)}function Ee(T){return[["x","y"],["longitude","latitude"]].some(function(y){var x=y[0],M=y[1];return T[x]!==void 0&&T[M]!==void 0})}function Ce(T,y){var x=T.match("<GPano:"+y+">(.*)</GPano:"+y+">");if(x!==null){var M=parseInt(x[1],10);return isNaN(M)?null:M}if(x=T.match("GPano:"+y+'="(.*?)"'),x!==null){var l=parseInt(x[1],10);return isNaN(l)?null:l}return null}var fe={top:"0%",bottom:"100%",left:"0%",right:"100%",center:"50%"};function Ge(T){if(!T)return{x:.5,y:.5};if(typeof T=="object")return T;var y=T.toLocaleLowerCase().split(" ").slice(0,2);y.length===1&&(fe[y[0]]!==void 0?y=[y[0],"center"]:y=[y[0],y[0]]);var x=y[1]!=="left"&&y[1]!=="right"&&y[0]!=="top"&&y[0]!=="bottom";y=y.map(function(l){return fe[l]||l}),x||y.reverse();var M=y.join(" ").match(/^([0-9.]+)% ([0-9.]+)%$/);return M?{x:parseFloat(M[1])/100,y:parseFloat(M[2])/100}:{x:.5,y:.5}}var lt={0:"left",.5:"center",1:"right"},Ke={0:"top",.5:"center",1:"bottom"};function Yt(T,y,x){if(x===void 0&&(x=!0),!T)return y.split(" ");if(typeof T=="string"){var M=Ge(T);if(!(M.x in lt)||!(M.y in Ke))throw new s('Unable to parse position "'+T+'"');T=[Ke[M.y],lt[M.x]]}if(!x&&T[0]==="center"&&T[1]==="center")throw new s('Unable to parse position "center center"');return T}function Wt(T){var y;if(typeof T=="string"){var x=T.toString().trim(),M=parseFloat(x.replace(/^(-?[0-9]+(?:\.[0-9]*)?).*$/,"$1")),l=x.replace(/^-?[0-9]+(?:\.[0-9]*)?(.*)$/,"$1").trim();switch(l.match(/(pm|per minute)$/)&&(M/=60),l){case"dpm":case"degrees per minute":case"dps":case"degrees per second":y=n.Math.degToRad(M);break;case"rdpm":case"radians per minute":case"rdps":case"radians per second":y=M;break;case"rpm":case"revolutions per minute":case"rps":case"revolutions per second":y=M*Math.PI*2;break;default:throw new s('Unknown speed unit "'+l+'"')}}else y=T;return y}function tn(T,y,x){y===void 0&&(y=!1),x===void 0&&(x=y);var M;if(typeof T=="string"){var l=T.toLowerCase().trim().match(/^(-?[0-9]+(?:\.[0-9]*)?)(.*)$/);if(!l)throw new s('Unknown angle "'+T+'"');var _=parseFloat(l[1]),F=l[2];if(F)switch(F){case"deg":case"degs":M=n.Math.degToRad(_);break;case"rad":case"rads":M=_;break;default:throw new s('Unknown angle unit "'+F+'"')}else M=_}else if(typeof T=="number"&&!isNaN(T))M=T;else throw new s('Unknown angle "'+T+'"');return M=_e(y?M+Math.PI:M,Math.PI*2),y?be(M-Math.PI,-Math.PI/(x?2:1),Math.PI/(x?2:1)):M}function Kn(T){var y=new n.Texture(T);return y.needsUpdate=!0,y.minFilter=n.LinearFilter,y.generateMipmaps=!1,y}var Vs=new n.Quaternion;function wi(T,y){Vs.setFromEuler(y).invert(),T.applyQuaternion(Vs)}var Pn=function(){function T(x){var M=this;this.__callbacks=[],x?((!x.easing||typeof x.easing=="string")&&(x.easing=H[x.easing||"linear"]),this.__start=null,this.options=x,x.delay?this.__delayTimeout=setTimeout(function(){M.__delayTimeout=null,M.__animationFrame=window.requestAnimationFrame(function(l){return M.__run(l)})},x.delay):this.__animationFrame=window.requestAnimationFrame(function(l){return M.__run(l)})):this.__resolved=!0}var y=T.prototype;return y.__run=function(M){var l=this;this.__start===null&&(this.__start=M);var _=(M-this.__start)/this.options.duration,F={};_<1?(Re(this.options.properties,function(B,ce){B&&(F[ce]=B.start+(B.end-B.start)*l.options.easing(_))}),this.options.onTick(F,_),this.__animationFrame=window.requestAnimationFrame(function(B){return l.__run(B)})):(Re(this.options.properties,function(B,ce){B&&(F[ce]=B.end)}),this.options.onTick(F,1),this.__animationFrame=window.requestAnimationFrame(function(){l.__resolved=!0,l.__resolve(!0)}))},y.__resolve=function(M){this.__callbacks.forEach(function(l){return l(M)}),this.__callbacks.length=0},y.then=function(M,l){var _=this;return M===void 0&&(M=null),l===void 0&&(l=null),l&&Ae("Animation#then does not accept a rejection handler anymore"),this.__resolved||this.__cancelled?Promise.resolve(this.__resolved).then(M):new Promise(function(F){_.__callbacks.push(F)}).then(M)},y.cancel=function(){!this.__cancelled&&!this.__resolved&&(this.__cancelled=!0,this.__resolve(!1),this.__delayTimeout&&(window.clearTimeout(this.__delayTimeout),this.__delayTimeout=null),this.__animationFrame&&(window.cancelAnimationFrame(this.__animationFrame),this.__animationFrame=null))},y.catch=function(){return Ae("Animation#catch is not supported anymore"),this.then()},y.finally=function(M){return Ae("Animation#finally is not supported anymore"),this.then(M)},T.resolve=function(){Ae("Animation.resolve is not supported anymore")},T}(),In=function(){function T(x,M,l,_,F){if(M===void 0&&(M=0),l===void 0&&(l=-1/0),_===void 0&&(_=1/0),F===void 0&&(F=!1),this.fn=x,this.mode=T.STOP,this.speed=0,this.speedMult=1,this.currentSpeed=0,this.target=0,this.current=M,this.min=l,this.max=_,this.loopValue=F,F&&l!==0)throw new s("invalid config");this.fn&&this.fn(M)}var y=T.prototype;return y.setSpeed=function(M){this.speed=M},y.goto=function(M,l){l===void 0&&(l=1),this.mode=T.POSITION,this.target=this.loopValue?_e(M,this.max):be(M,this.min,this.max),this.speedMult=l},y.step=function(M,l){l===void 0&&(l=1),this.mode!==T.POSITION&&(this.target=this.current),this.goto(this.target+M,l)},y.roll=function(M,l){M===void 0&&(M=!1),l===void 0&&(l=1),this.mode=T.INFINITE,this.target=M?-1/0:1/0,this.speedMult=l},y.stop=function(){this.mode=T.STOP},y.setValue=function(M){return this.target=this.loopValue?_e(M,this.max):be(M,this.min,this.max),this.mode=T.STOP,this.target!==this.current?(this.current=this.target,this.fn&&this.fn(this.current),!0):!1},y.update=function(M){if(this.mode===T.POSITION){this.loopValue&&Math.abs(this.target-this.current)>this.max/2&&(this.current=this.current<this.target?this.current+this.max:this.current-this.max);var l=this.currentSpeed*this.currentSpeed/(this.speed*this.speedMult*4);Math.abs(this.target-this.current)<=l&&(this.mode=T.STOP)}var _=this.mode===T.STOP?0:this.speed*this.speedMult;this.target<this.current&&(_=-_),this.currentSpeed<_?this.currentSpeed=Math.min(_,this.currentSpeed+M/1e3*this.speed*this.speedMult*2):this.currentSpeed>_&&(this.currentSpeed=Math.max(_,this.currentSpeed-M/1e3*this.speed*this.speedMult*2));var F=null;return this.current>this.target&&this.currentSpeed?F=Math.max(this.target,this.current+this.currentSpeed*M/1e3):this.current<this.target&&this.currentSpeed&&(F=Math.min(this.target,this.current+this.currentSpeed*M/1e3)),F!==null&&(F=this.loopValue?_e(F,this.max):be(F,this.min,this.max),F!==this.current)?(this.current=F,this.fn&&this.fn(this.current),!0):!1},T}();In.STOP=0,In.INFINITE=1,In.POSITION=2;var Ws=function(){function T(x,M){this.fn=M,this.dynamics=x,this.fn&&this.fn(this.current)}var y=T.prototype;return y.setSpeed=function(M){Re(this.dynamics,function(l){l.setSpeed(M)})},y.goto=function(M,l){var _=this;l===void 0&&(l=1),Re(M,function(F,B){_.dynamics[B].goto(F,l)})},y.step=function(M,l){var _=this;l===void 0&&(l=1),Re(M,function(F,B){_.dynamics[B].step(F,l)})},y.roll=function(M,l){var _=this;l===void 0&&(l=1),Re(M,function(F,B){_.dynamics[B].roll(F,l)})},y.stop=function(){Re(this.dynamics,function(M){return M.stop()})},y.setValue=function(M){var l=this,_=!1;return Re(M,function(F,B){_|=l.dynamics[B].setValue(F)}),_&&this.fn&&this.fn(this.current),_},y.update=function(M){var l=!1;return Re(this.dynamics,function(_){l|=_.update(M)}),l&&this.fn&&this.fn(this.current),l},c(T,[{key:"current",get:function(){var M={};return Re(this.dynamics,function(l,_){M[_]=l.current}),M}}]),T}(),bi=function(T){u(y,T);function y(M){var l,_=M.psv,F=M.container,B=M.direction,ce=M.onUpdate;return l=T.call(this)||this,l.psv=_,l.container=F,l.prop={onUpdate:ce,direction:B,mousedown:!1,mouseover:!1},l.container.addEventListener("click",d(l)),l.container.addEventListener("mousedown",d(l)),l.container.addEventListener("mouseenter",d(l)),l.container.addEventListener("mouseleave",d(l)),l.container.addEventListener("touchstart",d(l)),l.container.addEventListener("mousemove",d(l),!0),l.container.addEventListener("touchmove",d(l),!0),window.addEventListener("mouseup",d(l)),window.addEventListener("touchend",d(l)),l}var x=y.prototype;return x.destroy=function(){window.removeEventListener("mouseup",this),window.removeEventListener("touchend",this)},x.handleEvent=function(l){switch(l.type){case"click":l.stopPropagation();break;case"mousedown":this.__onMouseDown(l);break;case"mouseenter":this.__onMouseEnter(l);break;case"mouseleave":this.__onMouseLeave(l);break;case"touchstart":this.__onTouchStart(l);break;case"mousemove":this.__onMouseMove(l);break;case"touchmove":this.__onTouchMove(l);break;case"mouseup":this.__onMouseUp(l);break;case"touchend":this.__onTouchEnd(l);break}},x.__onMouseDown=function(l){this.prop.mousedown=!0,this.__update(l,!0)},x.__onMouseEnter=function(l){this.prop.mouseover=!0,this.__update(l,!0)},x.__onTouchStart=function(l){this.prop.mouseover=!0,this.prop.mousedown=!0,this.__update(l.changedTouches[0],!0)},x.__onMouseMove=function(l){(this.prop.mousedown||this.prop.mouseover)&&(l.stopPropagation(),this.__update(l,!0))},x.__onTouchMove=function(l){(this.prop.mousedown||this.prop.mouseover)&&(l.stopPropagation(),this.__update(l.changedTouches[0],!0))},x.__onMouseUp=function(l){this.prop.mousedown&&(this.prop.mousedown=!1,this.__update(l,!1))},x.__onMouseLeave=function(l){this.prop.mouseover&&(this.prop.mouseover=!1,this.__update(l,!0))},x.__onTouchEnd=function(l){this.prop.mousedown&&(this.prop.mouseover=!1,this.prop.mousedown=!1,this.__update(l.changedTouches[0],!1))},x.__update=function(l,_){var F=this.container.getBoundingClientRect(),B=l[this.vertical?"clientY":"clientX"],ce=F[this.vertical?"bottom":"left"],ge=F[this.vertical?"height":"width"],Ie=Math.abs((ce-B)/ge);this.prop.onUpdate({value:Ie,click:!_,mousedown:this.prop.mousedown,mouseover:this.prop.mouseover,cursor:l})},c(y,[{key:"vertical",get:function(){return this.prop.direction===y.VERTICAL}}]),y}(i.EventEmitter);bi.VERTICAL=1,bi.HORIZONTAL=2;var I=Object.freeze({__proto__:null,toggleClass:ke,addClasses:Ne,removeClasses:W,hasParent:nt,getClosest:He,getPosition:Ve,isFullscreenEnabled:de,requestFullscreen:qe,exitFullscreen:te,getStyle:ne,normalizeWheel:he,bound:be,loop:_e,isInteger:We,isPowerOfTwo:Fe,sum:De,distance:ht,getShortestArc:rt,getAngle:O,greatArcDistance:L,dasherize:j,throttle:le,isPlainObject:ye,deepmerge:we,clone:Pe,isEmpty:Q,each:Re,isNil:Xe,firstNonNull:Me,pluginInterop:z,getAbortError:me,isAbortError:pe,logWarn:Ae,isExtendedPosition:Ee,getXMPValue:Ce,parsePosition:Ge,cleanPosition:Yt,parseSpeed:Wt,parseAngle:tn,createTexture:Kn,applyEulerInverse:wi,Animation:Pn,Dynamic:In,MultiDynamic:Ws,Slider:bi}),q=function(T){u(y,T);function y(M,l){var _;if(_=T.call(this,M)||this,_.config=h({resolution:64},l),!Fe(_.config.resolution))throw new s("EquirectangularAdapter resolution must be power of two");return _.SPHERE_SEGMENTS=_.config.resolution,_.SPHERE_HORIZONTAL_SEGMENTS=_.SPHERE_SEGMENTS/2,_}var x=y.prototype;return x.supportsTransition=function(){return!0},x.supportsPreload=function(){return!0},x.loadTexture=function(l,_){var F=this;return typeof l!="string"?((Array.isArray(l)||typeof l=="object"&&!!l.left)&&Ae("Cubemap support now requires an additional adapter, see https://photo-sphere-viewer.js.org/guide/adapters"),Promise.reject(new s("Invalid panorama url, are you using the right adapter?"))):(this.psv.config.useXmpData?this.__loadXMP(l,function(B){return F.psv.loader.setProgress(B)}).then(function(B){return F.psv.textureLoader.loadImage(l).then(function(ce){return{img:ce,xmpPanoData:B}})}):this.psv.textureLoader.loadImage(l,function(B){return F.psv.loader.setProgress(B)}).then(function(B){return{img:B,xmpPanoData:null}})).then(function(B){var ce,ge,Ie,ut,pt,bt,ts,$n,ns,Xt=B.img,Rt=B.xmpPanoData;typeof _=="function"&&(_=_(Xt));var Qn={fullWidth:Me((ce=_)==null?void 0:ce.fullWidth,Rt==null?void 0:Rt.fullWidth,Xt.width),fullHeight:Me((ge=_)==null?void 0:ge.fullHeight,Rt==null?void 0:Rt.fullHeight,Xt.height),croppedWidth:Me((Ie=_)==null?void 0:Ie.croppedWidth,Rt==null?void 0:Rt.croppedWidth,Xt.width),croppedHeight:Me((ut=_)==null?void 0:ut.croppedHeight,Rt==null?void 0:Rt.croppedHeight,Xt.height),croppedX:Me((pt=_)==null?void 0:pt.croppedX,Rt==null?void 0:Rt.croppedX,0),croppedY:Me((bt=_)==null?void 0:bt.croppedY,Rt==null?void 0:Rt.croppedY,0),poseHeading:Me((ts=_)==null?void 0:ts.poseHeading,Rt==null?void 0:Rt.poseHeading,0),posePitch:Me(($n=_)==null?void 0:$n.posePitch,Rt==null?void 0:Rt.posePitch,0),poseRoll:Me((ns=_)==null?void 0:ns.poseRoll,Rt==null?void 0:Rt.poseRoll,0)};(Qn.croppedWidth!==Xt.width||Qn.croppedHeight!==Xt.height)&&Ae(`Invalid panoData, croppedWidth and/or croppedHeight is not coherent with loaded image.
    panoData: `+Qn.croppedWidth+"x"+Qn.croppedHeight+", image: "+Xt.width+"x"+Xt.height),(_||Rt)&&Qn.fullWidth!==Qn.fullHeight*2&&Ae("Invalid panoData, fullWidth should be twice fullHeight");var Hf=F.__createEquirectangularTexture(Xt,Qn);return{panorama:l,texture:Hf,panoData:Qn}})},x.__loadXMP=function(l,_){var F=this;return this.psv.textureLoader.loadFile(l,_).then(function(B){return F.__loadBlobAsString(B)}).then(function(B){var ce=B.indexOf("<x:xmpmeta"),ge=B.indexOf("</x:xmpmeta>"),Ie=B.substring(ce,ge);return ce!==-1&&ge!==-1&&Ie.includes("GPano:")?{fullWidth:Ce(Ie,"FullPanoWidthPixels"),fullHeight:Ce(Ie,"FullPanoHeightPixels"),croppedWidth:Ce(Ie,"CroppedAreaImageWidthPixels"),croppedHeight:Ce(Ie,"CroppedAreaImageHeightPixels"),croppedX:Ce(Ie,"CroppedAreaLeftPixels"),croppedY:Ce(Ie,"CroppedAreaTopPixels"),poseHeading:Ce(Ie,"PoseHeadingDegrees"),posePitch:Ce(Ie,"PosePitchDegrees"),poseRoll:Ce(Ie,"PoseRollDegrees")}:null})},x.__loadBlobAsString=function(l){return new Promise(function(_,F){var B=new FileReader;B.onload=function(){return _(B.result)},B.onerror=F,B.readAsText(l)})},x.__createEquirectangularTexture=function(l,_){if(_.fullWidth>k.maxTextureWidth||_.croppedWidth!==_.fullWidth||_.croppedHeight!==_.fullHeight){var F=k.getMaxCanvasWidth()/_.fullWidth,B=h({},_);F<1&&(B.fullWidth*=F,B.fullHeight*=F,B.croppedWidth*=F,B.croppedHeight*=F,B.croppedX*=F,B.croppedY*=F);var ce=document.createElement("canvas");ce.width=B.fullWidth,ce.height=B.fullHeight;var ge=ce.getContext("2d");return ge.drawImage(l,B.croppedX,B.croppedY,B.croppedWidth,B.croppedHeight),Kn(ce)}return Kn(l)},x.createMesh=function(l){l===void 0&&(l=1);var _=new n.SphereGeometry(S*l,this.SPHERE_SEGMENTS,this.SPHERE_HORIZONTAL_SEGMENTS,-Math.PI/2).scale(-1,1,1),F=new n.MeshBasicMaterial;return new n.Mesh(_,F)},x.setTexture=function(l,_){var F;(F=l.material.map)==null||F.dispose(),l.material.map=_.texture},x.setTextureOpacity=function(l,_){l.material.opacity=_,l.material.transparent=_<1},x.disposeTexture=function(l){var _;(_=l.texture)==null||_.dispose()},y}(o);q.id="equirectangular",q.supportsDownload=!0;var J=function(){function T(x,M){this.psv=x.psv||x,this.parent=x,this.parent.children.push(this),this.children=[],this.prop={visible:!0},this.container=document.createElement("div"),this.container.className=M,this.parent.container.appendChild(this.container)}var y=T.prototype;return y.destroy=function(){this.parent.container.removeChild(this.container);var M=this.parent.children.indexOf(this);M!==-1&&this.parent.children.splice(M,1),this.children.slice().forEach(function(l){return l.destroy()}),this.children.length=0,delete this.container,delete this.parent,delete this.psv,delete this.prop},y.refreshUi=function(){var M=this;this.children.every(function(l){return l.refreshUi(),M.psv.prop.uiRefresh===!0})},y.toggle=function(){this.isVisible()?this.hide():this.show()},y.hide=function(){this.container.style.display="none",this.prop.visible=!1},y.show=function(){this.container.style.display="",this.prop.visible=!0},y.isVisible=function(){return this.prop.visible},T}(),Y=function(T){u(y,T);function y(M,l,_,F){var B;return l===void 0&&(l=""),_===void 0&&(_=!1),F===void 0&&(F=!0),B=T.call(this,M,"psv-button "+l)||this,B.prop=h({},B.prop,{id:B.constructor.id,collapsable:_,enabled:!0,supported:!0,collapsed:!1,active:!1,width:B.container.offsetWidth}),B.constructor.icon&&B.__setIcon(B.constructor.icon),B.prop.id&&B.psv.config.lang[B.prop.id]&&(B.container.title=B.psv.config.lang[B.prop.id]),F&&(B.container.tabIndex=0),B.container.addEventListener("click",function(ce){B.prop.enabled&&B.onClick(),ce.stopPropagation()}),B.container.addEventListener("keydown",function(ce){ce.key===ee.Enter&&B.prop.enabled&&(B.onClick(),ce.stopPropagation())}),B}var x=y.prototype;return x.checkSupported=function(){var l=this,_=this.isSupported();ye(_)?(_.initial===!1&&(this.hide(),this.prop.supported=!1),_.promise.then(function(F){!l.prop||(l.prop.supported=F,F?l.show():l.hide())})):(this.prop.supported=_,_||this.hide())},x.isSupported=function(){return!0},x.toggleActive=function(l){this.prop.active=l!==void 0?l:!this.prop.active,ke(this.container,"psv-button--active",this.prop.active),this.constructor.iconActive&&this.__setIcon(this.prop.active?this.constructor.iconActive:this.constructor.icon)},x.show=function(l){l===void 0&&(l=!0),this.isVisible()||(this.prop.visible=!0,this.prop.collapsed||(this.container.style.display=""),l&&this.psv.refreshUi("show button "+this.prop.id))},x.hide=function(l){l===void 0&&(l=!0),this.isVisible()&&(this.prop.visible=!1,this.container.style.display="none",l&&this.psv.refreshUi("hide button "+this.prop.id))},x.disable=function(){this.container.classList.add("psv-button--disabled"),this.prop.enabled=!1},x.enable=function(){this.container.classList.remove("psv-button--disabled"),this.prop.enabled=!0},x.collapse=function(){this.prop.collapsed=!0,this.container.style.display="none"},x.uncollapse=function(){this.prop.collapsed=!1,this.prop.visible&&(this.container.style.display="")},x.__setIcon=function(l,_){_===void 0&&(_=this.container),l?(_.innerHTML=l,_.querySelector("svg").classList.add("psv-button-svg")):_.innerHTML=""},x.onClick=function(){throw new s('onClick not implemented for button "'+this.prop.id+'".')},y}(J);Y.id=null,Y.groupId=null,Y.icon=null,Y.iconActive=null;var re=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 41 41"><path fill="currentColor" d="M40.5 14.1c-.1-.1-1.2-.5-2.898-1-.102 0-.202-.1-.202-.2C34.5 6.5 28 2 20.5 2S6.6 6.5 3.7 12.9c0 .1-.1.1-.2.2-1.7.6-2.8 1-2.9 1l-.6.3v12.1l.6.2c.1 0 1.1.399 2.7.899.1 0 .2.101.2.199C6.3 34.4 12.9 39 20.5 39c7.602 0 14.102-4.6 16.9-11.1 0-.102.1-.102.199-.2 1.699-.601 2.699-1 2.801-1l.6-.3V14.3l-.5-.2zM6.701 11.5C9.7 7 14.8 4 20.5 4c5.8 0 10.9 3 13.8 7.5.2.3-.1.6-.399.5-3.799-1-8.799-2-13.6-2-4.7 0-9.5 1-13.2 2-.3.1-.5-.2-.4-.5zM25.1 20.3L18.7 24c-.3.2-.7 0-.7-.5v-7.4c0-.4.4-.6.7-.4l6.399 3.8c.301.1.301.6.001.8zm9.4 8.901A16.421 16.421 0 0 1 20.5 37c-5.9 0-11.1-3.1-14-7.898-.2-.302.1-.602.4-.5 3.9 1 8.9 2.1 13.6 2.1 5 0 9.9-1 13.602-2 .298-.1.5.198.398.499z"/><!--Created by Nick Bluth from the Noun Project--></svg>
`,Be=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 41 41"><path fill="currentColor" d="M40.5 14.1c-.1-.1-1.2-.5-2.899-1-.101 0-.2-.1-.2-.2C34.5 6.5 28 2 20.5 2S6.6 6.5 3.7 12.9c0 .1-.1.1-.2.2-1.7.6-2.8 1-2.9 1l-.6.3v12.1l.6.2c.1 0 1.1.4 2.7.9.1 0 .2.1.2.199C6.3 34.4 12.9 39 20.5 39c7.601 0 14.101-4.6 16.9-11.1 0-.101.1-.101.2-.2 1.699-.6 2.699-1 2.8-1l.6-.3V14.3l-.5-.2zM20.5 4c5.8 0 10.9 3 13.8 7.5.2.3-.1.6-.399.5-3.8-1-8.8-2-13.6-2-4.7 0-9.5 1-13.2 2-.3.1-.5-.2-.4-.5C9.7 7 14.8 4 20.5 4zm0 33c-5.9 0-11.1-3.1-14-7.899-.2-.301.1-.601.4-.5 3.9 1 8.9 2.1 13.6 2.1 5 0 9.9-1 13.601-2 .3-.1.5.2.399.5A16.422 16.422 0 0 1 20.5 37zm18.601-12.1c0 .1-.101.3-.2.3-2.5.9-10.4 3.6-18.4 3.6-7.1 0-15.6-2.699-18.3-3.6C2.1 25.2 2 25 2 24.9V16c0-.1.1-.3.2-.3 2.6-.9 10.6-3.6 18.2-3.6 7.5 0 15.899 2.7 18.5 3.6.1 0 .2.2.2.3v8.9z"/><path fill="currentColor" d="M18.7 24l6.4-3.7c.3-.2.3-.7 0-.8l-6.4-3.8c-.3-.2-.7 0-.7.4v7.4c0 .5.4.7.7.5z"/><!--Created by Nick Bluth from the Noun Project--></svg>
`,ze=function(T){u(y,T);function y(M){var l;return l=T.call(this,M,"psv-button--hover-scale psv-autorotate-button",!0)||this,l.psv.on(D.AUTOROTATE,d(l)),l}var x=y.prototype;return x.destroy=function(){this.psv.off(D.AUTOROTATE,this),T.prototype.destroy.call(this)},x.handleEvent=function(l){switch(l.type){case D.AUTOROTATE:this.toggleActive(l.args[0]);break}},x.onClick=function(){this.psv.toggleAutorotate()},y}(Y);ze.id="autorotate",ze.icon=Be,ze.iconActive=re;var Ye=function(T){u(y,T);function y(M,l){var _;return _=T.call(this,M,"psv-custom-button",l.collapsable!==!1,l.tabbable!==!1)||this,_.config=l,_.config.id?_.prop.id=_.config.id:_.prop.id="psvButton-"+Math.random().toString(36).substr(2,9),_.config.className&&Ne(_.container,_.config.className),_.config.title&&(_.container.title=_.config.title),_.config.content&&(_.container.innerHTML=_.config.content),_.prop.width=_.container.offsetWidth,_.config.enabled===!1&&_.disable(),_.config.visible===!1&&_.hide(),_}var x=y.prototype;return x.destroy=function(){delete this.config,T.prototype.destroy.call(this)},x.onClick=function(){this.config.onClick&&this.config.onClick.apply(this.psv)},y}(Y),Ue=function(T){u(y,T);function y(M,l){var _;return _=T.call(this,M,"psv-caption")||this,_.prop=h({},_.prop,{id:_.constructor.id,collapsable:!1,width:0,contentWidth:0}),_.content=document.createElement("div"),_.content.className="psv-caption-content",_.container.appendChild(_.content),_.setCaption(l),_}var x=y.prototype;return x.destroy=function(){delete this.content,T.prototype.destroy.call(this)},x.setCaption=function(l){this.show(),this.content.innerHTML=l,this.prop.contentWidth=l?this.content.offsetWidth:0,this.refreshUi()},x.refreshUi=function(){var l=this.container.offsetWidth;l>=this.prop.contentWidth?this.show():l<this.prop.contentWidth&&this.hide(),this.__refreshButton()},x.hide=function(){this.content.style.display="none",this.prop.visible=!1},x.show=function(){this.content.style.display="",this.prop.visible=!0},x.__refreshButton=function(){var l;(l=this.psv.navbar.getButton(ot.id,!1))==null||l.refreshUi(!0)},y}(J);Ue.id="caption";var it=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 64 64"><path fill="currentColor" d="M28.3 26.1c-1 2.6-1.9 4.8-2.6 7-2.5 7.4-5 14.7-7.2 22-1.3 4.4.5 7.2 4.3 7.8 1.3.2 2.8.2 4.2-.1 8.2-2 11.9-8.6 15.7-15.2l-2.2 2a18.8 18.8 0 0 1-7.4 5.2 2 2 0 0 1-1.6-.2c-.2-.1 0-1 0-1.4l.8-1.8L41.9 28c.5-1.4.9-3 .7-4.4-.2-2.6-3-4.4-6.3-4.4-8.8.2-15 4.5-19.5 11.8-.2.3-.2.6-.3 1.3 3.7-2.8 6.8-6.1 11.8-6.2z"/><circle fill="currentColor" cx="39.3" cy="9.2" r="8.2"/><!--Created by Arafat Uddin from the Noun Project--></svg>
`,Ze=1,je=2,ot=function(T){u(y,T);function y(M){var l;return l=T.call(this,M,"psv-button--hover-scale psv-description-button")||this,l.prop=h({},l.prop,{mode:null}),l.psv.on(D.HIDE_NOTIFICATION,d(l)),l.psv.on(D.SHOW_NOTIFICATION,d(l)),l.psv.on(D.CLOSE_PANEL,d(l)),l.psv.on(D.OPEN_PANEL,d(l)),l}var x=y.prototype;return x.destroy=function(){this.psv.off(D.HIDE_NOTIFICATION,this),this.psv.off(D.SHOW_NOTIFICATION,this),this.psv.off(D.CLOSE_PANEL,this),this.psv.off(D.OPEN_PANEL,this),T.prototype.destroy.call(this)},x.handleEvent=function(l){if(!!this.prop.mode){var _=!1;switch(l.type){case D.HIDE_NOTIFICATION:_=this.prop.mode===Ze;break;case D.SHOW_NOTIFICATION:_=this.prop.mode===Ze&&l.args[0]!==R.DESCRIPTION;break;case D.CLOSE_PANEL:_=this.prop.mode===je;break;case D.OPEN_PANEL:_=this.prop.mode===je&&l.args[0]!==R.DESCRIPTION;break}_&&(this.toggleActive(!1),this.prop.mode=null)}},x.hide=function(l){T.prototype.hide.call(this,l),this.prop.mode&&this.__close()},x.refreshUi=function(l){if(l===void 0&&(l=!1),l){var _=this.psv.navbar.getButton(Ue.id,!1),F=_&&!_.isVisible(),B=!!this.psv.config.description;F||B?this.show(!1):this.hide(!1)}},x.onClick=function(){this.prop.mode?this.__close():this.__open()},x.__close=function(){switch(this.prop.mode){case Ze:this.psv.notification.hide(R.DESCRIPTION);break;case je:this.psv.panel.hide(R.DESCRIPTION);break}},x.__open=function(){this.toggleActive(!0),this.psv.config.description?(this.prop.mode=je,this.psv.panel.show({id:R.DESCRIPTION,content:(this.psv.config.caption?"<p>"+this.psv.config.caption+"</p>":"")+this.psv.config.description})):(this.prop.mode=Ze,this.psv.notification.show({id:R.DESCRIPTION,content:this.psv.config.caption}))},y}(Y);ot.id="description",ot.icon=it;var Dn=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><path fill="currentColor" d="M83.3 35.6h-17V3H32.2v32.6H16.6l33.6 32.7 33-32.7z"/><path fill="currentColor" d="M83.3 64.2v16.3H16.6V64.2H-.1v32.6H100V64.2H83.3z"/><!--Created by Michael Zenaty from the Noun Project--></svg>
`,xn=function(T){u(y,T);function y(M){return T.call(this,M,"psv-button--hover-scale psv-download-button",!0)||this}var x=y.prototype;return x.onClick=function(){var l=this,_=document.createElement("a");_.href=this.psv.config.downloadUrl||this.psv.config.panorama,_.download=_.href.split("/").pop(),this.psv.container.appendChild(_),_.click(),setTimeout(function(){l.psv.container.removeChild(_)},100)},x.refreshUi=function(){var l=this.psv.adapter.constructor.supportsDownload||this.psv.config.downloadUrl;l&&!this.prop.visible?this.show():!l&&this.prop.visible&&this.hide()},y}(Y);xn.id="download",xn.icon=Dn;var jn=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><path fill="currentColor" d="M100 40H87.1V18.8h-21V6H100zM100 93.2H66V80.3h21.1v-21H100zM34 93.2H0v-34h12.9v21.1h21zM12.9 40H0V6h34v12.9H12.8z"/><!--Created by Garrett Knoll from the Noun Project--></svg>
`,nn=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><path fill="currentColor" d="M66 7h13v21h21v13H66zM66 60.3h34v12.9H79v21H66zM0 60.3h34v34H21V73.1H0zM21 7h13v34H0V28h21z"/><!--Created by Garrett Knoll from the Noun Project--></svg>
`,Qe=function(T){u(y,T);function y(M){var l;return l=T.call(this,M,"psv-button--hover-scale psv-fullscreen-button")||this,l.psv.on(D.FULLSCREEN_UPDATED,d(l)),l}var x=y.prototype;return x.destroy=function(){this.psv.off(D.FULLSCREEN_UPDATED,this),T.prototype.destroy.call(this)},x.handleEvent=function(l){switch(l.type){case D.FULLSCREEN_UPDATED:this.toggleActive(l.args[0]);break}},x.onClick=function(){this.psv.toggleFullscreen()},y}(Y);Qe.id="fullscreen",Qe.icon=jn,Qe.iconActive=nn;var Fn=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="10 10 80 80"><g fill="currentColor"><circle r="10" cx="20" cy="20"/><circle r="10" cx="50" cy="20"/><circle r="10" cx="80" cy="20"/><circle r="10" cx="20" cy="50"/><circle r="10" cx="50" cy="50"/><circle r="10" cx="80" cy="50"/><circle r="10" cx="20" cy="80"/><circle r="10" cx="50" cy="80"/><circle r="10" cx="80" cy="80"/></g><!-- Created by Richard Kun\xE1k from the Noun Project--></svg>
`,ct=function(T){u(y,T);function y(M){var l;return l=T.call(this,M,"psv-button--hover-scale psv-menu-button")||this,l.psv.on(D.OPEN_PANEL,d(l)),l.psv.on(D.CLOSE_PANEL,d(l)),T.prototype.hide.call(d(l)),l}var x=y.prototype;return x.destroy=function(){this.psv.off(D.OPEN_PANEL,this),this.psv.off(D.CLOSE_PANEL,this),T.prototype.destroy.call(this)},x.handleEvent=function(l){switch(l.type){case D.OPEN_PANEL:this.toggleActive(l.args[0]===R.MENU);break;case D.CLOSE_PANEL:this.toggleActive(!1);break}},x.hide=function(l){T.prototype.hide.call(this,l),this.__hideMenu()},x.show=function(l){T.prototype.show.call(this,l),this.prop.active&&this.__showMenu()},x.onClick=function(){this.prop.active?this.__hideMenu():this.__showMenu()},x.__showMenu=function(){var l=this;this.psv.panel.show({id:R.MENU,content:y.MENU_TEMPLATE(this.parent.collapsed,this.psv,j(y.BUTTON_DATA)),noMargin:!0,clickHandler:function(F){var B=F.target?He(F.target,"li"):void 0,ce=B?B.dataset[y.BUTTON_DATA]:void 0;ce&&(l.parent.getButton(ce).onClick(),l.__hideMenu())}})},x.__hideMenu=function(){this.psv.panel.hide(R.MENU)},y}(Y);ct.id="menu",ct.icon=Fn,ct.BUTTON_DATA="psvButton",ct.MENU_TEMPLATE=function(T,y,x){return`
<div class="psv-panel-menu psv-panel-menu--stripped">
  <h1 class="psv-panel-menu-title">`+Fn+" "+y.config.lang.menu+`</h1>
  <ul class="psv-panel-menu-list">
    `+T.map(function(M){return`
    <li data-`+x+'="'+M.prop.id+`" class="psv-panel-menu-item" tabindex="0">
      <span class="psv-panel-menu-item-icon">`+M.container.innerHTML+`</span>
      <span class="psv-panel-menu-item-label">`+M.container.title+`</span>
    </li>
    `}).join("")+`
  </ul>
</div>
`};var rn=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="40 40 432 432"><g transform="rotate(0, 256, 256)"><path fill="currentColor" d="M425.23 210.55H227.39a5 5 0 01-3.53-8.53l56.56-56.57a45.5 45.5 0 000-64.28 45.15 45.15 0 00-32.13-13.3 45.15 45.15 0 00-32.14 13.3L41.32 256l174.83 174.83a45.15 45.15 0 0032.14 13.3 45.15 45.15 0 0032.13-13.3 45.5 45.5 0 000-64.28l-56.57-56.57a5 5 0 013.54-8.53h197.84c25.06 0 45.45-20.39 45.45-45.45s-20.4-45.45-45.45-45.45z"/></g><!-- Created by Flatart from the Noun Project --></svg>
`,sn=function(){function T(x){x===void 0&&(x=200),this.delay=x,this.time=0,this.timeout=null}var y=T.prototype;return y.down=function(){this.timeout&&(clearTimeout(this.timeout),this.timeout=null),this.time=new Date().getTime()},y.up=function(M){var l=this;if(!!this.time){var _=new Date().getTime()-this.time;_<this.delay?this.timeout=setTimeout(function(){M(),l.timeout=null,l.time=0},this.delay):(M(),this.time=0)}},T}();function Mn(T){var y=0;switch(T){case"up":y=90;break;case"right":y=180;break;case"down":y=-90;break;default:y=0;break}return rn.replace("rotate(0","rotate("+y)}var On=function(T){u(y,T);function y(M,l){var _;return _=T.call(this,M,"psv-button--hover-scale psv-move-button")||this,_.container.title=_.psv.config.lang.move,_.prop=h({},_.prop,{value:l,handler:new sn}),_.container.addEventListener("mousedown",d(_)),_.container.addEventListener("keydown",d(_)),_.container.addEventListener("keyup",d(_)),_.psv.container.addEventListener("mouseup",d(_)),_.psv.container.addEventListener("touchend",d(_)),_}var x=y.prototype;return x.destroy=function(){this.__onMouseUp(),this.psv.container.removeEventListener("mouseup",this),this.psv.container.removeEventListener("touchend",this),T.prototype.destroy.call(this)},x.handleEvent=function(l){switch(l.type){case"mousedown":this.__onMouseDown();break;case"mouseup":this.__onMouseUp();break;case"touchend":this.__onMouseUp();break;case"keydown":l.key===ee.Enter&&this.__onMouseDown();break;case"keyup":l.key===ee.Enter&&this.__onMouseUp();break}},x.isSupported=function(){return{initial:!0,promise:k.isTouchEnabled.then(function(l){return!l})}},x.onClick=function(){},x.__onMouseDown=function(){!this.prop.enabled||(this.psv.__stopAll(),this.psv.dynamics.position.roll(this.prop.value),this.prop.handler.down())},x.__onMouseUp=function(){var l=this;!this.prop.enabled||this.prop.handler.up(function(){return l.psv.dynamics.position.stop()})},y}(Y);On.groupId="move";var wt=function(T){u(y,T);function y(x){return T.call(this,x,{latitude:!0})||this}return y}(On);wt.id="moveDown",wt.icon=Mn("down");var Nn=function(T){u(y,T);function y(x){return T.call(this,x,{longitude:!0})||this}return y}(On);Nn.id="moveLeft",Nn.icon=Mn("left");var Ei=function(T){u(y,T);function y(x){return T.call(this,x,{longitude:!1})||this}return y}(On);Ei.id="moveRight",Ei.icon=Mn("right");var Bt=function(T){u(y,T);function y(x){return T.call(this,x,{latitude:!1})||this}return y}(On);Bt.id="moveUp",Bt.icon=Mn("up");var ya=function(T){u(y,T);function y(M,l){var _;return _=T.call(this,M,"psv-button--hover-scale psv-zoom-button")||this,_.prop=h({},_.prop,{value:l,handler:new sn}),_.container.addEventListener("mousedown",d(_)),_.container.addEventListener("keydown",d(_)),_.container.addEventListener("keyup",d(_)),_.psv.container.addEventListener("mouseup",d(_)),_.psv.container.addEventListener("touchend",d(_)),_}var x=y.prototype;return x.destroy=function(){this.__onMouseUp(),this.psv.container.removeEventListener("mouseup",this),this.psv.container.removeEventListener("touchend",this),T.prototype.destroy.call(this)},x.handleEvent=function(l){switch(l.type){case"mousedown":this.__onMouseDown();break;case"mouseup":this.__onMouseUp();break;case"touchend":this.__onMouseUp();break;case"keydown":l.key===ee.Enter&&this.__onMouseDown();break;case"keyup":l.key===ee.Enter&&this.__onMouseUp();break}},x.isSupported=function(){return{initial:!0,promise:k.isTouchEnabled.then(function(l){return!l})}},x.onClick=function(){},x.__onMouseDown=function(){!this.prop.enabled||(this.psv.dynamics.zoom.roll(this.prop.value),this.prop.handler.down())},x.__onMouseUp=function(){var l=this;!this.prop.enabled||this.prop.handler.up(function(){return l.psv.dynamics.zoom.stop()})},y}(Y);ya.groupId="zoom";var Mf=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path fill="currentColor" d="M14.043 12.22a7.738 7.738 0 1 0-1.823 1.822l4.985 4.985c.503.504 1.32.504 1.822 0a1.285 1.285 0 0 0 0-1.822l-4.984-4.985zm-6.305 1.043a5.527 5.527 0 1 1 0-11.053 5.527 5.527 0 0 1 0 11.053z"/><path fill="currentColor" d="M8.728 4.009H6.744v2.737H4.006V8.73h2.738v2.736h1.984V8.73h2.737V6.746H8.728z"/><!--Created by Ryan Canning from the Noun Project--></svg>
`,xa=function(T){u(y,T);function y(x){return T.call(this,x,!1)||this}return y}(ya);xa.id="zoomIn",xa.icon=Mf;var wf=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path fill="currentColor" d="M14.043 12.22a7.738 7.738 0 1 0-1.823 1.822l4.985 4.985c.503.504 1.32.504 1.822 0a1.285 1.285 0 0 0 0-1.822l-4.984-4.985zm-6.305 1.043a5.527 5.527 0 1 1 0-11.053 5.527 5.527 0 0 1 0 11.053z"/><path fill="currentColor" d="M4.006 6.746h7.459V8.73H4.006z"/><!--Created by Ryan Canning from the Noun Project--></svg>
`,Ma=function(T){u(y,T);function y(x){return T.call(this,x,!0)||this}return y}(ya);Ma.id="zoomOut",Ma.icon=wf;var wa=function(T){u(y,T);function y(M){var l;return l=T.call(this,M,"psv-zoom-range",!1,!1)||this,l.prop=h({},l.prop,{mediaMinWidth:0}),l.zoomRange=document.createElement("div"),l.zoomRange.className="psv-zoom-range-line",l.container.appendChild(l.zoomRange),l.zoomValue=document.createElement("div"),l.zoomValue.className="psv-zoom-range-handle",l.zoomRange.appendChild(l.zoomValue),l.slider=new bi({container:l.container,direction:bi.HORIZONTAL,onUpdate:function(F){return l.__onSliderUpdate(F)}}),l.prop.mediaMinWidth=parseInt(ne(l.container,"maxWidth"),10),l.psv.on(D.ZOOM_UPDATED,d(l)),l.psv.prop.ready?l.__moveZoomValue(l.psv.getZoomLevel()):l.psv.once(D.READY,d(l)),l.refreshUi(),l}var x=y.prototype;return x.destroy=function(){this.slider.destroy(),delete this.zoomRange,delete this.zoomValue,this.psv.off(D.ZOOM_UPDATED,this),T.prototype.destroy.call(this)},x.handleEvent=function(l){switch(l.type){case D.ZOOM_UPDATED:this.__moveZoomValue(l.args[0]);break;case D.READY:this.__moveZoomValue(this.psv.getZoomLevel());break}},x.isSupported=function(){return{initial:!0,promise:k.isTouchEnabled.then(function(l){return!l})}},x.refreshUi=function(){this.prop.supported&&(this.psv.prop.size.width<=this.prop.mediaMinWidth&&this.prop.visible?this.hide():this.psv.prop.size.width>this.prop.mediaMinWidth&&!this.prop.visible&&this.show())},x.onClick=function(){},x.__moveZoomValue=function(l){this.zoomValue.style.left=l/100*this.zoomRange.offsetWidth-this.zoomValue.offsetWidth/2+"px"},x.__onSliderUpdate=function(l){l.mousedown&&this.psv.zoom(l.value*100)},y}(Y);wa.id="zoomRange",wa.groupId="zoom";var $r=function(T){u(y,T);function y(M){var l;return l=T.call(this)||this,l.psv=M,l}var x=y.prototype;return x.init=function(){},x.destroy=function(){delete this.psv},y}(i.EventEmitter);$r.id=null;var cn,hn={panorama:null,container:null,adapter:null,plugins:[],caption:null,description:null,downloadUrl:null,loadingImg:null,loadingTxt:"Loading...",size:null,fisheye:!1,minFov:30,maxFov:90,defaultZoomLvl:50,defaultLong:0,defaultLat:0,sphereCorrection:null,moveSpeed:1,zoomSpeed:1,autorotateDelay:null,autorotateSpeed:"2rpm",autorotateLat:null,moveInertia:!0,mousewheel:!0,mousemove:!0,captureCursor:!1,mousewheelCtrlKey:!1,touchmoveTwoFingers:!1,useXmpData:!0,panoData:null,requestHeaders:null,canvasBackground:"#000",withCredentials:!1,navbar:["autorotate","zoom","move","download","description","caption","fullscreen"],lang:{autorotate:"Automatic rotation",zoom:"Zoom",zoomOut:"Zoom out",zoomIn:"Zoom in",move:"Move",download:"Download",fullscreen:"Fullscreen",menu:"Menu",twoFingers:"Use two fingers to navigate",ctrlZoom:"Use ctrl + scroll to zoom the image",loadError:"The panorama can't be loaded"},keyboard:(cn={},cn[ee.ArrowUp]=U.ROTATE_LAT_UP,cn[ee.ArrowDown]=U.ROTATE_LAT_DOWN,cn[ee.ArrowRight]=U.ROTATE_LONG_RIGHT,cn[ee.ArrowLeft]=U.ROTATE_LONG_LEFT,cn[ee.PageUp]=U.ZOOM_IN,cn[ee.PageDown]=U.ZOOM_OUT,cn[ee.Plus]=U.ZOOM_IN,cn[ee.Minus]=U.ZOOM_OUT,cn[ee.Space]=U.TOGGLE_AUTOROTATE,cn)},Fc={panorama:"Use setPanorama method to change the panorama",panoData:"Use setPanorama method to change the panorama",container:"Cannot change viewer container",adapter:"Cannot change adapter",plugins:"Cannot change plugins"},Xs={zoomButtonIncrement:"zoomButtonIncrement is deprecated, use zoomSpeed",mousewheelSpeed:"mousewheelSpeed is deprecated, use zoomSpeed",sphereCorrectionReorder:"sphereCorrectionReorder is deprecated"},qs={container:function(y){if(!y)throw new s("No value given for container.");return y},adapter:function(y){if(y?Array.isArray(y)?y=[z(y[0],o),y[1]]:y=[z(y,o)]:y=[q],!y[0])throw new s("Un undefined value with given for adapter.");return y},defaultLong:function(y){return tn(y)},defaultLat:function(y){return tn(y,!0)},minFov:function(y,x){return x.maxFov<y&&(Ae("maxFov cannot be lower than minFov"),y=x.maxFov),be(y,1,179)},maxFov:function(y,x){return y<x.minFov&&(y=x.minFov),be(y,1,179)},lang:function(y){return Array.isArray(y.twoFingers)&&(Ae("lang.twoFingers must not be an array"),y.twoFingers=y.twoFingers[0]),h({},hn.lang,y)},keyboard:function(y){return y===!0?Pe(hn.keyboard):y},autorotateLat:function(y,x){return tn(y===null?x.defaultLat:y,!0)},autorotateSpeed:function(y){return Wt(y)},fisheye:function(y){return y===!0?1:y===!1?0:y},plugins:function(y){return y.map(function(x){if(Array.isArray(x)?x=[z(x[0],$r),x[1]]:x=[z(x,$r)],!x[0])throw new s("Un undefined value was given for plugins.");return x})}};function bf(T){var y=Pe(hn);we(y,T);var x={};return Re(y,function(M,l){if(Xs[l]){Ae(Xs[l]);return}if(!Object.prototype.hasOwnProperty.call(hn,l))throw new s("Unknown option "+l);qs[l]?x[l]=qs[l](M,y):x[l]=M}),x}var ba={},Qr={};function Oc(T,y){if(!T.id)throw new s("Button ID is required");if(ba[T.id]=T,T.groupId&&(Qr[T.groupId]=Qr[T.groupId]||[],Qr[T.groupId].push(T)),typeof y=="string")switch(y){case"start":hn.navbar.unshift(T.id);break;case"end":hn.navbar.push(T.id);break;default:var x=y.split(":"),M=x[0],l=x[1];hn.navbar.splice(hn.navbar.indexOf(M)+(l==="right"?1:0),0,T.id)}}[ze,Ma,wa,xa,ot,xn,Qe,Nn,Ei,Bt,wt].forEach(Oc);var Ef=function(T){u(y,T);function y(M){var l;return l=T.call(this,M,"psv-navbar")||this,l.children=[],l.collapsed=[],l}var x=y.prototype;return x.setButtons=function(l){var _=this;this.children.slice().forEach(function(B){return B.destroy()}),this.children.length=0;var F=this.__cleanButtons(l);F.indexOf(Ue.id)!==-1&&F.indexOf(ot.id)===-1&&F.splice(F.indexOf(Ue.id),0,ot.id),F.forEach(function(B){if(typeof B=="object")new Ye(_,B);else if(ba[B])new ba[B](_);else if(Qr[B])Qr[B].forEach(function(ce){return new ce(_)});else if(B===Ue.id)new Ue(_,_.psv.config.caption);else throw new s("Unknown button "+B)}),new ct(this),this.children.forEach(function(B){typeof B.checkSupported=="function"&&B.checkSupported()})},x.setCaption=function(l){var _=this.getButton(Ue.id,!1);_==null||_.setCaption(l)},x.getButton=function(l,_){_===void 0&&(_=!0);var F=null;return this.children.some(function(B){return B.prop.id===l?(F=B,!0):!1}),!F&&_&&Ae('button "'+l+'" not found in the navbar'),F},x.show=function(){this.container.classList.add("psv-navbar--open"),this.prop.visible=!0},x.hide=function(){this.container.classList.remove("psv-navbar--open"),this.prop.visible=!1},x.refreshUi=function(){if(T.prototype.refreshUi.call(this),this.psv.prop.uiRefresh===!0){var l=this.container.offsetWidth,_=0,F=[],B=[];if(this.children.forEach(function(ge){ge.prop.visible&&(_+=ge.prop.width,F.push(ge),ge.prop.collapsable&&B.push(ge))}),!F.length)return;l<_&&B.length>0?(B.forEach(function(ge){return ge.collapse()}),this.collapsed=B,this.getButton(ct.id).show(!1)):l>=_&&this.collapsed.length>0&&(this.collapsed.forEach(function(ge){return ge.uncollapse()}),this.collapsed=[],this.getButton(ct.id).hide(!1));var ce=this.getButton(Ue.id,!1);ce&&ce.refreshUi()}},x.__cleanButtons=function(l){return l===!0?Pe(hn.navbar):typeof l=="string"?l.split(/[ ,]/):l||[]},y}(J),Tf=function(T){u(y,T);function y(M){var l;return l=T.call(this,M,"psv-loader-container")||this,l.loader=document.createElement("div"),l.loader.className="psv-loader",l.container.appendChild(l.loader),l.canvas=document.createElement("canvas"),l.canvas.className="psv-loader-canvas",l.canvas.width=l.loader.clientWidth*k.pixelRatio,l.canvas.height=l.loader.clientWidth*k.pixelRatio,l.loader.appendChild(l.canvas),l.prop=h({},l.prop,{tickness:(l.loader.offsetWidth-l.loader.clientWidth)/2*k.pixelRatio,current:null}),l.refreshUi(),l.hide(),l}var x=y.prototype;return x.destroy=function(){delete this.loader,delete this.canvas,T.prototype.destroy.call(this)},x.refreshUi=function(){if(this.prop.current!==(this.psv.config.loadingImg||this.psv.config.loadingTxt)){this.prop.current&&this.loader.removeChild(this.loader.lastChild);var l;if(this.psv.config.loadingImg?(l=document.createElement("img"),l.className="psv-loader-image",l.src=this.psv.config.loadingImg):this.psv.config.loadingTxt&&(l=document.createElement("div"),l.className="psv-loader-text",l.innerHTML=this.psv.config.loadingTxt),l){var _=Math.round(Math.sqrt(2*Math.pow((this.canvas.width/2-this.prop.tickness/2)/k.pixelRatio,2)));l.style.maxWidth=_+"px",l.style.maxHeight=_+"px",this.loader.appendChild(l)}this.prop.current=this.psv.config.loadingImg||this.psv.config.loadingTxt}},x.setProgress=function(l){var _=this.canvas.getContext("2d");_.clearRect(0,0,this.canvas.width,this.canvas.height),_.lineWidth=this.prop.tickness,_.strokeStyle=ne(this.loader,"color"),_.beginPath(),_.arc(this.canvas.width/2,this.canvas.height/2,this.canvas.width/2-this.prop.tickness/2,-Math.PI/2,be(l,0,100)/100*2*Math.PI-Math.PI/2),_.stroke(),this.psv.trigger(D.LOAD_PROGRESS,Math.round(l))},y}(J),Sf=function(T){u(y,T);function y(M){var l;return l=T.call(this,M,"psv-notification")||this,l.prop=h({},l.prop,{visible:!1,contentId:void 0,timeout:null}),l.content=document.createElement("div"),l.content.className="psv-notification-content",l.container.appendChild(l.content),l.content.addEventListener("click",function(){return l.hide()}),l}var x=y.prototype;return x.destroy=function(){delete this.content,T.prototype.destroy.call(this)},x.isVisible=function(l){return this.prop.visible&&(!l||!this.prop.contentId||this.prop.contentId===l)},x.toggle=function(){throw new s("Notification cannot be toggled")},x.show=function(l){var _=this;this.prop.timeout&&(clearTimeout(this.prop.timeout),this.prop.timeout=null),typeof l=="string"&&(l={content:l}),this.prop.contentId=l.id,this.content.innerHTML=l.content,this.container.classList.add("psv-notification--visible"),this.prop.visible=!0,this.psv.trigger(D.SHOW_NOTIFICATION,l.id),l.timeout&&(this.prop.timeout=setTimeout(function(){return _.hide(l.id)},l.timeout))},x.hide=function(l){if(this.isVisible(l)){var _=this.prop.contentId;this.container.classList.remove("psv-notification--visible"),this.prop.visible=!1,this.prop.contentId=void 0,this.psv.trigger(D.HIDE_NOTIFICATION,_)}},y}(J),Af=function(T){u(y,T);function y(M){var l;return l=T.call(this,M,"psv-overlay")||this,l.prop=h({},l.prop,{contentId:void 0,dissmisable:!0}),l.image=document.createElement("div"),l.image.className="psv-overlay-image",l.container.appendChild(l.image),l.text=document.createElement("div"),l.text.className="psv-overlay-text",l.container.appendChild(l.text),l.subtext=document.createElement("div"),l.subtext.className="psv-overlay-subtext",l.container.appendChild(l.subtext),l.psv.on(D.CLICK,d(l)),l.psv.on(D.KEY_PRESS,d(l)),T.prototype.hide.call(d(l)),l}var x=y.prototype;return x.destroy=function(){this.psv.off(D.CLICK,this),this.psv.off(D.KEY_PRESS,this),delete this.image,delete this.text,delete this.subtext,T.prototype.destroy.call(this)},x.handleEvent=function(l){switch(l.type){case D.CLICK:this.isVisible()&&this.prop.dissmisable&&(this.hide(),l.stopPropagation());break;case D.KEY_PRESS:this.isVisible()&&this.prop.dissmisable&&l.args[0]===ee.Escape&&(this.hide(),l.preventDefault());break}},x.isVisible=function(l){return this.prop.visible&&(!l||!this.prop.contentId||this.prop.contentId===l)},x.toggle=function(){throw new s("Overlay cannot be toggled")},x.show=function(l){typeof l=="string"&&(l={text:l}),this.prop.contentId=l.id,this.prop.dissmisable=l.dissmisable!==!1,this.image.innerHTML=l.image||"",this.text.innerHTML=l.text||"",this.subtext.innerHTML=l.subtext||"",T.prototype.show.call(this),this.psv.trigger(D.SHOW_OVERLAY,l.id)},x.hide=function(l){if(this.isVisible(l)){var _=this.prop.contentId;T.prototype.hide.call(this),this.prop.contentId=void 0,this.psv.trigger(D.HIDE_OVERLAY,_)}},y}(J),Rf=200,Cf=function(T){u(y,T);function y(M){var l;l=T.call(this,M,"psv-panel")||this,l.prop=h({},l.prop,{visible:!1,contentId:void 0,mouseX:0,mouseY:0,mousedown:!1,clickHandler:null,keyHandler:null,width:{}});var _=document.createElement("div");_.className="psv-panel-resizer",l.container.appendChild(_);var F=document.createElement("div");return F.className="psv-panel-close-button",l.container.appendChild(F),l.content=document.createElement("div"),l.content.className="psv-panel-content",l.container.appendChild(l.content),l.container.addEventListener(k.mouseWheelEvent,function(B){return B.stopPropagation()}),F.addEventListener("click",function(){return l.hide()}),_.addEventListener("mousedown",d(l)),_.addEventListener("touchstart",d(l)),l.psv.container.addEventListener("mouseup",d(l)),l.psv.container.addEventListener("touchend",d(l)),l.psv.container.addEventListener("mousemove",d(l)),l.psv.container.addEventListener("touchmove",d(l)),l.psv.on(D.KEY_PRESS,d(l)),l}var x=y.prototype;return x.destroy=function(){this.psv.off(D.KEY_PRESS,this),this.psv.container.removeEventListener("mousemove",this),this.psv.container.removeEventListener("touchmove",this),this.psv.container.removeEventListener("mouseup",this),this.psv.container.removeEventListener("touchend",this),delete this.prop,delete this.content,T.prototype.destroy.call(this)},x.handleEvent=function(l){switch(l.type){case"mousedown":this.__onMouseDown(l);break;case"touchstart":this.__onTouchStart(l);break;case"mousemove":this.__onMouseMove(l);break;case"touchmove":this.__onTouchMove(l);break;case"mouseup":this.__onMouseUp(l);break;case"touchend":this.__onMouseUp(l);break;case D.KEY_PRESS:this.isVisible()&&l.args[0]===ee.Escape&&(this.hide(),l.preventDefault());break}},x.isVisible=function(l){return this.prop.visible&&(!l||!this.prop.contentId||this.prop.contentId===l)},x.toggle=function(){throw new s("Panel cannot be toggled")},x.show=function(l){var _=this,F=this.isVisible(l.id);typeof l=="string"&&(l={content:l}),this.prop.contentId=l.id,this.prop.visible=!0,this.prop.clickHandler&&(this.content.removeEventListener("click",this.prop.clickHandler),this.content.removeEventListener("keydown",this.prop.keyHandler),this.prop.clickHandler=null,this.prop.keyHandler=null),l.id&&this.prop.width[l.id]?this.container.style.width=this.prop.width[l.id]:l.width?this.container.style.width=l.width:this.container.style.width=null,this.content.innerHTML=l.content,this.content.scrollTop=0,this.container.classList.add("psv-panel--open"),ke(this.content,"psv-panel-content--no-margin",l.noMargin===!0),l.clickHandler&&(this.prop.clickHandler=l.clickHandler,this.prop.keyHandler=function(B){B.key===ee.Enter&&l.clickHandler(B)},this.content.addEventListener("click",this.prop.clickHandler),this.content.addEventListener("keydown",this.prop.keyHandler),F||setTimeout(function(){var B;(B=_.content.querySelector("a,button,[tabindex]"))==null||B.focus()},300)),this.psv.trigger(D.OPEN_PANEL,l.id)},x.hide=function(l){if(this.isVisible(l)){var _=this.prop.contentId;this.prop.visible=!1,this.prop.contentId=void 0,this.content.innerHTML=null,this.container.classList.remove("psv-panel--open"),this.prop.clickHandler&&(this.content.removeEventListener("click",this.prop.clickHandler),this.prop.clickHandler=null),this.psv.trigger(D.CLOSE_PANEL,_)}},x.__onMouseDown=function(l){l.stopPropagation(),this.__startResize(l)},x.__onTouchStart=function(l){l.stopPropagation(),this.__startResize(l.changedTouches[0])},x.__onMouseUp=function(l){this.prop.mousedown&&(l.stopPropagation(),this.prop.mousedown=!1,this.content.classList.remove("psv-panel-content--no-interaction"))},x.__onMouseMove=function(l){this.prop.mousedown&&(l.stopPropagation(),this.__resize(l))},x.__onTouchMove=function(l){this.prop.mousedown&&this.__resize(l.touches[0])},x.__startResize=function(l){this.prop.mouseX=l.clientX,this.prop.mouseY=l.clientY,this.prop.mousedown=!0,this.content.classList.add("psv-panel-content--no-interaction")},x.__resize=function(l){var _=l.clientX,F=l.clientY,B=Math.max(Rf,this.container.offsetWidth-(_-this.prop.mouseX))+"px";this.prop.contentId&&(this.prop.width[this.prop.contentId]=B),this.container.style.width=B,this.prop.mouseX=_,this.prop.mouseY=F},y}(J),Lf=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="15 15 70 70"><path fill="currentColor" d="M50,16.2c-18.6,0-33.8,15.1-33.8,33.8S31.4,83.7,50,83.7S83.8,68.6,83.8,50S68.6,16.2,50,16.2z M50,80.2c-16.7,0-30.2-13.6-30.2-30.2S33.3,19.7,50,19.7S80.3,33.3,80.3,50S66.7,80.2,50,80.2z"/><rect fill="currentColor" x="48" y="31.7" width="4" height="28"/><rect fill="currentColor" x="48" y="63.2" width="4" height="5"/><!--Created by Shastry from the Noun Project--></svg>
`,es=function(){function T(x){this.psv=x,this.config=x.config,this.prop=x.prop}var y=T.prototype;return y.destroy=function(){delete this.psv,delete this.config,delete this.prop},T}(),Ea=new n.Vector2,Un=new n.Vector3,Ys=new n.Euler(0,0,0,"ZXY"),Pf=function(T){u(y,T);function y(M){return T.call(this,M)||this}var x=y.prototype;return x.fovToZoomLevel=function(l){var _=Math.round((l-this.config.minFov)/(this.config.maxFov-this.config.minFov)*100);return _-2*(_-50)},x.zoomLevelToFov=function(l){return this.config.maxFov+l/100*(this.config.minFov-this.config.maxFov)},x.vFovToHFov=function(l){return n.Math.radToDeg(2*Math.atan(Math.tan(n.Math.degToRad(l)/2)*this.prop.aspect))},x.speedToDuration=function(l,_){if(!l||typeof l!="number"){var F=l?Wt(l):this.config.autorotateSpeed;return _/Math.abs(F)*1e3}else return Math.abs(l)},x.textureCoordsToSphericalCoords=function(l){var _=this.prop.panoData;if(!_)throw new s("Current adapter does not support texture coordinates.");var F=(l.x+_.croppedX)/_.fullWidth*Math.PI*2,B=(l.y+_.croppedY)/_.fullHeight*Math.PI,ce={longitude:F>=Math.PI?F-Math.PI:F+Math.PI,latitude:Math.PI/2-B};return!Ys.equals(this.psv.renderer.mesh.rotation)||!Ys.equals(this.psv.renderer.meshContainer.rotation)?(this.sphericalCoordsToVector3(ce,Un),Un.applyEuler(this.psv.renderer.mesh.rotation),Un.applyEuler(this.psv.renderer.meshContainer.rotation),this.vector3ToSphericalCoords(Un)):ce},x.sphericalCoordsToTextureCoords=function(l){var _=this.prop.panoData;if(!_)throw new s("Current adapter does not support texture coordinates.");(!Ys.equals(this.psv.renderer.mesh.rotation)||!Ys.equals(this.psv.renderer.meshContainer.rotation))&&(this.sphericalCoordsToVector3(l,Un),wi(Un,this.psv.renderer.meshContainer.rotation),wi(Un,this.psv.renderer.mesh.rotation),l=this.vector3ToSphericalCoords(Un));var F=l.longitude/Math.PI/2*_.fullWidth,B=l.latitude/Math.PI*_.fullHeight;return{x:Math.round(l.longitude<Math.PI?F+_.fullWidth/2:F-_.fullWidth/2)-_.croppedX,y:Math.round(_.fullHeight/2-B)-_.croppedY}},x.sphericalCoordsToVector3=function(l,_){return _||(_=new n.Vector3),_.x=S*-Math.cos(l.latitude)*Math.sin(l.longitude),_.y=S*Math.sin(l.latitude),_.z=S*Math.cos(l.latitude)*Math.cos(l.longitude),_},x.vector3ToSphericalCoords=function(l){var _=Math.acos(l.y/Math.sqrt(l.x*l.x+l.y*l.y+l.z*l.z)),F=Math.atan2(l.x,l.z);return{longitude:F<0?-F:Math.PI*2-F,latitude:Math.PI/2-_}},x.viewerCoordsToVector3=function(l){var _=this.getIntersections(l).filter(function(F){return F.object.userData[N]});return _?_.point:null},x.vector3ToViewerCoords=function(l){var _=l.clone();return _.project(this.psv.renderer.camera),{x:Math.round((_.x+1)/2*this.prop.size.width),y:Math.round((1-_.y)/2*this.prop.size.height)}},x.sphericalCoordsToViewerCoords=function(l){return this.vector3ToViewerCoords(this.sphericalCoordsToVector3(l,Un))},x.getIntersections=function(l){return Ea.x=2*l.x/this.prop.size.width-1,Ea.y=-2*l.y/this.prop.size.height+1,this.psv.renderer.raycaster.setFromCamera(Ea,this.psv.renderer.camera),this.psv.renderer.raycaster.intersectObjects(this.psv.renderer.scene.children,!0).filter(function(_){return!!_.object.userData})},x.cleanPosition=function(l){return l.x!==void 0&&l.y!==void 0?this.textureCoordsToSphericalCoords(l):{longitude:tn(l.longitude),latitude:tn(l.latitude,!0)}},x.cleanSphereCorrection=function(l){return{pan:tn((l==null?void 0:l.pan)||0),tilt:tn((l==null?void 0:l.tilt)||0,!0),roll:tn((l==null?void 0:l.roll)||0,!0,!1)}},x.cleanPanoramaPose=function(l){return{pan:n.Math.degToRad((l==null?void 0:l.poseHeading)||0),tilt:n.Math.degToRad((l==null?void 0:l.posePitch)||0),roll:n.Math.degToRad((l==null?void 0:l.poseRoll)||0)}},y}(es),If=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><path fill="currentColor" d="M33.38 33.2a1.96 1.96 0 0 0 1.5-3.23 10.61 10.61 0 0 1 7.18-17.51c.7-.06 1.31-.49 1.61-1.12a13.02 13.02 0 0 1 11.74-7.43c7.14 0 12.96 5.8 12.96 12.9 0 3.07-1.1 6.05-3.1 8.38-.7.82-.61 2.05.21 2.76.83.7 2.07.6 2.78-.22a16.77 16.77 0 0 0 4.04-10.91C72.3 7.54 64.72 0 55.4 0a16.98 16.98 0 0 0-14.79 8.7 14.6 14.6 0 0 0-12.23 14.36c0 3.46 1.25 6.82 3.5 9.45.4.45.94.69 1.5.69m45.74 43.55a22.13 22.13 0 0 1-5.23 12.4c-4 4.55-9.53 6.86-16.42 6.86-12.6 0-20.1-10.8-20.17-10.91a1.82 1.82 0 0 0-.08-.1c-5.3-6.83-14.55-23.82-17.27-28.87-.05-.1 0-.21.02-.23a6.3 6.3 0 0 1 8.24 1.85l9.38 12.59a1.97 1.97 0 0 0 3.54-1.17V25.34a4 4 0 0 1 1.19-2.87 3.32 3.32 0 0 1 2.4-.95c1.88.05 3.4 1.82 3.4 3.94v24.32a1.96 1.96 0 0 0 3.93 0v-33.1a3.5 3.5 0 0 1 7 0v35.39a1.96 1.96 0 0 0 3.93 0v-.44c.05-2.05 1.6-3.7 3.49-3.7 1.93 0 3.5 1.7 3.5 3.82v5.63c0 .24.04.48.13.71l.1.26a1.97 1.97 0 0 0 3.76-.37c.33-1.78 1.77-3.07 3.43-3.07 1.9 0 3.45 1.67 3.5 3.74l-1.77 18.1zM77.39 51c-1.25 0-2.45.32-3.5.9v-.15c0-4.27-3.33-7.74-7.42-7.74-1.26 0-2.45.33-3.5.9V16.69a7.42 7.42 0 0 0-14.85 0v1.86a7 7 0 0 0-3.28-.94 7.21 7.21 0 0 0-5.26 2.07 7.92 7.92 0 0 0-2.38 5.67v37.9l-5.83-7.82a10.2 10.2 0 0 0-13.35-2.92 4.1 4.1 0 0 0-1.53 5.48C20 64.52 28.74 80.45 34.07 87.34c.72 1.04 9.02 12.59 23.4 12.59 7.96 0 14.66-2.84 19.38-8.2a26.06 26.06 0 0 0 6.18-14.6l1.78-18.2v-.2c0-4.26-3.32-7.73-7.42-7.73z"/><!--Created by AomAm from the Noun Project--></svg>
`,Df=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="10 17 79 79"><path fill="currentColor" d="M38.1 29.27c-.24 0-.44.2-.44.45v10.7a.45.45 0 00.9 0v-10.7c0-.25-.2-.45-.45-.45zm10.2 26.66a11.54 11.54 0 01-8.48-6.14.45.45 0 10-.8.41 12.45 12.45 0 009.22 6.62.45.45 0 00.07-.9zm24.55-13.08a23.04 23.04 0 00-22.56-23v7.07l-.01.05a2.83 2.83 0 012.39 2.78v14.03l.09-.02h8.84v-9.22a.45.45 0 11.9 0v9.22h10.35v-.9zm0 27.33V44.66H62.5c-.02 2.01-.52 4-1.47 5.76a.45.45 0 01-.61.18.45.45 0 01-.19-.61 11.54 11.54 0 001.36-5.33h-8.83l-.1-.01a2.83 2.83 0 01-2.83 2.84h-.04-.04a2.83 2.83 0 01-2.83-2.83v-14.9a2.82 2.82 0 012.47-2.8v-7.11a23.04 23.04 0 00-22.57 23v.91h14.72V29.88a8.2 8.2 0 015.02-7.57c.22-.1.5.01.59.24.1.23-.01.5-.24.6a7.3 7.3 0 00-4.47 6.73v13.88h3.9a.45.45 0 110 .9h-3.9v.15a7.32 7.32 0 0011.23 6.17.45.45 0 01.49.76 8.22 8.22 0 01-12.62-6.93v-.15H26.82v25.52a23.04 23.04 0 0023.01 23.01 23.04 23.04 0 0023.02-23.01zm1.8-27.33v27.33A24.85 24.85 0 0149.84 95a24.85 24.85 0 01-24.82-24.82V42.85a24.85 24.85 0 0124.82-24.82 24.85 24.85 0 0124.83 24.82zM57.98 29.88v9.36a.45.45 0 11-.9 0v-9.36a7.28 7.28 0 00-3.4-6.17.45.45 0 01.49-.76 8.18 8.18 0 013.8 6.93z"/><!-- Created by Icon Island from the Noun Project --></svg>
`,Ff=function(T){u(y,T);function y(M){var l;return l=T.call(this,M)||this,l.state={moveThreshold:v*k.pixelRatio,keyboardEnabled:!1,moving:!1,zooming:!1,startMouseX:0,startMouseY:0,mouseX:0,mouseY:0,mouseHistory:[],pinchDist:0,keyHandler:new sn,ctrlKeyDown:!1,dblclickData:null,dblclickTimeout:null,longtouchTimeout:null,twofingersTimeout:null,ctrlZoomTimeout:null},l.__onResize=le(function(){return l.psv.autoSize()},50),l}var x=y.prototype;return x.init=function(){window.addEventListener("resize",this),window.addEventListener("keydown",this),window.addEventListener("keyup",this),this.psv.container.addEventListener("mouseenter",this),this.psv.container.addEventListener("mousedown",this),this.psv.container.addEventListener("mouseleave",this),this.psv.container.addEventListener("mousemove",this),window.addEventListener("mouseup",this),this.psv.container.addEventListener("touchstart",this),this.psv.container.addEventListener("touchmove",this),window.addEventListener("touchend",this),this.psv.container.addEventListener(k.mouseWheelEvent,this),k.fullscreenEvent&&document.addEventListener(k.fullscreenEvent,this)},x.destroy=function(){window.removeEventListener("resize",this),window.removeEventListener("keydown",this),window.removeEventListener("keyup",this),this.psv.container.removeEventListener("mouseenter",this),this.psv.container.removeEventListener("mousedown",this),this.psv.container.removeEventListener("mouseleave",this),this.psv.container.removeEventListener("mousemove",this),window.removeEventListener("mouseup",this),this.psv.container.removeEventListener("touchstart",this),this.psv.container.removeEventListener("touchmove",this),window.removeEventListener("touchend",this),this.psv.container.removeEventListener(k.mouseWheelEvent,this),k.fullscreenEvent&&document.removeEventListener(k.fullscreenEvent,this),clearTimeout(this.state.dblclickTimeout),clearTimeout(this.state.longtouchTimeout),clearTimeout(this.state.twofingersTimeout),clearTimeout(this.state.ctrlZoomTimeout),delete this.state,T.prototype.destroy.call(this)},x.handleEvent=function(l){switch(l.type){case"resize":this.__onResize();break;case"keydown":this.__onKeyDown(l);break;case"keyup":this.__onKeyUp();break;case"mouseup":this.__onMouseUp(l);break;case"touchend":this.__onTouchEnd(l);break;case k.fullscreenEvent:this.__fullscreenToggled();break}if(!He(l.target,".psv-navbar")&&!He(l.target,".psv-panel"))switch(l.type){case"mousedown":this.__onMouseDown(l);break;case"mouseenter":this.__onMouseEnter(l);break;case"mouseleave":this.__onMouseLeave(l);break;case"mousemove":this.__onMouseMove(l);break;case"touchstart":this.__onTouchStart(l);break;case"touchmove":this.__onTouchMove(l);break;case k.mouseWheelEvent:this.__onMouseWheel(l);break}},x.enableKeyboard=function(){this.state.keyboardEnabled=!0},x.disableKeyboard=function(){this.state.keyboardEnabled=!1},x.__onKeyDown=function(l){this.config.mousewheelCtrlKey&&(this.state.ctrlKeyDown=l.key===ee.Control,this.state.ctrlKeyDown&&(clearTimeout(this.state.ctrlZoomTimeout),this.psv.overlay.hide(R.CTRL_ZOOM)));var _=this.psv.trigger(D.KEY_PRESS,l.key);if(!_.isDefaultPrevented()&&!!this.state.keyboardEnabled){if(this.config.keyboard[l.key]===U.TOGGLE_AUTOROTATE)this.psv.toggleAutorotate();else if(this.config.keyboard[l.key]&&!this.state.keyHandler.time){switch(this.config.keyboard[l.key]){case U.ROTATE_LAT_UP:this.psv.dynamics.position.roll({latitude:!1});break;case U.ROTATE_LAT_DOWN:this.psv.dynamics.position.roll({latitude:!0});break;case U.ROTATE_LONG_RIGHT:this.psv.dynamics.position.roll({longitude:!1});break;case U.ROTATE_LONG_LEFT:this.psv.dynamics.position.roll({longitude:!0});break;case U.ZOOM_IN:this.psv.dynamics.zoom.roll(!1);break;case U.ZOOM_OUT:this.psv.dynamics.zoom.roll(!0);break}this.state.keyHandler.down()}}},x.__onKeyUp=function(){var l=this;this.state.ctrlKeyDown=!1,this.state.keyboardEnabled&&this.state.keyHandler.up(function(){l.psv.dynamics.position.stop(),l.psv.dynamics.zoom.stop()})},x.__onMouseDown=function(l){!this.config.mousemove||this.config.captureCursor||this.__startMove(l)},x.__onMouseEnter=function(l){!this.config.mousemove||!this.config.captureCursor||this.__startMove(l)},x.__onMouseUp=function(l){!this.config.mousemove||this.config.captureCursor||this.__stopMove(l)},x.__onMouseLeave=function(l){!this.config.mousemove||!this.config.captureCursor||this.__stopMove(l)},x.__onMouseMove=function(l){if(this.config.mousemove&&(l.buttons!==0?(l.preventDefault(),this.__move(l)):this.config.captureCursor&&this.__moveAbsolute(l)),!Q(this.prop.objectsObservers)){var _=Ve(this.psv.container),F={x:l.clientX-_.left,y:l.clientY-_.top},B=this.psv.dataHelper.getIntersections(F),ce=function(Ie,ut,pt){Ie.listener.handleEvent(new CustomEvent(pt,{detail:{originalEvent:l,object:Ie.object,data:Ie.object.userData[ut],viewerPoint:F}}))};Re(this.prop.objectsObservers,function(ge,Ie){var ut=B.find(function(pt){return pt.object.userData[Ie]});ut?(ge.object&&ut.object!==ge.object&&(ce(ge,Ie,G.LEAVE_OBJECT),delete ge.object),ge.object?ce(ge,Ie,G.HOVER_OBJECT):(ge.object=ut.object,ce(ge,Ie,G.ENTER_OBJECT))):ge.object&&(ce(ge,Ie,G.LEAVE_OBJECT),delete ge.object)})}},x.__onTouchStart=function(l){var _=this;!this.config.mousemove||(l.touches.length===1?(this.config.touchmoveTwoFingers||(this.__startMove(l.touches[0]),l.preventDefault()),this.prop.longtouchTimeout||(this.prop.longtouchTimeout=setTimeout(function(){_.__click(l.touches[0],!0),_.prop.longtouchTimeout=null},g))):l.touches.length===2&&(this.__cancelLongTouch(),this.__cancelTwoFingersOverlay(),this.__startMoveZoom(l),l.preventDefault()))},x.__onTouchEnd=function(l){!this.config.mousemove||(this.__cancelLongTouch(),this.__cancelTwoFingersOverlay(),l.touches.length===1?this.__stopMoveZoom():l.touches.length===0&&this.__stopMove(l.changedTouches[0]))},x.__onTouchMove=function(l){var _=this;!this.config.mousemove||(this.__cancelLongTouch(),l.touches.length===1?this.config.touchmoveTwoFingers?this.prop.twofingersTimeout||(this.prop.twofingersTimeout=setTimeout(function(){_.psv.overlay.show({id:R.TWO_FINGERS,image:If,text:_.config.lang.twoFingers})},b)):(l.preventDefault(),this.__move(l.touches[0])):l.touches.length===2&&(l.preventDefault(),this.__moveZoom(l),this.__cancelTwoFingersOverlay()))},x.__cancelLongTouch=function(){this.prop.longtouchTimeout&&(clearTimeout(this.prop.longtouchTimeout),this.prop.longtouchTimeout=null)},x.__cancelTwoFingersOverlay=function(){this.prop.twofingersTimeout&&(clearTimeout(this.prop.twofingersTimeout),this.prop.twofingersTimeout=null),this.psv.overlay.hide(R.TWO_FINGERS)},x.__onMouseWheel=function(l){var _=this;if(!!this.config.mousewheel){if(this.config.mousewheelCtrlKey&&!this.state.ctrlKeyDown){this.psv.overlay.show({id:R.CTRL_ZOOM,image:Df,text:this.config.lang.ctrlZoom}),clearTimeout(this.state.ctrlZoomTimeout),this.state.ctrlZoomTimeout=setTimeout(function(){return _.psv.overlay.hide(R.CTRL_ZOOM)},E);return}l.preventDefault(),l.stopPropagation();var F=he(l).spinY*5*this.config.zoomSpeed;F!==0&&this.psv.dynamics.zoom.step(-F,5)}},x.__fullscreenToggled=function(l){this.prop.fullscreen=l!==void 0?l:de(this.psv.container),this.config.keyboard&&(this.prop.fullscreen?this.psv.startKeyboardControl():this.psv.stopKeyboardControl()),this.psv.trigger(D.FULLSCREEN_UPDATED,this.prop.fullscreen)},x.__startMove=function(l){var _=this;this.psv.stopAutorotate(),this.psv.stopAnimation().then(function(){_.state.mouseX=l.clientX,_.state.mouseY=l.clientY,_.state.startMouseX=_.state.mouseX,_.state.startMouseY=_.state.mouseY,_.state.moving=!0,_.state.zooming=!1,_.state.mouseHistory.length=0,_.__logMouseMove(l)})},x.__startMoveZoom=function(l){var _={x:l.touches[0].clientX,y:l.touches[0].clientY},F={x:l.touches[1].clientX,y:l.touches[1].clientY};this.state.pinchDist=ht(_,F),this.state.mouseX=(_.x+F.x)/2,this.state.mouseY=(_.y+F.y)/2,this.state.startMouseX=this.state.mouseX,this.state.startMouseY=this.state.mouseY,this.state.moving=!0,this.state.zooming=!0},x.__stopMove=function(l){if(!He(l.target,".psv-container")){this.state.moving=!1,this.state.mouseHistory.length=0;return}this.state.moving&&(Math.abs(l.clientX-this.state.startMouseX)<this.state.moveThreshold&&Math.abs(l.clientY-this.state.startMouseY)<this.state.moveThreshold?(this.__click(l),this.state.moving=!1):this.config.moveInertia?(this.__logMouseMove(l),this.__stopMoveInertia(l)):this.state.moving=!1,this.state.mouseHistory.length=0)},x.__stopMoveZoom=function(){this.state.mouseHistory.length=0,this.state.moving=!1,this.state.zooming=!1},x.__stopMoveInertia=function(l){var _=this,F={x:l.clientX-this.state.mouseHistory[0][1],y:l.clientY-this.state.mouseHistory[0][2]},B=Math.sqrt(F.x*F.x+F.y*F.y);this.prop.animationPromise=new Pn({properties:{clientX:{start:l.clientX,end:l.clientX+F.x},clientY:{start:l.clientY,end:l.clientY+F.y}},duration:B*A/100,easing:"outCirc",onTick:function(ge){_.__move(ge,!1)}}),this.prop.animationPromise.then(function(){_.state.moving=!1})},x.__click=function(l,_){var F=this;_===void 0&&(_=!1);var B=this.psv.container.getBoundingClientRect(),ce={rightclick:_||l.button===2,target:l.target,clientX:l.clientX,clientY:l.clientY,viewerX:l.clientX-B.left,viewerY:l.clientY-B.top},ge=this.psv.dataHelper.getIntersections({x:ce.viewerX,y:ce.viewerY}),Ie=ge.find(function(bt){return bt.object.userData.psvSphere});if(Ie){var ut=this.psv.dataHelper.vector3ToSphericalCoords(Ie.point);ce.longitude=ut.longitude,ce.latitude=ut.latitude,ce.objects=ge.map(function(bt){return bt.object}).filter(function(bt){return!bt.userData.psvSphere});try{var pt=this.psv.dataHelper.sphericalCoordsToTextureCoords(ce);ce.textureX=pt.x,ce.textureY=pt.y}catch{ce.textureX=NaN,ce.textureY=NaN}this.state.dblclickTimeout?(Math.abs(this.state.dblclickData.clientX-ce.clientX)<this.state.moveThreshold&&Math.abs(this.state.dblclickData.clientY-ce.clientY)<this.state.moveThreshold&&this.psv.trigger(D.DOUBLE_CLICK,this.state.dblclickData),clearTimeout(this.state.dblclickTimeout),this.state.dblclickTimeout=null,this.state.dblclickData=null):(this.psv.trigger(D.CLICK,ce),this.state.dblclickData=Pe(ce),this.state.dblclickTimeout=setTimeout(function(){F.state.dblclickTimeout=null,F.state.dblclickData=null},m))}},x.__move=function(l,_){if(this.state.moving){var F=l.clientX,B=l.clientY,ce={longitude:(F-this.state.mouseX)/this.prop.size.width*this.config.moveSpeed*n.Math.degToRad(this.prop.hFov),latitude:(B-this.state.mouseY)/this.prop.size.height*this.config.moveSpeed*n.Math.degToRad(this.prop.vFov)},ge=this.psv.getPosition();this.psv.rotate({longitude:ge.longitude-ce.longitude,latitude:ge.latitude+ce.latitude}),this.state.mouseX=F,this.state.mouseY=B,_!==!1&&this.__logMouseMove(l)}},x.__moveAbsolute=function(l){if(this.state.moving){var _=this.psv.container.getBoundingClientRect();this.psv.dynamics.position.goto({longitude:((l.clientX-_.left)/_.width-.5)*Math.PI*2,latitude:-((l.clientY-_.top)/_.height-.5)*Math.PI},10)}},x.__moveZoom=function(l){if(this.state.zooming&&this.state.moving){var _={x:l.touches[0].clientX,y:l.touches[0].clientY},F={x:l.touches[1].clientX,y:l.touches[1].clientY},B=ht(_,F),ce=80*(B-this.state.pinchDist)/this.prop.size.width*this.config.zoomSpeed;this.psv.zoom(this.psv.getZoomLevel()+ce),this.__move({clientX:(_.x+F.x)/2,clientY:(_.y+F.y)/2}),this.state.pinchDist=B}},x.__logMouseMove=function(l){var _=Date.now();this.state.mouseHistory.push([_,l.clientX,l.clientY]);for(var F=null,B=0;B<this.state.mouseHistory.length;)this.state.mouseHistory[0][B]<_-A?this.state.mouseHistory.splice(B,1):F&&this.state.mouseHistory[0][B]-F>A/10?(this.state.mouseHistory.splice(0,B),B=0,F=this.state.mouseHistory[0][B]):(B++,F=this.state.mouseHistory[0][B])},y}(es),Of=function(T){u(y,T);function y(M){var l,_;return _=T.call(this,M)||this,_.renderer=new n.WebGLRenderer({alpha:!0,antialias:!0}),_.renderer.setPixelRatio(k.pixelRatio),_.renderer.domElement.className="psv-canvas",_.scene=new n.Scene,_.camera=new n.PerspectiveCamera(50,16/9,1,2*S),_.mesh=_.psv.adapter.createMesh(),_.mesh.userData=(l={},l[N]=!0,l),_.meshContainer=new n.Group,_.meshContainer.add(_.mesh),_.scene.add(_.meshContainer),_.raycaster=new n.Raycaster,_.timestamp=null,_.ready=!1,_.canvasContainer=document.createElement("div"),_.canvasContainer.className="psv-canvas-container",_.canvasContainer.style.background=_.psv.config.canvasBackground,_.canvasContainer.style.cursor=_.psv.config.mousemove?"move":"default",_.canvasContainer.appendChild(_.renderer.domElement),_.psv.container.appendChild(_.canvasContainer),M.on(D.SIZE_UPDATED,d(_)),M.on(D.ZOOM_UPDATED,d(_)),M.on(D.POSITION_UPDATED,d(_)),M.on(D.CONFIG_CHANGED,d(_)),_.hide(),_}var x=y.prototype;return x.destroy=function(){this.renderer.setAnimationLoop(null),this.__cleanTHREEScene(this.scene),this.psv.container.removeChild(this.canvasContainer),delete this.canvasContainer,delete this.renderer,delete this.scene,delete this.camera,delete this.mesh,delete this.meshContainer,delete this.raycaster,T.prototype.destroy.call(this)},x.handleEvent=function(l){switch(l.type){case D.SIZE_UPDATED:this.__onSizeUpdated();break;case D.ZOOM_UPDATED:this.__onZoomUpdated();break;case D.POSITION_UPDATED:this.__onPositionUpdated();break;case D.CONFIG_CHANGED:l.args[0].includes("fisheye")&&this.__onPositionUpdated(),l.args[0].includes("mousemove")&&(this.canvasContainer.style.cursor=this.psv.config.mousemove?"move":"default");break}},x.hide=function(){this.canvasContainer.style.opacity=0},x.show=function(){this.canvasContainer.style.opacity=1},x.__onSizeUpdated=function(){this.renderer.setSize(this.prop.size.width,this.prop.size.height),this.camera.aspect=this.prop.aspect,this.camera.updateProjectionMatrix(),this.prop.needsUpdate=!0},x.__onZoomUpdated=function(){this.camera.fov=this.prop.vFov,this.camera.updateProjectionMatrix(),this.prop.needsUpdate=!0},x.__onPositionUpdated=function(){this.camera.position.set(0,0,0),this.camera.lookAt(this.prop.direction),this.config.fisheye&&this.camera.position.copy(this.prop.direction).multiplyScalar(this.config.fisheye/2).negate(),this.prop.needsUpdate=!0},x.__renderLoop=function(l){var _=this.timestamp!==null?l-this.timestamp:0;this.timestamp=l,this.psv.trigger(D.BEFORE_RENDER,l,_),Re(this.psv.dynamics,function(F){return F.update(_)}),this.prop.needsUpdate&&(this.render(),this.prop.needsUpdate=!1)},x.render=function(){this.renderer.render(this.scene,this.camera),this.psv.trigger(D.RENDER)},x.setTexture=function(l){var _=this;this.prop.panoData=l.panoData,this.psv.adapter.setTexture(this.mesh,l),this.ready||(this.renderer.setAnimationLoop(function(F){return _.__renderLoop(F)}),this.ready=!0),this.psv.needsUpdate(),this.psv.trigger(D.PANORAMA_LOADED,l)},x.setPanoramaPose=function(l,_){_===void 0&&(_=this.mesh);var F=this.psv.dataHelper.cleanPanoramaPose(l);_.rotation.set(-F.tilt,-F.pan,-F.roll,"ZXY")},x.setSphereCorrection=function(l,_){_===void 0&&(_=this.meshContainer);var F=this.psv.dataHelper.cleanSphereCorrection(l);_.rotation.set(F.tilt,F.pan,F.roll,"ZXY")},x.transition=function(l,_){var F=this,B=Ee(_),ce="zoom"in _,ge=new n.Group,Ie=this.psv.adapter.createMesh(.5);if(this.psv.adapter.setTexture(Ie,l,!0),this.psv.adapter.setTextureOpacity(Ie,0),this.setPanoramaPose(l.panoData,Ie),this.setSphereCorrection(_.sphereCorrection,ge),B){var ut=this.psv.dataHelper.cleanPosition(_),pt=this.psv.getPosition(),bt=new n.Vector3(0,1,0);ge.rotateOnWorldAxis(bt,ut.longitude-pt.longitude);var ts=new n.Vector3(0,1,0).cross(this.camera.getWorldDirection(new n.Vector3)).normalize();ge.rotateOnWorldAxis(ts,ut.latitude-pt.latitude)}ge.add(Ie),this.scene.add(ge);var $n=new Pn({properties:{opacity:{start:0,end:1},zoom:ce?{start:this.psv.getZoomLevel(),end:_.zoom}:void 0},duration:_.transition,easing:"outCubic",onTick:function(Xt){F.psv.adapter.setTextureOpacity(Ie,Xt.opacity),F.psv.adapter.setTextureOpacity(F.mesh,1-Xt.opacity),ce&&F.psv.zoom(Xt.zoom),F.psv.needsUpdate()}});return $n.then(function(ns){ns?(F.setTexture(l),F.psv.adapter.setTextureOpacity(F.mesh,1),F.setPanoramaPose(l.panoData),F.setSphereCorrection(_.sphereCorrection),B&&F.psv.rotate(_)):F.psv.adapter.disposeTexture(l),F.scene.remove(ge),Ie.geometry.dispose(),Ie.geometry=null}),$n},x.__cleanTHREEScene=function(l){var _=this;l.traverse(function(F){F.geometry&&F.geometry.dispose(),F.material&&(Array.isArray(F.material)?F.material.forEach(function(B){B.map&&B.map.dispose(),B.dispose()}):(F.material.map&&F.material.map.dispose(),F.material.dispose())),F.dispose&&!(F instanceof n.Scene)&&F.dispose(),F!==l&&_.__cleanTHREEScene(F)})},y}(es),Nf=function(T){u(y,T);function y(M){var l;return l=T.call(this,M)||this,l.loader=new n.FileLoader,l.loader.setResponseType("blob"),l.config.withCredentials&&l.loader.setWithCredentials(!0),l.config.requestHeaders&&typeof l.config.requestHeaders=="object"&&l.loader.setRequestHeader(l.config.requestHeaders),l}var x=y.prototype;return x.destroy=function(){this.abortLoading(),T.prototype.destroy.call(this)},x.loadTexture=function(l,_){return this.psv.adapter.loadTexture(l,_)},x.abortLoading=function(){},x.loadFile=function(l,_){var F=this;return this.config.requestHeaders&&typeof this.config.requestHeaders=="function"&&this.loader.setRequestHeader(this.config.requestHeaders(l)),new Promise(function(B,ce){var ge=0;_&&_(ge),F.loader.load(l,function(Ie){ge=100,_&&_(ge),B(Ie)},function(Ie){if(Ie.lengthComputable){var ut=Ie.loaded/Ie.total*100;ut>ge&&(ge=ut,_&&_(ge))}},function(Ie){ce(Ie)})})},x.loadImage=function(l,_){return this.loadFile(l,_).then(function(F){return new Promise(function(B,ce){var ge=document.createElementNS("http://www.w3.org/1999/xhtml","img");ge.onload=function(){URL.revokeObjectURL(ge.src),B(ge)},ge.onerror=ce,ge.src=URL.createObjectURL(F)})})},x.preloadPanorama=function(l){return this.psv.adapter.supportsPreload(l)?this.psv.adapter.loadTexture(l):Promise.resolve()},y}(es),un={NONE:0,SHOWING:1,HIDING:2,READY:3},Nc=function(T){u(y,T);function y(M,l){var _;return _=T.call(this,M,"psv-tooltip")||this,_.prop=h({},_.prop,l,{state:un.NONE,width:0,height:0,pos:"",data:null}),_.content=document.createElement("div"),_.content.className="psv-tooltip-content",_.container.appendChild(_.content),_.arrow=document.createElement("div"),_.arrow.className="psv-tooltip-arrow",_.container.appendChild(_.arrow),_.container.addEventListener("transitionend",d(_)),_.container.style.top="-1000px",_.container.style.left="-1000px",_}var x=y.prototype;return x.destroy=function(){delete this.arrow,delete this.content,T.prototype.destroy.call(this)},x.handleEvent=function(l){switch(l.type){case"transitionend":this.__onTransitionEnd(l);break}},x.toggle=function(){throw new s("Tooltip cannot be toggled")},x.show=function(l){if(this.prop.state!==un.NONE)throw new s("Initialized tooltip cannot be re-initialized");l.className&&Ne(this.container,l.className),this.content.innerHTML=l.content;var _=this.container.getBoundingClientRect();this.prop.width=_.right-_.left,this.prop.height=_.bottom-_.top,this.prop.state=un.READY,this.move(l),this.prop.data=l.data,this.prop.state=un.SHOWING,this.psv.trigger(D.SHOW_TOOLTIP,this.prop.data,this)},x.move=function(l){if(this.prop.state!==un.SHOWING&&this.prop.state!==un.READY)throw new s("Uninitialized tooltip cannot be moved");var _=this.container,F=this.arrow,B={posClass:Yt(l.position,"top center",!1),width:this.prop.width,height:this.prop.height,top:0,left:0,arrowTop:0,arrowLeft:0};this.__computeTooltipPosition(B,l);var ce=!1;B.top<this.prop.offset?(B.posClass[0]="bottom",ce=!0):B.top+B.height>this.psv.prop.size.height-this.prop.offset&&(B.posClass[0]="top",ce=!0),B.left<this.prop.offset?(B.posClass[1]="right",ce=!0):B.left+B.width>this.psv.prop.size.width-this.prop.offset&&(B.posClass[1]="left",ce=!0),ce&&this.__computeTooltipPosition(B,l),_.style.top=B.top+"px",_.style.left=B.left+"px",F.style.top=B.arrowTop+"px",F.style.left=B.arrowLeft+"px";var ge=B.posClass.join("-");ge!==this.prop.pos&&(_.classList.remove("psv-tooltip--"+this.prop.pos),this.prop.pos=ge,_.classList.add("psv-tooltip--"+this.prop.pos))},x.hide=function(){this.container.classList.remove("psv-tooltip--visible"),this.prop.state=un.HIDING,this.psv.trigger(D.HIDE_TOOLTIP,this.prop.data)},x.__onTransitionEnd=function(l){if(l.propertyName==="transform")switch(this.prop.state){case un.SHOWING:this.container.classList.add("psv-tooltip--visible"),this.prop.state=un.READY;break;case un.HIDING:this.prop.state=un.NONE,this.destroy();break}},x.__computeTooltipPosition=function(l,_){var F=!1;switch(_.box||(_.box={width:0,height:0}),l.posClass[0]){case"bottom":l.top=_.top+_.box.height+this.prop.offset+this.prop.arrow,l.arrowTop=-this.prop.arrow*2,F=!0;break;case"center":l.top=_.top+_.box.height/2-l.height/2,l.arrowTop=l.height/2-this.prop.arrow;break;case"top":l.top=_.top-l.height-this.prop.offset-this.prop.arrow,l.arrowTop=l.height,F=!0;break}switch(l.posClass[1]){case"right":F?(l.left=_.left+_.box.width/2-this.prop.offset-this.prop.arrow,l.arrowLeft=this.prop.offset):(l.left=_.left+_.box.width+this.prop.offset+this.prop.arrow,l.arrowLeft=-this.prop.arrow*2);break;case"center":l.left=_.left+_.box.width/2-l.width/2,l.arrowLeft=l.width/2-this.prop.arrow;break;case"left":F?(l.left=_.left-l.width+_.box.width/2+this.prop.offset+this.prop.arrow,l.arrowLeft=l.width-this.prop.offset-this.prop.arrow*2):(l.left=_.left-l.width-this.prop.offset-this.prop.arrow,l.arrowLeft=l.width);break}},y}(J),Uf=function(T){u(y,T);function y(M){var l;l=T.call(this,M)||this;var _=new Nc(l.psv);return l.size={arrow:parseInt(ne(_.arrow,"borderTopWidth"),10),offset:parseInt(ne(_.container,"outlineWidth"),10)},_.destroy(),l}var x=y.prototype;return x.destroy=function(){delete this.size,T.prototype.destroy.call(this)},x.create=function(l){var _=new Nc(this.psv,this.size);return _.show(l),_},y}(es);n.Cache.enabled=!0;var Bf=function(T){u(y,T);function y(M){var l;if(l=T.call(this)||this,k.load(),!k.isWebGLSupported)throw new s("WebGL is not supported.");if(k.maxTextureWidth===0)throw new s("Unable to detect system capabilities");return l.prop={ready:!1,uiRefresh:!1,needsUpdate:!1,fullscreen:!1,direction:new n.Vector3(0,0,S),vFov:null,hFov:null,aspect:null,autorotateEnabled:!1,animationPromise:null,loadingPromise:null,startTimeout:null,objectsObservers:{},size:{width:0,height:0},panoData:{fullWidth:0,fullHeight:0,croppedWidth:0,croppedHeight:0,croppedX:0,croppedY:0,poseHeading:0,posePitch:0,poseRoll:0}},l.config=bf(M),l.parent=typeof M.container=="string"?document.getElementById(M.container):M.container,l.parent[C]=d(l),l.container=document.createElement("div"),l.container.classList.add("psv-container"),l.parent.appendChild(l.container),l.adapter=new l.config.adapter[0](d(l),l.config.adapter[1]),l.children=[],l.plugins={},l.renderer=new Of(d(l)),l.textureLoader=new Nf(d(l)),l.eventsHandler=new Ff(d(l)),l.dataHelper=new Pf(d(l)),l.loader=new Tf(d(l)),l.navbar=new Ef(d(l)),l.panel=new Cf(d(l)),l.tooltip=new Uf(d(l)),l.notification=new Sf(d(l)),l.overlay=new Af(d(l)),l.dynamics={zoom:new In(function(_){l.prop.vFov=l.dataHelper.zoomLevelToFov(_),l.prop.hFov=l.dataHelper.vFovToHFov(l.prop.vFov),l.trigger(D.ZOOM_UPDATED,_)},l.config.defaultZoomLvl,0,100),position:new Ws({longitude:new In(null,l.config.defaultLong,0,2*Math.PI,!0),latitude:new In(null,l.config.defaultLat,-Math.PI/2,Math.PI/2)},function(_){l.dataHelper.sphericalCoordsToVector3(_,l.prop.direction),l.trigger(D.POSITION_UPDATED,_)})},l.__updateSpeeds(),l.eventsHandler.init(),l.__resizeRefresh=le(function(){return l.refreshUi("resize")},500),l.resize(l.config.size),l.config.plugins.forEach(function(_){var F=_[0],B=_[1];l.plugins[F.id]=new F(d(l),B)}),Re(l.plugins,function(_){return _.init==null?void 0:_.init()}),l.navbar.setButtons(l.config.navbar),l.config.panorama&&l.setPanorama(l.config.panorama),k.isTouchEnabled.then(function(_){return ke(l.container,"psv--is-touch",_)}),l.once(D.RENDER,function(){l.config.navbar&&(l.container.classList.add("psv--has-navbar"),l.navbar.show()),l.config.autorotateDelay&&(l.prop.startTimeout=setTimeout(function(){return l.startAutorotate()},l.config.autorotateDelay)),l.prop.ready=!0,setTimeout(function(){l.refreshUi("init"),l.trigger(D.READY)},0)}),l}var x=y.prototype;return x.destroy=function(){this.__stopAll(),this.stopKeyboardControl(),this.exitFullscreen(),this.eventsHandler.destroy(),this.renderer.destroy(),this.textureLoader.destroy(),this.dataHelper.destroy(),this.adapter.destroy(),this.children.slice().forEach(function(l){return l.destroy()}),this.children.length=0,Re(this.plugins,function(l){return l.destroy()}),delete this.plugins,this.parent.removeChild(this.container),delete this.parent[C],delete this.parent,delete this.container,delete this.loader,delete this.navbar,delete this.panel,delete this.tooltip,delete this.notification,delete this.overlay,delete this.config},x.refreshUi=function(l){var _=this;!this.prop.ready||(this.prop.uiRefresh?this.prop.uiRefresh!=="new"&&(this.prop.uiRefresh="new",setTimeout(function(){_.prop.uiRefresh=!1,_.refreshUi(l)})):(this.prop.uiRefresh=!0,this.children.every(function(F){return F.refreshUi(),_.prop.uiRefresh===!0}),this.prop.uiRefresh=!1))},x.getPlugin=function(l){if(typeof l=="string")return this.plugins[l];var _=z(l,$r);return _?this.plugins[_.id]:void 0},x.getPosition=function(){return this.dataHelper.cleanPosition(this.dynamics.position.current)},x.getZoomLevel=function(){return this.dynamics.zoom.current},x.getSize=function(){return h({},this.prop.size)},x.isAutorotateEnabled=function(){return this.prop.autorotateEnabled},x.isFullscreenEnabled=function(){return k.fullscreenEvent?de(this.container):this.prop.fullscreen},x.needsUpdate=function(){this.prop.needsUpdate=!0},x.autoSize=function(){(this.container.clientWidth!==this.prop.size.width||this.container.clientHeight!==this.prop.size.height)&&(this.prop.size.width=Math.round(this.container.clientWidth),this.prop.size.height=Math.round(this.container.clientHeight),this.prop.aspect=this.prop.size.width/this.prop.size.height,this.prop.hFov=this.dataHelper.vFovToHFov(this.prop.vFov),this.trigger(D.SIZE_UPDATED,this.getSize()),this.__resizeRefresh())},x.setPanorama=function(l,_){var F,B=this;_===void 0&&(_={}),this.textureLoader.abortLoading(),(F=this.prop.transitionAnimation)==null||F.cancel(),this.prop.ready||("sphereCorrection"in _||(_.sphereCorrection=this.config.sphereCorrection),"panoData"in _||(_.panoData=this.config.panoData)),(_.transition===void 0||_.transition===!0)&&(_.transition=p),_.showLoader===void 0&&(_.showLoader=!0),_.caption===void 0&&(_.caption=this.config.caption),_.description===void 0&&(_.description=this.config.description);var ce=Ee(_),ge="zoom"in _;(ce||ge)&&this.__stopAll(),this.hideError(),this.config.panorama=l,this.config.caption=_.caption,this.config.description=_.description;var Ie=function(bt){if(B.loader.hide(),B.prop.loadingPromise=null,pe(bt))return!1;if(bt)throw B.navbar.setCaption(""),B.showError(B.config.lang.loadError),console.error(bt),bt;return B.navbar.setCaption(B.config.caption),!0};this.navbar.setCaption("<em>"+(this.config.loadingTxt||"")+"</em>"),(_.showLoader||!this.prop.ready)&&this.loader.show();var ut=this.adapter.loadTexture(this.config.panorama,_.panoData).then(function(pt){if(pt.panorama!==B.config.panorama)throw B.adapter.disposeTexture(pt),me();return pt});return!_.transition||!this.prop.ready||!this.adapter.supportsTransition(this.config.panorama)?this.prop.loadingPromise=ut.then(function(pt){B.renderer.show(),B.renderer.setTexture(pt),B.renderer.setPanoramaPose(pt.panoData),B.renderer.setSphereCorrection(_.sphereCorrection),ge&&B.zoom(_.zoom),ce&&B.rotate(_)}).then(Ie,Ie):this.prop.loadingPromise=ut.then(function(pt){return B.loader.hide(),B.prop.transitionAnimation=B.renderer.transition(pt,_),B.prop.transitionAnimation.then(function(bt){if(B.prop.transitionAnimation=null,!bt)throw me()})}).then(Ie,Ie),this.prop.loadingPromise},x.setOptions=function(l){var _=this;Re(l,function(F,B){if(Xs[B]){Ae(Xs[B]);return}if(!Object.prototype.hasOwnProperty.call(hn,B))throw new s("Unknown option "+B);if(Fc[B])throw new s(Fc[B]);switch(qs[B]?_.config[B]=qs[B](F,l):_.config[B]=F,B){case"caption":case"description":_.navbar.setCaption(_.config.caption);break;case"size":_.resize(F);break;case"sphereCorrection":_.renderer.setSphereCorrection(F);break;case"navbar":case"lang":_.navbar.setButtons(_.config.navbar);break;case"moveSpeed":case"zoomSpeed":_.__updateSpeeds();break;case"minFov":case"maxFov":_.dynamics.zoom.setValue(_.dataHelper.fovToZoomLevel(_.prop.vFov)),_.trigger(D.ZOOM_UPDATED,_.getZoomLevel());break;case"canvasBackground":_.renderer.canvasContainer.style.background=_.config.canvasBackground;break}}),this.needsUpdate(),this.refreshUi("set options"),this.trigger(D.CONFIG_CHANGED,Object.keys(l))},x.setOption=function(l,_){var F;this.setOptions((F={},F[l]=_,F))},x.startAutorotate=function(l){l===void 0&&(l=!1),!(l&&!this.isAutorotateEnabled())&&(l||this.__stopAll(),this.dynamics.position.roll({longitude:this.config.autorotateSpeed<0},Math.abs(this.config.autorotateSpeed/this.config.moveSpeed)),this.dynamics.position.goto({latitude:this.config.autorotateLat},Math.abs(this.config.autorotateSpeed/this.config.moveSpeed)),this.prop.autorotateEnabled=!0,l||this.trigger(D.AUTOROTATE,!0))},x.stopAutorotate=function(){this.prop.startTimeout&&(clearTimeout(this.prop.startTimeout),this.prop.startTimeout=null),this.isAutorotateEnabled()&&(this.dynamics.position.stop(),this.prop.autorotateEnabled=!1,this.trigger(D.AUTOROTATE,!1))},x.toggleAutorotate=function(){this.isAutorotateEnabled()?this.stopAutorotate():this.startAutorotate()},x.showError=function(l){this.overlay.show({id:R.ERROR,image:Lf,text:l,dissmisable:!1})},x.hideError=function(){this.overlay.hide(R.ERROR)},x.rotate=function(l){var _=this.trigger(D.BEFORE_ROTATE,l);if(!_.isDefaultPrevented()){var F=this.change(K.GET_ROTATE_POSITION,this.dataHelper.cleanPosition(l));this.dynamics.position.setValue(F)}},x.animate=function(l){var _=this;this.__stopAll();var F=Ee(l),B="zoom"in l,ce={},ge;if(F){var Ie=this.change(K.GET_ANIMATE_POSITION,this.dataHelper.cleanPosition(l)),ut=this.getPosition(),pt=rt(ut.longitude,Ie.longitude);ce.longitude={start:ut.longitude,end:ut.longitude+pt},ce.latitude={start:ut.latitude,end:Ie.latitude},ge=this.dataHelper.speedToDuration(l.speed,O(ut,Ie))}if(B){var bt=Math.abs(l.zoom-this.getZoomLevel());ce.zoom={start:this.getZoomLevel(),end:l.zoom},ge||(ge=this.dataHelper.speedToDuration(l.speed,Math.PI/4*bt/100))}return ge?(this.prop.animationPromise=new Pn({properties:ce,duration:ge,easing:"inOutSine",onTick:function($n){F&&_.rotate($n),B&&_.zoom($n.zoom)}}),this.prop.animationPromise):(F&&this.rotate(l),B&&this.zoom(l.zoom),new Pn)},x.stopAnimation=function(){var l=this;return this.prop.animationPromise?new Promise(function(_){l.prop.animationPromise.then(_),l.prop.animationPromise.cancel(),l.prop.animationPromise=null}):Promise.resolve()},x.zoom=function(l){this.dynamics.zoom.setValue(l)},x.zoomIn=function(l){l===void 0&&(l=1),this.dynamics.zoom.step(l)},x.zoomOut=function(l){l===void 0&&(l=1),this.dynamics.zoom.step(-l)},x.resize=function(l){var _=this;["width","height"].forEach(function(F){l&&l[F]&&(/^[0-9.]+$/.test(l[F])&&(l[F]+="px"),_.parent.style[F]=l[F])}),this.autoSize()},x.enterFullscreen=function(){k.fullscreenEvent?qe(this.container):(this.container.classList.add("psv-container--fullscreen"),this.autoSize(),this.eventsHandler.__fullscreenToggled(!0))},x.exitFullscreen=function(){this.isFullscreenEnabled()&&(k.fullscreenEvent?te():(this.container.classList.remove("psv-container--fullscreen"),this.autoSize(),this.eventsHandler.__fullscreenToggled(!1)))},x.toggleFullscreen=function(){this.isFullscreenEnabled()?this.exitFullscreen():this.enterFullscreen()},x.startKeyboardControl=function(){this.eventsHandler.enableKeyboard()},x.stopKeyboardControl=function(){this.eventsHandler.disableKeyboard()},x.observeObjects=function(l,_){var F=this;return this.prop.objectsObservers[l]={listener:_},function(){delete F.prop.objectsObservers[l]}},x.__stopAll=function(){this.stopAutorotate(),this.stopAnimation(),this.trigger(D.STOP_ALL)},x.__updateSpeeds=function(){this.dynamics.zoom.setSpeed(this.config.zoomSpeed*50),this.dynamics.position.setSpeed(n.Math.degToRad(this.config.moveSpeed*50))},y}(i.EventEmitter);t.AbstractAdapter=o,t.AbstractButton=Y,t.AbstractComponent=J,t.AbstractPlugin=$r,t.Animation=Pn,t.CONSTANTS=X,t.DEFAULTS=hn,t.EquirectangularAdapter=q,t.PSVError=s,t.SYSTEM=k,t.Viewer=Bf,t.registerButton=Oc,t.utils=I,Object.defineProperty(t,"__esModule",{value:!0})})})(Uc,Uc.exports);export{Uc as p};
//# sourceMappingURL=photo-sphere-viewer.adb51acf.js.map
