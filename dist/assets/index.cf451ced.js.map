{"version":3,"file":"index.cf451ced.js","sources":["../../node_modules/obj-mtl-loader-three/index.js"],"sourcesContent":["var THREE = require('three')\n\n/**\n * Loads a Wavefront .mtl file specifying materials\n *\n * @author angelxuanchang\n */\n\nTHREE.MTLLoader = function ( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n};\n\nTHREE.MTLLoader.prototype = {\n\n\tconstructor: THREE.MTLLoader,\n\n\t/**\n\t * Loads and parses a MTL asset from a URL.\n\t *\n\t * @param {String} url - URL to the MTL file.\n\t * @param {Function} [onLoad] - Callback invoked with the loaded object.\n\t * @param {Function} [onProgress] - Callback for download progress.\n\t * @param {Function} [onError] - Callback for download errors.\n\t *\n\t * @see setPath setTexturePath\n\t *\n\t * @note In order for relative texture references to resolve correctly\n\t * you must call setPath and/or setTexturePath explicitly prior to load.\n\t */\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new THREE.FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( text ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\t/**\n\t * Set base path for resolving references.\n\t * If set this path will be prepended to each loaded and found reference.\n\t *\n\t * @see setTexturePath\n\t * @param {String} path\n\t * @return {THREE.MTLLoader}\n\t *\n\t * @example\n\t *     mtlLoader.setPath( 'assets/obj/' );\n\t *     mtlLoader.load( 'my.mtl', ... );\n\t */\n\tsetPath: function ( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * Set base path for resolving texture references.\n\t * If set this path will be prepended found texture reference.\n\t * If not set and setPath is, it will be used as texture base path.\n\t *\n\t * @see setPath\n\t * @param {String} path\n\t * @return {THREE.MTLLoader}\n\t *\n\t * @example\n\t *     mtlLoader.setPath( 'assets/obj/' );\n\t *     mtlLoader.setTexturePath( 'assets/textures/' );\n\t *     mtlLoader.load( 'my.mtl', ... );\n\t */\n\tsetTexturePath: function ( path ) {\n\n\t\tthis.texturePath = path;\n\t\treturn this;\n\n\t},\n\n\tsetBaseUrl: function ( path ) {\n\n\t\tconsole.warn( 'THREE.MTLLoader: .setBaseUrl() is deprecated. Use .setTexturePath( path ) for texture path or .setPath( path ) for general base path instead.' );\n\n\t\treturn this.setTexturePath( path );\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetMaterialOptions: function ( value ) {\n\n\t\tthis.materialOptions = value;\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * Parses a MTL file.\n\t *\n\t * @param {String} text - Content of MTL file\n\t * @return {THREE.MTLLoader.MaterialCreator}\n\t *\n\t * @see setPath setTexturePath\n\t *\n\t * @note In order for relative texture references to resolve correctly\n\t * you must call setPath and/or setTexturePath explicitly prior to parse.\n\t */\n\tparse: function ( text ) {\n\n\t\tvar lines = text.split( '\\n' );\n\t\tvar info = {};\n\t\tvar delimiter_pattern = /\\s+/;\n\t\tvar materialsInfo = {};\n\n\t\tfor ( var i = 0; i < lines.length; i ++ ) {\n\n\t\t\tvar line = lines[ i ];\n\t\t\tline = line.trim();\n\n\t\t\tif ( line.length === 0 || line.charAt( 0 ) === '#' ) {\n\n\t\t\t\t// Blank line or comment ignore\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tvar pos = line.indexOf( ' ' );\n\n\t\t\tvar key = ( pos >= 0 ) ? line.substring( 0, pos ) : line;\n\t\t\tkey = key.toLowerCase();\n\n\t\t\tvar value = ( pos >= 0 ) ? line.substring( pos + 1 ) : '';\n\t\t\tvalue = value.trim();\n\n\t\t\tif ( key === 'newmtl' ) {\n\n\t\t\t\t// New material\n\n\t\t\t\tinfo = { name: value };\n\t\t\t\tmaterialsInfo[ value ] = info;\n\n\t\t\t} else if ( info ) {\n\n\t\t\t\tif ( key === 'ka' || key === 'kd' || key === 'ks' ) {\n\n\t\t\t\t\tvar ss = value.split( delimiter_pattern, 3 );\n\t\t\t\t\tinfo[ key ] = [ parseFloat( ss[ 0 ] ), parseFloat( ss[ 1 ] ), parseFloat( ss[ 2 ] ) ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tinfo[ key ] = value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar materialCreator = new THREE.MTLLoader.MaterialCreator( this.texturePath || this.path, this.materialOptions );\n\t\tmaterialCreator.setCrossOrigin( this.crossOrigin );\n\t\tmaterialCreator.setManager( this.manager );\n\t\tmaterialCreator.setMaterials( materialsInfo );\n\t\treturn materialCreator;\n\n\t}\n\n};\n\n/**\n * Create a new THREE-MTLLoader.MaterialCreator\n * @param baseUrl - Url relative to which textures are loaded\n * @param options - Set of options on how to construct the materials\n *                  side: Which side to apply the material\n *                        THREE.FrontSide (default), THREE.BackSide, THREE.DoubleSide\n *                  wrap: What type of wrapping to apply for textures\n *                        THREE.RepeatWrapping (default), THREE.ClampToEdgeWrapping, THREE.MirroredRepeatWrapping\n *                  normalizeRGB: RGBs need to be normalized to 0-1 from 0-255\n *                                Default: false, assumed to be already normalized\n *                  ignoreZeroRGBs: Ignore values of RGBs (Ka,Kd,Ks) that are all 0's\n *                                  Default: false\n * @constructor\n */\n\nTHREE.MTLLoader.MaterialCreator = function ( baseUrl, options ) {\n\n\tthis.baseUrl = baseUrl || '';\n\tthis.options = options;\n\tthis.materialsInfo = {};\n\tthis.materials = {};\n\tthis.materialsArray = [];\n\tthis.nameLookup = {};\n\n\tthis.side = ( this.options && this.options.side ) ? this.options.side : THREE.FrontSide;\n\tthis.wrap = ( this.options && this.options.wrap ) ? this.options.wrap : THREE.RepeatWrapping;\n\n};\n\nTHREE.MTLLoader.MaterialCreator.prototype = {\n\n\tconstructor: THREE.MTLLoader.MaterialCreator,\n\n\tcrossOrigin: 'Anonymous',\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\n\t},\n\n\tsetManager: function ( value ) {\n\n\t\tthis.manager = value;\n\n\t},\n\n\tsetMaterials: function ( materialsInfo ) {\n\n\t\tthis.materialsInfo = this.convert( materialsInfo );\n\t\tthis.materials = {};\n\t\tthis.materialsArray = [];\n\t\tthis.nameLookup = {};\n\n\t},\n\n\tconvert: function ( materialsInfo ) {\n\n\t\tif ( ! this.options ) return materialsInfo;\n\n\t\tvar converted = {};\n\n\t\tfor ( var mn in materialsInfo ) {\n\n\t\t\t// Convert materials info into normalized form based on options\n\n\t\t\tvar mat = materialsInfo[ mn ];\n\n\t\t\tvar covmat = {};\n\n\t\t\tconverted[ mn ] = covmat;\n\n\t\t\tfor ( var prop in mat ) {\n\n\t\t\t\tvar save = true;\n\t\t\t\tvar value = mat[ prop ];\n\t\t\t\tvar lprop = prop.toLowerCase();\n\n\t\t\t\tswitch ( lprop ) {\n\n\t\t\t\t\tcase 'kd':\n\t\t\t\t\tcase 'ka':\n\t\t\t\t\tcase 'ks':\n\n\t\t\t\t\t\t// Diffuse color (color under white light) using RGB values\n\n\t\t\t\t\t\tif ( this.options && this.options.normalizeRGB ) {\n\n\t\t\t\t\t\t\tvalue = [ value[ 0 ] / 255, value[ 1 ] / 255, value[ 2 ] / 255 ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( this.options && this.options.ignoreZeroRGBs ) {\n\n\t\t\t\t\t\t\tif ( value[ 0 ] === 0 && value[ 1 ] === 0 && value[ 2 ] === 0 ) {\n\n\t\t\t\t\t\t\t\t// ignore\n\n\t\t\t\t\t\t\t\tsave = false;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tif ( save ) {\n\n\t\t\t\t\tcovmat[ lprop ] = value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn converted;\n\n\t},\n\n\tpreload: function () {\n\n\t\tfor ( var mn in this.materialsInfo ) {\n\n\t\t\tthis.create( mn );\n\n\t\t}\n\n\t},\n\n\tgetIndex: function ( materialName ) {\n\n\t\treturn this.nameLookup[ materialName ];\n\n\t},\n\n\tgetAsArray: function () {\n\n\t\tvar index = 0;\n\n\t\tfor ( var mn in this.materialsInfo ) {\n\n\t\t\tthis.materialsArray[ index ] = this.create( mn );\n\t\t\tthis.nameLookup[ mn ] = index;\n\t\t\tindex ++;\n\n\t\t}\n\n\t\treturn this.materialsArray;\n\n\t},\n\n\tcreate: function ( materialName ) {\n\n\t\tif ( this.materials[ materialName ] === undefined ) {\n\n\t\t\tthis.createMaterial_( materialName );\n\n\t\t}\n\n\t\treturn this.materials[ materialName ];\n\n\t},\n\n\tcreateMaterial_: function ( materialName ) {\n\n\t\t// Create material\n\n\t\tvar scope = this;\n\t\tvar mat = this.materialsInfo[ materialName ];\n\t\tvar params = {\n\n\t\t\tname: materialName,\n\t\t\tside: this.side\n\n\t\t};\n\n\t\tfunction resolveURL( baseUrl, url ) {\n\n\t\t\tif ( typeof url !== 'string' || url === '' )\n\t\t\t\treturn '';\n\n\t\t\t// Absolute URL\n\t\t\tif ( /^https?:\\/\\//i.test( url ) ) return url;\n\n\t\t\treturn baseUrl + url;\n\n\t\t}\n\n\t\tfunction setMapForType( mapType, value ) {\n\n\t\t\tif ( params[ mapType ] ) return; // Keep the first encountered texture\n\n\t\t\tvar texParams = scope.getTextureParams( value, params );\n\t\t\tvar map = scope.loadTexture( resolveURL( scope.baseUrl, texParams.url ) );\n\n\t\t\tmap.repeat.copy( texParams.scale );\n\t\t\tmap.offset.copy( texParams.offset );\n\n\t\t\tmap.wrapS = scope.wrap;\n\t\t\tmap.wrapT = scope.wrap;\n\n\t\t\tparams[ mapType ] = map;\n\n\t\t}\n\n\t\tfor ( var prop in mat ) {\n\n\t\t\tvar value = mat[ prop ];\n\t\t\tvar n;\n\n\t\t\tif ( value === '' ) continue;\n\n\t\t\tswitch ( prop.toLowerCase() ) {\n\n\t\t\t\t// Ns is material specular exponent\n\n\t\t\t\tcase 'kd':\n\n\t\t\t\t\t// Diffuse color (color under white light) using RGB values\n\n\t\t\t\t\tparams.color = new THREE.Color().fromArray( value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ks':\n\n\t\t\t\t\t// Specular color (color when light is reflected from shiny surface) using RGB values\n\t\t\t\t\tparams.specular = new THREE.Color().fromArray( value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map_kd':\n\n\t\t\t\t\t// Diffuse texture map\n\n\t\t\t\t\tsetMapForType( \"map\", value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map_ks':\n\n\t\t\t\t\t// Specular map\n\n\t\t\t\t\tsetMapForType( \"specularMap\", value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'norm':\n\n\t\t\t\t\tsetMapForType( \"normalMap\", value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map_bump':\n\t\t\t\tcase 'bump':\n\n\t\t\t\t\t// Bump texture map\n\n\t\t\t\t\tsetMapForType( \"bumpMap\", value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ns':\n\n\t\t\t\t\t// The specular exponent (defines the focus of the specular highlight)\n\t\t\t\t\t// A high exponent results in a tight, concentrated highlight. Ns values normally range from 0 to 1000.\n\n\t\t\t\t\tparams.shininess = parseFloat( value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'd':\n\t\t\t\t\tn = parseFloat( value );\n\n\t\t\t\t\tif ( n < 1 ) {\n\n\t\t\t\t\t\tparams.opacity = n;\n\t\t\t\t\t\tparams.transparent = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'tr':\n\t\t\t\t\tn = parseFloat( value );\n\n\t\t\t\t\tif ( this.options && this.options.invertTrProperty ) n = 1 - n;\n\n\t\t\t\t\tif ( n > 0 ) {\n\n\t\t\t\t\t\tparams.opacity = 1 - n;\n\t\t\t\t\t\tparams.transparent = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.materials[ materialName ] = new THREE.MeshPhongMaterial( params );\n\t\treturn this.materials[ materialName ];\n\n\t},\n\n\tgetTextureParams: function ( value, matParams ) {\n\n\t\tvar texParams = {\n\n\t\t\tscale: new THREE.Vector2( 1, 1 ),\n\t\t\toffset: new THREE.Vector2( 0, 0 )\n\n\t\t };\n\n\t\tvar items = value.split( /\\s+/ );\n\t\tvar pos;\n\n\t\tpos = items.indexOf( '-bm' );\n\n\t\tif ( pos >= 0 ) {\n\n\t\t\tmatParams.bumpScale = parseFloat( items[ pos + 1 ] );\n\t\t\titems.splice( pos, 2 );\n\n\t\t}\n\n\t\tpos = items.indexOf( '-s' );\n\n\t\tif ( pos >= 0 ) {\n\n\t\t\ttexParams.scale.set( parseFloat( items[ pos + 1 ] ), parseFloat( items[ pos + 2 ] ) );\n\t\t\titems.splice( pos, 4 ); // we expect 3 parameters here!\n\n\t\t}\n\n\t\tpos = items.indexOf( '-o' );\n\n\t\tif ( pos >= 0 ) {\n\n\t\t\ttexParams.offset.set( parseFloat( items[ pos + 1 ] ), parseFloat( items[ pos + 2 ] ) );\n\t\t\titems.splice( pos, 4 ); // we expect 3 parameters here!\n\n\t\t}\n\n\t\ttexParams.url = items.join( ' ' ).trim();\n\t\treturn texParams;\n\n\t},\n\n\tloadTexture: function ( url, mapping, onLoad, onProgress, onError ) {\n\n\t\tvar texture;\n\t\tvar manager = ( this.manager !== undefined ) ? this.manager : THREE.DefaultLoadingManager;\n\t\tvar loader = manager.getHandler( url );\n\n\t\tif ( loader === null ) {\n\n\t\t\tloader = new THREE.TextureLoader( manager );\n\n\t\t}\n\n\t\tif ( loader.setCrossOrigin ) loader.setCrossOrigin( this.crossOrigin );\n\t\ttexture = loader.load( url, onLoad, onProgress, onError );\n\n\t\tif ( mapping !== undefined ) texture.mapping = mapping;\n\n\t\treturn texture;\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.OBJLoader = ( function () {\n\n\t// o object_name | g group_name\n\tvar object_pattern = /^[og]\\s*(.+)?/;\n\t// mtllib file_reference\n\tvar material_library_pattern = /^mtllib /;\n\t// usemtl material_name\n\tvar material_use_pattern = /^usemtl /;\n\n\tfunction ParserState() {\n\n\t\tvar state = {\n\t\t\tobjects: [],\n\t\t\tobject: {},\n\n\t\t\tvertices: [],\n\t\t\tnormals: [],\n\t\t\tcolors: [],\n\t\t\tuvs: [],\n\n\t\t\tmaterialLibraries: [],\n\n\t\t\tstartObject: function ( name, fromDeclaration ) {\n\n\t\t\t\t// If the current object (initial from reset) is not from a g/o declaration in the parsed\n\t\t\t\t// file. We need to use it for the first parsed g/o to keep things in sync.\n\t\t\t\tif ( this.object && this.object.fromDeclaration === false ) {\n\n\t\t\t\t\tthis.object.name = name;\n\t\t\t\t\tthis.object.fromDeclaration = ( fromDeclaration !== false );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tvar previousMaterial = ( this.object && typeof this.object.currentMaterial === 'function' ? this.object.currentMaterial() : undefined );\n\n\t\t\t\tif ( this.object && typeof this.object._finalize === 'function' ) {\n\n\t\t\t\t\tthis.object._finalize( true );\n\n\t\t\t\t}\n\n\t\t\t\tthis.object = {\n\t\t\t\t\tname: name || '',\n\t\t\t\t\tfromDeclaration: ( fromDeclaration !== false ),\n\n\t\t\t\t\tgeometry: {\n\t\t\t\t\t\tvertices: [],\n\t\t\t\t\t\tnormals: [],\n\t\t\t\t\t\tcolors: [],\n\t\t\t\t\t\tuvs: []\n\t\t\t\t\t},\n\t\t\t\t\tmaterials: [],\n\t\t\t\t\tsmooth: true,\n\n\t\t\t\t\tstartMaterial: function ( name, libraries ) {\n\n\t\t\t\t\t\tvar previous = this._finalize( false );\n\n\t\t\t\t\t\t// New usemtl declaration overwrites an inherited material, except if faces were declared\n\t\t\t\t\t\t// after the material, then it must be preserved for proper MultiMaterial continuation.\n\t\t\t\t\t\tif ( previous && ( previous.inherited || previous.groupCount <= 0 ) ) {\n\n\t\t\t\t\t\t\tthis.materials.splice( previous.index, 1 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar material = {\n\t\t\t\t\t\t\tindex: this.materials.length,\n\t\t\t\t\t\t\tname: name || '',\n\t\t\t\t\t\t\tmtllib: ( Array.isArray( libraries ) && libraries.length > 0 ? libraries[ libraries.length - 1 ] : '' ),\n\t\t\t\t\t\t\tsmooth: ( previous !== undefined ? previous.smooth : this.smooth ),\n\t\t\t\t\t\t\tgroupStart: ( previous !== undefined ? previous.groupEnd : 0 ),\n\t\t\t\t\t\t\tgroupEnd: - 1,\n\t\t\t\t\t\t\tgroupCount: - 1,\n\t\t\t\t\t\t\tinherited: false,\n\n\t\t\t\t\t\t\tclone: function ( index ) {\n\n\t\t\t\t\t\t\t\tvar cloned = {\n\t\t\t\t\t\t\t\t\tindex: ( typeof index === 'number' ? index : this.index ),\n\t\t\t\t\t\t\t\t\tname: this.name,\n\t\t\t\t\t\t\t\t\tmtllib: this.mtllib,\n\t\t\t\t\t\t\t\t\tsmooth: this.smooth,\n\t\t\t\t\t\t\t\t\tgroupStart: 0,\n\t\t\t\t\t\t\t\t\tgroupEnd: - 1,\n\t\t\t\t\t\t\t\t\tgroupCount: - 1,\n\t\t\t\t\t\t\t\t\tinherited: false\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tcloned.clone = this.clone.bind( cloned );\n\t\t\t\t\t\t\t\treturn cloned;\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tthis.materials.push( material );\n\n\t\t\t\t\t\treturn material;\n\n\t\t\t\t\t},\n\n\t\t\t\t\tcurrentMaterial: function () {\n\n\t\t\t\t\t\tif ( this.materials.length > 0 ) {\n\n\t\t\t\t\t\t\treturn this.materials[ this.materials.length - 1 ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn undefined;\n\n\t\t\t\t\t},\n\n\t\t\t\t\t_finalize: function ( end ) {\n\n\t\t\t\t\t\tvar lastMultiMaterial = this.currentMaterial();\n\t\t\t\t\t\tif ( lastMultiMaterial && lastMultiMaterial.groupEnd === - 1 ) {\n\n\t\t\t\t\t\t\tlastMultiMaterial.groupEnd = this.geometry.vertices.length / 3;\n\t\t\t\t\t\t\tlastMultiMaterial.groupCount = lastMultiMaterial.groupEnd - lastMultiMaterial.groupStart;\n\t\t\t\t\t\t\tlastMultiMaterial.inherited = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Ignore objects tail materials if no face declarations followed them before a new o/g started.\n\t\t\t\t\t\tif ( end && this.materials.length > 1 ) {\n\n\t\t\t\t\t\t\tfor ( var mi = this.materials.length - 1; mi >= 0; mi -- ) {\n\n\t\t\t\t\t\t\t\tif ( this.materials[ mi ].groupCount <= 0 ) {\n\n\t\t\t\t\t\t\t\t\tthis.materials.splice( mi, 1 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Guarantee at least one empty material, this makes the creation later more straight forward.\n\t\t\t\t\t\tif ( end && this.materials.length === 0 ) {\n\n\t\t\t\t\t\t\tthis.materials.push( {\n\t\t\t\t\t\t\t\tname: '',\n\t\t\t\t\t\t\t\tsmooth: this.smooth\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn lastMultiMaterial;\n\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// Inherit previous objects material.\n\t\t\t\t// Spec tells us that a declared material must be set to all objects until a new material is declared.\n\t\t\t\t// If a usemtl declaration is encountered while this new object is being parsed, it will\n\t\t\t\t// overwrite the inherited material. Exception being that there was already face declarations\n\t\t\t\t// to the inherited material, then it will be preserved for proper MultiMaterial continuation.\n\n\t\t\t\tif ( previousMaterial && previousMaterial.name && typeof previousMaterial.clone === 'function' ) {\n\n\t\t\t\t\tvar declared = previousMaterial.clone( 0 );\n\t\t\t\t\tdeclared.inherited = true;\n\t\t\t\t\tthis.object.materials.push( declared );\n\n\t\t\t\t}\n\n\t\t\t\tthis.objects.push( this.object );\n\n\t\t\t},\n\n\t\t\tfinalize: function () {\n\n\t\t\t\tif ( this.object && typeof this.object._finalize === 'function' ) {\n\n\t\t\t\t\tthis.object._finalize( true );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tparseVertexIndex: function ( value, len ) {\n\n\t\t\t\tvar index = parseInt( value, 10 );\n\t\t\t\treturn ( index >= 0 ? index - 1 : index + len / 3 ) * 3;\n\n\t\t\t},\n\n\t\t\tparseNormalIndex: function ( value, len ) {\n\n\t\t\t\tvar index = parseInt( value, 10 );\n\t\t\t\treturn ( index >= 0 ? index - 1 : index + len / 3 ) * 3;\n\n\t\t\t},\n\n\t\t\tparseUVIndex: function ( value, len ) {\n\n\t\t\t\tvar index = parseInt( value, 10 );\n\t\t\t\treturn ( index >= 0 ? index - 1 : index + len / 2 ) * 2;\n\n\t\t\t},\n\n\t\t\taddVertex: function ( a, b, c ) {\n\n\t\t\t\tvar src = this.vertices;\n\t\t\t\tvar dst = this.object.geometry.vertices;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t\t},\n\n\t\t\taddVertexPoint: function ( a ) {\n\n\t\t\t\tvar src = this.vertices;\n\t\t\t\tvar dst = this.object.geometry.vertices;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\n\t\t\t},\n\n\t\t\taddVertexLine: function ( a ) {\n\n\t\t\t\tvar src = this.vertices;\n\t\t\t\tvar dst = this.object.geometry.vertices;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\n\t\t\t},\n\n\t\t\taddNormal: function ( a, b, c ) {\n\n\t\t\t\tvar src = this.normals;\n\t\t\t\tvar dst = this.object.geometry.normals;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t\t},\n\n\t\t\taddColor: function ( a, b, c ) {\n\n\t\t\t\tvar src = this.colors;\n\t\t\t\tvar dst = this.object.geometry.colors;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t\t},\n\n\t\t\taddUV: function ( a, b, c ) {\n\n\t\t\t\tvar src = this.uvs;\n\t\t\t\tvar dst = this.object.geometry.uvs;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ] );\n\t\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ] );\n\t\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ] );\n\n\t\t\t},\n\n\t\t\taddUVLine: function ( a ) {\n\n\t\t\t\tvar src = this.uvs;\n\t\t\t\tvar dst = this.object.geometry.uvs;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ] );\n\n\t\t\t},\n\n\t\t\taddFace: function ( a, b, c, ua, ub, uc, na, nb, nc ) {\n\n\t\t\t\tvar vLen = this.vertices.length;\n\n\t\t\t\tvar ia = this.parseVertexIndex( a, vLen );\n\t\t\t\tvar ib = this.parseVertexIndex( b, vLen );\n\t\t\t\tvar ic = this.parseVertexIndex( c, vLen );\n\n\t\t\t\tthis.addVertex( ia, ib, ic );\n\n\t\t\t\tif ( ua !== undefined && ua !== '' ) {\n\n\t\t\t\t\tvar uvLen = this.uvs.length;\n\t\t\t\t\tia = this.parseUVIndex( ua, uvLen );\n\t\t\t\t\tib = this.parseUVIndex( ub, uvLen );\n\t\t\t\t\tic = this.parseUVIndex( uc, uvLen );\n\t\t\t\t\tthis.addUV( ia, ib, ic );\n\n\t\t\t\t}\n\n\t\t\t\tif ( na !== undefined && na !== '' ) {\n\n\t\t\t\t\t// Normals are many times the same. If so, skip function call and parseInt.\n\t\t\t\t\tvar nLen = this.normals.length;\n\t\t\t\t\tia = this.parseNormalIndex( na, nLen );\n\n\t\t\t\t\tib = na === nb ? ia : this.parseNormalIndex( nb, nLen );\n\t\t\t\t\tic = na === nc ? ia : this.parseNormalIndex( nc, nLen );\n\n\t\t\t\t\tthis.addNormal( ia, ib, ic );\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.colors.length > 0 ) {\n\n\t\t\t\t\tthis.addColor( ia, ib, ic );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\taddPointGeometry: function ( vertices ) {\n\n\t\t\t\tthis.object.geometry.type = 'Points';\n\n\t\t\t\tvar vLen = this.vertices.length;\n\n\t\t\t\tfor ( var vi = 0, l = vertices.length; vi < l; vi ++ ) {\n\n\t\t\t\t\tthis.addVertexPoint( this.parseVertexIndex( vertices[ vi ], vLen ) );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\taddLineGeometry: function ( vertices, uvs ) {\n\n\t\t\t\tthis.object.geometry.type = 'Line';\n\n\t\t\t\tvar vLen = this.vertices.length;\n\t\t\t\tvar uvLen = this.uvs.length;\n\n\t\t\t\tfor ( var vi = 0, l = vertices.length; vi < l; vi ++ ) {\n\n\t\t\t\t\tthis.addVertexLine( this.parseVertexIndex( vertices[ vi ], vLen ) );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var uvi = 0, l = uvs.length; uvi < l; uvi ++ ) {\n\n\t\t\t\t\tthis.addUVLine( this.parseUVIndex( uvs[ uvi ], uvLen ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tstate.startObject( '', false );\n\n\t\treturn state;\n\n\t}\n\n\t//\n\n\tfunction OBJLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n\t\tthis.materials = null;\n\n\t}\n\n\tOBJLoader.prototype = {\n\n\t\tconstructor: OBJLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new THREE.FileLoader( scope.manager );\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tonLoad( scope.parse( text ) );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetMaterials: function ( materials ) {\n\n\t\t\tthis.materials = materials;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tparse: function ( text ) {\n\n\t\t\tconsole.time( 'OBJLoader' );\n\n\t\t\tvar state = new ParserState();\n\n\t\t\tif ( text.indexOf( '\\r\\n' ) !== - 1 ) {\n\n\t\t\t\t// This is faster than String.split with regex that splits on both\n\t\t\t\ttext = text.replace( /\\r\\n/g, '\\n' );\n\n\t\t\t}\n\n\t\t\tif ( text.indexOf( '\\\\\\n' ) !== - 1 ) {\n\n\t\t\t\t// join lines separated by a line continuation character (\\)\n\t\t\t\ttext = text.replace( /\\\\\\n/g, '' );\n\n\t\t\t}\n\n\t\t\tvar lines = text.split( '\\n' );\n\t\t\tvar line = '', lineFirstChar = '';\n\t\t\tvar lineLength = 0;\n\t\t\tvar result = [];\n\n\t\t\t// Faster to just trim left side of the line. Use if available.\n\t\t\tvar trimLeft = ( typeof ''.trimLeft === 'function' );\n\n\t\t\tfor ( var i = 0, l = lines.length; i < l; i ++ ) {\n\n\t\t\t\tline = lines[ i ];\n\n\t\t\t\tline = trimLeft ? line.trimLeft() : line.trim();\n\n\t\t\t\tlineLength = line.length;\n\n\t\t\t\tif ( lineLength === 0 ) continue;\n\n\t\t\t\tlineFirstChar = line.charAt( 0 );\n\n\t\t\t\t// @todo invoke passed in handler if any\n\t\t\t\tif ( lineFirstChar === '#' ) continue;\n\n\t\t\t\tif ( lineFirstChar === 'v' ) {\n\n\t\t\t\t\tvar data = line.split( /\\s+/ );\n\n\t\t\t\t\tswitch ( data[ 0 ] ) {\n\n\t\t\t\t\t\tcase 'v':\n\t\t\t\t\t\t\tstate.vertices.push(\n\t\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 2 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 3 ] )\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif ( data.length === 8 ) {\n\n\t\t\t\t\t\t\t\tstate.colors.push(\n\t\t\t\t\t\t\t\t\tparseFloat( data[ 4 ] ),\n\t\t\t\t\t\t\t\t\tparseFloat( data[ 5 ] ),\n\t\t\t\t\t\t\t\t\tparseFloat( data[ 6 ] )\n\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'vn':\n\t\t\t\t\t\t\tstate.normals.push(\n\t\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 2 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 3 ] )\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'vt':\n\t\t\t\t\t\t\tstate.uvs.push(\n\t\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 2 ] )\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( lineFirstChar === 'f' ) {\n\n\t\t\t\t\tvar lineData = line.substr( 1 ).trim();\n\t\t\t\t\tvar vertexData = lineData.split( /\\s+/ );\n\t\t\t\t\tvar faceVertices = [];\n\n\t\t\t\t\t// Parse the face vertex data into an easy to work with format\n\n\t\t\t\t\tfor ( var j = 0, jl = vertexData.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar vertex = vertexData[ j ];\n\n\t\t\t\t\t\tif ( vertex.length > 0 ) {\n\n\t\t\t\t\t\t\tvar vertexParts = vertex.split( '/' );\n\t\t\t\t\t\t\tfaceVertices.push( vertexParts );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Draw an edge between the first vertex and all subsequent vertices to form an n-gon\n\n\t\t\t\t\tvar v1 = faceVertices[ 0 ];\n\n\t\t\t\t\tfor ( var j = 1, jl = faceVertices.length - 1; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar v2 = faceVertices[ j ];\n\t\t\t\t\t\tvar v3 = faceVertices[ j + 1 ];\n\n\t\t\t\t\t\tstate.addFace(\n\t\t\t\t\t\t\tv1[ 0 ], v2[ 0 ], v3[ 0 ],\n\t\t\t\t\t\t\tv1[ 1 ], v2[ 1 ], v3[ 1 ],\n\t\t\t\t\t\t\tv1[ 2 ], v2[ 2 ], v3[ 2 ]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( lineFirstChar === 'l' ) {\n\n\t\t\t\t\tvar lineParts = line.substring( 1 ).trim().split( \" \" );\n\t\t\t\t\tvar lineVertices = [], lineUVs = [];\n\n\t\t\t\t\tif ( line.indexOf( \"/\" ) === - 1 ) {\n\n\t\t\t\t\t\tlineVertices = lineParts;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tfor ( var li = 0, llen = lineParts.length; li < llen; li ++ ) {\n\n\t\t\t\t\t\t\tvar parts = lineParts[ li ].split( \"/\" );\n\n\t\t\t\t\t\t\tif ( parts[ 0 ] !== \"\" ) lineVertices.push( parts[ 0 ] );\n\t\t\t\t\t\t\tif ( parts[ 1 ] !== \"\" ) lineUVs.push( parts[ 1 ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tstate.addLineGeometry( lineVertices, lineUVs );\n\n\t\t\t\t} else if ( lineFirstChar === 'p' ) {\n\n\t\t\t\t\tvar lineData = line.substr( 1 ).trim();\n\t\t\t\t\tvar pointData = lineData.split( \" \" );\n\n\t\t\t\t\tstate.addPointGeometry( pointData );\n\n\t\t\t\t} else if ( ( result = object_pattern.exec( line ) ) !== null ) {\n\n\t\t\t\t\t// o object_name\n\t\t\t\t\t// or\n\t\t\t\t\t// g group_name\n\n\t\t\t\t\t// WORKAROUND: https://bugs.chromium.org/p/v8/issues/detail?id=2869\n\t\t\t\t\t// var name = result[ 0 ].substr( 1 ).trim();\n\t\t\t\t\tvar name = ( \" \" + result[ 0 ].substr( 1 ).trim() ).substr( 1 );\n\n\t\t\t\t\tstate.startObject( name );\n\n\t\t\t\t} else if ( material_use_pattern.test( line ) ) {\n\n\t\t\t\t\t// material\n\n\t\t\t\t\tstate.object.startMaterial( line.substring( 7 ).trim(), state.materialLibraries );\n\n\t\t\t\t} else if ( material_library_pattern.test( line ) ) {\n\n\t\t\t\t\t// mtl file\n\n\t\t\t\t\tstate.materialLibraries.push( line.substring( 7 ).trim() );\n\n\t\t\t\t} else if ( lineFirstChar === 's' ) {\n\n\t\t\t\t\tresult = line.split( ' ' );\n\n\t\t\t\t\t// smooth shading\n\n\t\t\t\t\t// @todo Handle files that have varying smooth values for a set of faces inside one geometry,\n\t\t\t\t\t// but does not define a usemtl for each face set.\n\t\t\t\t\t// This should be detected and a dummy material created (later MultiMaterial and geometry groups).\n\t\t\t\t\t// This requires some care to not create extra material on each smooth value for \"normal\" obj files.\n\t\t\t\t\t// where explicit usemtl defines geometry groups.\n\t\t\t\t\t// Example asset: examples/models/obj/cerberus/Cerberus.obj\n\n\t\t\t\t\t/*\n\t\t\t\t\t * http://paulbourke.net/dataformats/obj/\n\t\t\t\t\t * or\n\t\t\t\t\t * http://www.cs.utah.edu/~boulos/cs3505/obj_spec.pdf\n\t\t\t\t\t *\n\t\t\t\t\t * From chapter \"Grouping\" Syntax explanation \"s group_number\":\n\t\t\t\t\t * \"group_number is the smoothing group number. To turn off smoothing groups, use a value of 0 or off.\n\t\t\t\t\t * Polygonal elements use group numbers to put elements in different smoothing groups. For free-form\n\t\t\t\t\t * surfaces, smoothing groups are either turned on or off; there is no difference between values greater\n\t\t\t\t\t * than 0.\"\n\t\t\t\t\t */\n\t\t\t\t\tif ( result.length > 1 ) {\n\n\t\t\t\t\t\tvar value = result[ 1 ].trim().toLowerCase();\n\t\t\t\t\t\tstate.object.smooth = ( value !== '0' && value !== 'off' );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// ZBrush can produce \"s\" lines #11707\n\t\t\t\t\t\tstate.object.smooth = true;\n\n\t\t\t\t\t}\n\t\t\t\t\tvar material = state.object.currentMaterial();\n\t\t\t\t\tif ( material ) material.smooth = state.object.smooth;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Handle null terminated files without exception\n\t\t\t\t\tif ( line === '\\0' ) continue;\n\n\t\t\t\t\tthrow new Error( 'THREE.OBJLoader: Unexpected line: \"' + line + '\"' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.finalize();\n\n\t\t\tvar container = new THREE.Group();\n\t\t\tcontainer.materialLibraries = [].concat( state.materialLibraries );\n\n\t\t\tfor ( var i = 0, l = state.objects.length; i < l; i ++ ) {\n\n\t\t\t\tvar object = state.objects[ i ];\n\t\t\t\tvar geometry = object.geometry;\n\t\t\t\tvar materials = object.materials;\n\t\t\t\tvar isLine = ( geometry.type === 'Line' );\n\t\t\t\tvar isPoints = ( geometry.type === 'Points' );\n\t\t\t\tvar hasVertexColors = false;\n\n\t\t\t\t// Skip o/g line declarations that did not follow with any faces\n\t\t\t\tif ( geometry.vertices.length === 0 ) continue;\n\n\t\t\t\tvar buffergeometry = new THREE.BufferGeometry();\n\n\t\t\t\tbuffergeometry.setAttribute( 'position', new THREE.Float32BufferAttribute( geometry.vertices, 3 ) );\n\n\t\t\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\t\t\tbuffergeometry.setAttribute( 'normal', new THREE.Float32BufferAttribute( geometry.normals, 3 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbuffergeometry.computeVertexNormals();\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\t\t\thasVertexColors = true;\n\t\t\t\t\tbuffergeometry.setAttribute( 'color', new THREE.Float32BufferAttribute( geometry.colors, 3 ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.uvs.length > 0 ) {\n\n\t\t\t\t\tbuffergeometry.setAttribute( 'uv', new THREE.Float32BufferAttribute( geometry.uvs, 2 ) );\n\n\t\t\t\t}\n\n\t\t\t\t// Create materials\n\n\t\t\t\tvar createdMaterials = [];\n\n\t\t\t\tfor ( var mi = 0, miLen = materials.length; mi < miLen; mi ++ ) {\n\n\t\t\t\t\tvar sourceMaterial = materials[ mi ];\n\t\t\t\t\tvar material = undefined;\n\n\t\t\t\t\tif ( this.materials !== null ) {\n\n\t\t\t\t\t\tmaterial = this.materials.create( sourceMaterial.name );\n\n\t\t\t\t\t\t// mtl etc. loaders probably can't create line materials correctly, copy properties to a line material.\n\t\t\t\t\t\tif ( isLine && material && ! ( material instanceof THREE.LineBasicMaterial ) ) {\n\n\t\t\t\t\t\t\tvar materialLine = new THREE.LineBasicMaterial();\n\t\t\t\t\t\t\tmaterialLine.copy( material );\n\t\t\t\t\t\t\tmaterialLine.lights = false; // TOFIX\n\t\t\t\t\t\t\tmaterial = materialLine;\n\n\t\t\t\t\t\t} else if ( isPoints && material && ! ( material instanceof THREE.PointsMaterial ) ) {\n\n\t\t\t\t\t\t\tvar materialPoints = new THREE.PointsMaterial( { size: 10, sizeAttenuation: false } );\n\t\t\t\t\t\t\tmaterialLine.copy( material );\n\t\t\t\t\t\t\tmaterial = materialPoints;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! material ) {\n\n\t\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\t\tmaterial = new THREE.LineBasicMaterial();\n\n\t\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\t\tmaterial = new THREE.PointsMaterial( { size: 1, sizeAttenuation: false } );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tmaterial = new THREE.MeshPhongMaterial();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaterial.name = sourceMaterial.name;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterial.flatShading = sourceMaterial.smooth ? false : true;\n\t\t\t\t\tmaterial.vertexColors = hasVertexColors ? THREE.VertexColors : THREE.NoColors;\n\n\t\t\t\t\tcreatedMaterials.push( material );\n\n\t\t\t\t}\n\n\t\t\t\t// Create mesh\n\n\t\t\t\tvar mesh;\n\n\t\t\t\tif ( createdMaterials.length > 1 ) {\n\n\t\t\t\t\tfor ( var mi = 0, miLen = materials.length; mi < miLen; mi ++ ) {\n\n\t\t\t\t\t\tvar sourceMaterial = materials[ mi ];\n\t\t\t\t\t\tbuffergeometry.addGroup( sourceMaterial.groupStart, sourceMaterial.groupCount, mi );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\tmesh = new THREE.LineSegments( buffergeometry, createdMaterials );\n\n\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\tmesh = new THREE.Points( buffergeometry, createdMaterials );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tmesh = new THREE.Mesh( buffergeometry, createdMaterials );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\tmesh = new THREE.LineSegments( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\tmesh = new THREE.Points( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tmesh = new THREE.Mesh( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tmesh.name = object.name;\n\n\t\t\t\tcontainer.add( mesh );\n\n\t\t\t}\n\n\t\t\tconsole.timeEnd( 'OBJLoader' );\n\n\t\t\treturn container;\n\n\t\t}\n\n\t};\n\n\treturn OBJLoader;\n\n} )();\n\nexports.MTLLoader = THREE.MTLLoader;\nexports.OBJLoader = THREE.OBJLoader;\n"],"names":[],"mappings":"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"}