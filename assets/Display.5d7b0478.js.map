{"version":3,"file":"Display.5d7b0478.js","sources":["../../src/pages/Display.vue"],"sourcesContent":["<template>\n  <div id=\"display\"></div>\n</template>\n\n<script setup>\nimport { onMounted } from 'vue';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\n// import { MTLLoader } from 'three/examples/jsm/loaders/MTLLoader.js';\n// import { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader.js';\n\nonMounted(() => {\n  /**\n  * 创建场景对象Scene\n  */\n  const scene = new THREE.Scene();\n  /**\n  * OBJ和材质文件mtl加载\n  */\n  const loader = new GLTFLoader();\n\n  loader.load(\n    './model/file.gltf',\n    (gltf) => {\n      console.log({ gltf });\n      scene.add(gltf.scene);\n\n      // const box3 = new THREE.Box3();\n      // box3.expandByObject(gltf.scene);// 计算模型gltf.scen包围盒\n      // console.log('查看包围盒box3', box3);\n\n      // const v3 = new THREE.Vector3();\n      // // 获得包围盒长宽高尺寸，结果保存在参数三维向量对象v3中\n      // box3.getSize(v3);\n      // console.log('查看返回的包围盒尺寸', v3);\n\n      const mesh = gltf.scene.getObjectByName('file002');\n      // const mesh = gltf.scene.getObjectByName('手机');\n      console.log('mesh:', mesh);\n      mesh.scale.set(50, 50, 50);\n      const texLoader = new THREE.TextureLoader();\n      mesh.material = new THREE.MeshStandardMaterial({\n        // color:0xffffff,\n        metalness: 1.0, // Mesh表面金属度，默认值0.5\n        roughness: 1.0, // Mesh表面粗糙度，默认值0.5\n        map: texLoader.load('./model/basecolor.png'), // 颜色贴图\n        // 金属度、粗糙度贴图表示的值会和金属度、粗糙度分别相乘\n        roughnessMap: texLoader.load('./model/roughness.png'), // 粗糙度贴图\n        metalnessMap: texLoader.load('./model/metallic.png'), // 金属度贴图\n        normalMap: texLoader.load('./model/normal.png'), // 法线贴图\n        // 相机镜头等位置需要设置半透明效果(设置alphaMap和transparent属性)\n        alphaMap: texLoader.load('./model/opacity.png'), // alpha贴图\n        transparent: true, // 使用alphaMap，注意开启透明计算\n      });\n      // 注意：纹理朝向texture.flipY设置\n      mesh.material.map.flipY = false;\n      mesh.material.normalMap.flipY = false;\n      mesh.material.metalnessMap.flipY = false;\n      mesh.material.roughnessMap.flipY = false;\n      mesh.material.alphaMap.flipY = false;\n    },\n  );\n\n  // const mtlLoader = new MTLLoader();\n\n  // const objLoader = new OBJLoader();\n\n  // mtlLoader.load('./model/file.mtl', (materials) => {\n  //   // 返回一个包含材质的对象MaterialCreator\n  //   materials.preload();\n  //   // obj的模型会和MaterialCreator包含的材质对应起来\n  //   console.log({ materials });\n  //   objLoader.setMaterials(materials);\n  //   objLoader.load('./model/file.obj', (obj) => {\n  //     console.log({ obj });\n  //     obj.scale.set(100, 100, 100); // 放大obj组对象\n  //     scene.add(obj);// 返回的组对象插入场景中\n  //   });\n  // });\n\n  /**\n    * 光源设置\n    */\n  // 平行光1\n  const directionalLight = new THREE.DirectionalLight(0xffffff, 0.8);\n  directionalLight.position.set(400, 200, 300);\n  scene.add(directionalLight);\n  // 平行光2\n  const directionalLight2 = new THREE.DirectionalLight(0xffffff, 0.8);\n  directionalLight2.position.set(-400, -200, -300);\n  scene.add(directionalLight2);\n  // 环境光\n  // const ambient = new THREE.AmbientLight(0xffffff, 2.9);\n  // scene.add(ambient);\n  // 点光源\n  const point = new THREE.PointLight(0xffffff);\n  point.position.set(400, 200, 300); // 点光源位置\n  scene.add(point); // 点光源添加到场景中\n  // 环境光\n  const ambient = new THREE.AmbientLight(0x444444);\n  scene.add(ambient);\n  /**\n    * 相机设置\n    */\n  const width = window.innerWidth; // 窗口宽度\n  const height = window.innerHeight - 50; // 窗口高度\n  const k = width / height; // 窗口宽高比\n  const s = 200; // 三维场景显示范围控制系数，系数越大，显示的范围越大\n  // 创建相机对象\n  const camera = new THREE.OrthographicCamera(-s * k, s * k, s, -s, 1, 1000);\n  camera.position.set(100, 100, 100); // 设置相机位置\n  camera.lookAt(scene.position); // 设置相机方向(指向的场景对象)\n  /**\n    * 创建渲染器对象\n    */\n  const renderer = new THREE.WebGLRenderer({\n    antialias: true,\n  });\n  renderer.setSize(width, height); // 设置渲染区域尺寸\n  renderer.setClearColor(0xb9d3ff, 1); // 设置背景颜色\n  const storeElement = document.getElementById('display');\n  if (storeElement) storeElement.appendChild(renderer.domElement);\n\n  const onWindowResize = () => {\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    camera.aspect = window.innerWidth / (window.innerHeight - 50);\n    camera.updateProjectionMatrix();\n  };\n\n  window.addEventListener('resize', onWindowResize, false);\n  console.log({ scene });\n  // 渲染函数\n  const render = () => {\n    renderer.render(scene, camera); // 执行渲染操作\n    requestAnimationFrame(render); // 请求再次执行渲染函数render，渲染下一帧\n  };\n\n  render();\n\n  // eslint-disable-next-line no-new\n  new OrbitControls(camera, renderer.domElement);\n});\n</script>\n\n<style scoped>\n#display {\n  height: calc(100vh - 50px);\n}\n</style>\n"],"names":["THREE.Scene","THREE.TextureLoader","THREE.MeshStandardMaterial","THREE.DirectionalLight","THREE.PointLight","THREE.AmbientLight","THREE.OrthographicCamera","THREE.WebGLRenderer"],"mappings":"sRAYA,SAAU,IAAM,CAId,KAAM,GAAQ,GAAIA,GAMlB,AAFe,GAAI,KAEZ,KACL,oBACA,AAAC,GAAS,CACR,QAAQ,IAAI,CAAE,MAAI,CAAE,EACpB,EAAM,IAAI,EAAK,KAAK,EAWpB,KAAM,GAAO,EAAK,MAAM,gBAAgB,SAAS,EAEjD,QAAQ,IAAI,QAAS,CAAI,EACzB,EAAK,MAAM,IAAI,GAAI,GAAI,EAAE,EACzB,KAAM,GAAY,GAAIC,GACtB,EAAK,SAAW,GAAIC,GAA2B,CAE7C,UAAW,EACX,UAAW,EACX,IAAK,EAAU,KAAK,uBAAuB,EAE3C,aAAc,EAAU,KAAK,uBAAuB,EACpD,aAAc,EAAU,KAAK,sBAAsB,EACnD,UAAW,EAAU,KAAK,oBAAoB,EAE9C,SAAU,EAAU,KAAK,qBAAqB,EAC9C,YAAa,EACrB,CAAO,EAED,EAAK,SAAS,IAAI,MAAQ,GAC1B,EAAK,SAAS,UAAU,MAAQ,GAChC,EAAK,SAAS,aAAa,MAAQ,GACnC,EAAK,SAAS,aAAa,MAAQ,GACnC,EAAK,SAAS,SAAS,MAAQ,EAChC,CACL,EAuBE,KAAM,GAAmB,GAAIC,GAAuB,SAAU,EAAG,EACjE,EAAiB,SAAS,IAAI,IAAK,IAAK,GAAG,EAC3C,EAAM,IAAI,CAAgB,EAE1B,KAAM,GAAoB,GAAIA,GAAuB,SAAU,EAAG,EAClE,EAAkB,SAAS,IAAI,KAAM,KAAM,IAAI,EAC/C,EAAM,IAAI,CAAiB,EAK3B,KAAM,GAAQ,GAAIC,GAAiB,QAAQ,EAC3C,EAAM,SAAS,IAAI,IAAK,IAAK,GAAG,EAChC,EAAM,IAAI,CAAK,EAEf,KAAM,GAAU,GAAIC,GAAmB,OAAQ,EAC/C,EAAM,IAAI,CAAO,EAIjB,KAAM,GAAQ,OAAO,WACf,EAAS,OAAO,YAAc,GAC9B,EAAI,EAAQ,EACZ,EAAI,IAEJ,EAAS,GAAIC,GAAyB,CAAC,EAAI,EAAG,EAAI,EAAG,EAAG,CAAC,EAAG,EAAG,GAAI,EACzE,EAAO,SAAS,IAAI,IAAK,IAAK,GAAG,EACjC,EAAO,OAAO,EAAM,QAAQ,EAI5B,KAAM,GAAW,GAAIC,GAAoB,CACvC,UAAW,EACf,CAAG,EACD,EAAS,QAAQ,EAAO,CAAM,EAC9B,EAAS,cAAc,SAAU,CAAC,EAClC,KAAM,GAAe,SAAS,eAAe,SAAS,EACtD,AAAI,GAAc,EAAa,YAAY,EAAS,UAAU,EAE9D,KAAM,GAAiB,IAAM,CAC3B,EAAS,QAAQ,OAAO,WAAY,OAAO,WAAW,EACtD,EAAO,OAAS,OAAO,WAAc,QAAO,YAAc,IAC1D,EAAO,uBAAsB,CACjC,EAEE,OAAO,iBAAiB,SAAU,EAAgB,EAAK,EACvD,QAAQ,IAAI,CAAE,OAAK,CAAE,EAErB,KAAM,GAAS,IAAM,CACnB,EAAS,OAAO,EAAO,CAAM,EAC7B,sBAAsB,CAAM,CAChC,EAEE,IAGA,GAAI,GAAc,EAAQ,EAAS,UAAU,CAC/C,CAAC"}